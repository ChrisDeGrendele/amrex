<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1FillPatchIterator" kind="class" language="C++" prot="public">
    <compoundname>amrex::FillPatchIterator</compoundname>
    <basecompoundref refid="classamrex_1_1MFIter" prot="public" virt="non-virtual">amrex::MFIter</basecompoundref>
    <includes refid="AMReX__AmrLevel_8H" local="no">AMReX_AmrLevel.H</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1FillPatchIterator_1ade3e9c0f92befd31e9f3991e09e56ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class AmrLevel</definition>
        <argsstring></argsstring>
        <name>AmrLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="476" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="476" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1a46fe436cf49ee7a1d997483554a1966a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
        <definition>AmrLevel&amp; amrex::FillPatchIterator::m_amrlevel</definition>
        <argsstring></argsstring>
        <name>m_amrlevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="621" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1ad4440122fa2d2e2f66a50fba97d62586" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab&amp; amrex::FillPatchIterator::m_leveldata</definition>
        <argsstring></argsstring>
        <name>m_leveldata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="622" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1a33de9fa05506431fd65c4134ce8ce573" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; int, int &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt;int,int&gt; &gt; amrex::FillPatchIterator::m_range</definition>
        <argsstring></argsstring>
        <name>m_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="623" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1ab816646d06cbb8bde38ec73d3cad1303" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::FillPatchIterator::m_fabs</definition>
        <argsstring></argsstring>
        <name>m_fabs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="624" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1a7614b1bf508cfb79fd233bf3c7527b00" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::FillPatchIterator::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="625" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="625" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1aebdca878a23ab164decbcdd3bc1a9a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata)</argsstring>
        <name>FillPatchIterator</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="478" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="620" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1aadd026240dc35d11a31ed27a8044f4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata, int boxGrow, Real time, int state_indx, int scomp, int ncomp)</argsstring>
        <name>FillPatchIterator</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="481" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="650" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1af5802a6775fcd2b458844dc37c1c6f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIterator::Initialize</definition>
        <argsstring>(int boxGrow, Real time, int state_indx, int scomp, int ncomp)</argsstring>
        <name>Initialize</name>
        <param>
          <type>int</type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="489" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="932" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a11cdfec72e349c0312a44f1238e209d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::~FillPatchIterator</definition>
        <argsstring>()</argsstring>
        <name>~FillPatchIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="495" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1457" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1af62d2ed31b36cd235ae68b0edd95a51a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>FArrayBox&amp; amrex::FillPatchIterator::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="497" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="497" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a8b28e83d795edcadebe049e773b4a136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::FillPatchIterator::UngrownBox</definition>
        <argsstring>() const </argsstring>
        <name>UngrownBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="499" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="499" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a161ed2f81f0688e54464bbde6f6e12e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab&amp; amrex::FillPatchIterator::get_mf</definition>
        <argsstring>()</argsstring>
        <name>get_mf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="501" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="501" bodyend="501"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a4f7ab2de501c939a837ce864ec0cb513" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>()</argsstring>
        <name>FillPatchIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a4f431029cd9fd851184dbe10107ff273" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>(const FillPatchIterator &amp;rhs)</argsstring>
        <name>FillPatchIterator</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIterator" kindref="compound">FillPatchIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="612" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1aa65703406becd33b424efc5a298d7f64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillPatchIterator" kindref="compound">FillPatchIterator</ref> &amp;</type>
        <definition>FillPatchIterator&amp; amrex::FillPatchIterator::operator=</definition>
        <argsstring>(const FillPatchIterator &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIterator" kindref="compound">FillPatchIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1af7335d2d909e39e4921f9ca699e52b0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIterator::FillFromLevel0</definition>
        <argsstring>(Real time, int index, int scomp, int dcomp, int ncomp)</argsstring>
        <name>FillFromLevel0</name>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="615" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1045" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1ac1229b67deb9f544baff571f5d76593f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIterator::FillFromTwoLevels</definition>
        <argsstring>(Real time, int index, int scomp, int dcomp, int ncomp)</argsstring>
        <name>FillFromTwoLevels</name>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="616" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1063" bodyend="1100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2046">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
      </node>
      <node id="2045">
        <label>amrex::FillPatchIterator</label>
        <link refid="classamrex_1_1FillPatchIterator"/>
        <childnode refid="2046" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2097">
        <label>amrex::LevelBld</label>
        <link refid="classamrex_1_1LevelBld"/>
      </node>
      <node id="2071">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="2083">
        <label>std::vector&lt; amrex::BoxArray, std::allocator&lt; amrex::BoxArray &gt; &gt;</label>
      </node>
      <node id="2048">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
        <childnode refid="2049" relation="usage">
          <edgelabel>fabArray</edgelabel>
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>index_map</edgelabel>
          <edgelabel>local_index_map</edgelabel>
          <edgelabel>local_tile_index_map</edgelabel>
          <edgelabel>num_local_tiles</edgelabel>
        </childnode>
        <childnode refid="2063" relation="usage">
          <edgelabel>tile_array</edgelabel>
        </childnode>
        <childnode refid="2062" relation="usage">
          <edgelabel>typ</edgelabel>
        </childnode>
      </node>
      <node id="2050">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="2051" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2075">
        <label>amrex::AmrLevel</label>
        <link refid="classamrex_1_1AmrLevel"/>
        <childnode refid="2076" relation="usage">
          <edgelabel>derive_lst</edgelabel>
        </childnode>
        <childnode refid="2077" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="2099" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="2103" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="2105" relation="usage">
          <edgelabel>desc_lst</edgelabel>
        </childnode>
        <childnode refid="2052" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>fine_ratio</edgelabel>
          <edgelabel>crse_ratio</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>m_AreaToTag</edgelabel>
        </childnode>
        <childnode refid="2061" relation="usage">
          <edgelabel>nodal_grids</edgelabel>
          <edgelabel>grids</edgelabel>
          <edgelabel>m_AreaNotToTag</edgelabel>
          <edgelabel>edge_grids</edgelabel>
        </childnode>
      </node>
      <node id="2054">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="2064">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
      </node>
      <node id="2096">
        <label>std::vector&lt; std::unique_ptr&lt; std::fstream &gt;, std::allocator&lt; std::unique_ptr&lt; std::fstream &gt; &gt; &gt;</label>
      </node>
      <node id="2076">
        <label>amrex::DeriveList</label>
        <link refid="classamrex_1_1DeriveList"/>
      </node>
      <node id="2053">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="2053" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="2092">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt; &gt;</label>
      </node>
      <node id="2091">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2092" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2088">
        <label>Real</label>
      </node>
      <node id="2087">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="2078">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="2079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2107">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt; &gt;</label>
      </node>
      <node id="2072">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2094">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="2080">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2081" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2055">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2051">
        <label>string</label>
      </node>
      <node id="2074">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="2053" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="2077">
        <label>amrex::Amr</label>
        <link refid="classamrex_1_1Amr"/>
        <childnode refid="2078" relation="public-inheritance">
        </childnode>
        <childnode refid="2089" relation="usage">
          <edgelabel>dt_min</edgelabel>
          <edgelabel>dt_level</edgelabel>
        </childnode>
        <childnode refid="2091" relation="usage">
          <edgelabel>amr_level</edgelabel>
        </childnode>
        <childnode refid="2093" relation="usage">
          <edgelabel>datalogname</edgelabel>
        </childnode>
        <childnode refid="2095" relation="usage">
          <edgelabel>datalog</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>n_cycle</edgelabel>
          <edgelabel>level_count</edgelabel>
          <edgelabel>regrid_int</edgelabel>
          <edgelabel>level_steps</edgelabel>
        </childnode>
        <childnode refid="2097" relation="usage">
          <edgelabel>levelbld</edgelabel>
        </childnode>
        <childnode refid="2051" relation="usage">
          <edgelabel>small_plot_file_root</edgelabel>
          <edgelabel>initial_grids_file</edgelabel>
          <edgelabel>check_file_root</edgelabel>
          <edgelabel>regrid_grids_file</edgelabel>
          <edgelabel>subcycling_mode</edgelabel>
          <edgelabel>plot_file_root</edgelabel>
          <edgelabel>restart_chkfile</edgelabel>
          <edgelabel>probin_file</edgelabel>
          <edgelabel>restart_pltfile</edgelabel>
        </childnode>
        <childnode refid="2082" relation="usage">
          <edgelabel>regrid_ba</edgelabel>
          <edgelabel>initial_ba</edgelabel>
        </childnode>
        <childnode refid="2098" relation="usage">
          <edgelabel>gridlog</edgelabel>
          <edgelabel>runlog</edgelabel>
          <edgelabel>runlog_terse</edgelabel>
        </childnode>
        <childnode refid="2088" relation="usage">
          <edgelabel>check_per</edgelabel>
          <edgelabel>start_time</edgelabel>
          <edgelabel>small_plot_per</edgelabel>
          <edgelabel>cumtime</edgelabel>
          <edgelabel>plot_per</edgelabel>
          <edgelabel>loadbalance_max_fac</edgelabel>
        </childnode>
      </node>
      <node id="2068">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="2090">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
      </node>
      <node id="2082">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2083" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2067">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2069">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="2081">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="2047">
        <label>amrex::FillPatchIterator</label>
        <link refid="classamrex_1_1FillPatchIterator"/>
        <childnode refid="2048" relation="public-inheritance">
        </childnode>
        <childnode refid="2065" relation="usage">
          <edgelabel>m_leveldata</edgelabel>
          <edgelabel>m_fabs</edgelabel>
        </childnode>
        <childnode refid="2075" relation="usage">
          <edgelabel>m_amrlevel</edgelabel>
        </childnode>
      </node>
      <node id="2084">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2073">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="2095">
        <label>amrex::Vector&lt; std::unique_ptr&lt; std::fstream &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2056">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="2061">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="2053" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="2062" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="2103">
        <label>amrex::Vector&lt; amrex::StateData &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2104" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2101">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="2088" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="2102">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="2053" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="2062" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="2098">
        <label>ofstream</label>
      </node>
      <node id="2059">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="2060" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="2070">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2071" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2104">
        <label>std::vector&lt; amrex::StateData, std::allocator&lt; amrex::StateData &gt; &gt;</label>
      </node>
      <node id="2100">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="2088" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="2062">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="2106">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2060">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="2055" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="2093">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2094" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2105">
        <label>amrex::DescriptorList</label>
        <link refid="classamrex_1_1DescriptorList"/>
        <childnode refid="2106" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
      </node>
      <node id="2052">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="2057">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="2058" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="2059" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="2085">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="2089">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2090" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2065">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="2066" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2099">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="2100" relation="public-inheritance">
        </childnode>
        <childnode refid="2101" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="2086">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2066">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="2049" relation="public-inheritance">
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="2067" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="2069" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="2070" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="2072" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="2074" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="2079">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="2080" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>n_error_buf</edgelabel>
        </childnode>
        <childnode refid="2082" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="2084" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="2086" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="2088" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="2058">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="2063">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2064" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2049">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="2050" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="2052" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="2054" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="2057" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="2061" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" line="473" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="470" bodyend="700"/>
    <listofallmembers>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a96650cf6d7f0f21d0f4b118ae897d008" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>AllBoxes</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ade3e9c0f92befd31e9f3991e09e56ea4" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>AmrLevel</name></member>
      <member refid="classamrex_1_1MFIter_1a65b335b52bc54d9eaf7030a4fce20cf8" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>beginIndex</name></member>
      <member refid="classamrex_1_1MFIter_1abfba09b9f27138141e9758d1a8ea2e4b" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>currentIndex</name></member>
      <member refid="classamrex_1_1MFIter_1aa0e30190e5049564ed6c4d722c4d9f27" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MFIter_1a16fa2d144bcc71d665056de5938c4b32" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>dynamic</name></member>
      <member refid="classamrex_1_1MFIter_1a427faab13c7d1f9d72b476452df519e1" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>endIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a198baf9d7f4a208f217569a0c6f02183" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>fabArray</name></member>
      <member refid="classamrex_1_1MFIter_1ad7d06509805d87abd88522648072e05c" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>fabbox</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1af7335d2d909e39e4921f9ca699e52b0a" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillFromLevel0</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ac1229b67deb9f544baff571f5d76593f" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillFromTwoLevels</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1aebdca878a23ab164decbcdd3bc1a9a20" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1aadd026240dc35d11a31ed27a8044f4e0" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a4f7ab2de501c939a837ce864ec0cb513" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a4f431029cd9fd851184dbe10107ff273" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>Flags</name></member>
      <member refid="classamrex_1_1MFIter_1a1184620f493f560be355cf02e5a0e619" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>flags</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a161ed2f81f0688e54464bbde6f6e12e2" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>get_mf</name></member>
      <member refid="classamrex_1_1MFIter_1ac2dc7f181e0901e36ffb6918b9caa9a4" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a92db306d7f182316e0350bbd82c7c809" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a47910f5a556870e1ba7e2e5734075cb8" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1af72042687093d0139899798b905c245b" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a4d0d4d533f7d916b28e2223f9d4e4f07" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>index</name></member>
      <member refid="classamrex_1_1MFIter_1ac482cbbf5ecee6f2593a3e4437623082" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>index_map</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1af5802a6775fcd2b458844dc37c1c6f29" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1MFIter_1addaa9305a4ee5dda972e835164b70e29" prot="protected" virt="non-virtual" ambiguityscope="amrex::MFIter::"><scope>amrex::FillPatchIterator</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1MFIter_1ad1cb993a973d541776b06c959d1ae3cd" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>isValid</name></member>
      <member refid="classamrex_1_1MFIter_1a5fac49b957fa7be5d08f86899d6ce37a" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>length</name></member>
      <member refid="classamrex_1_1MFIter_1a8a8cdb1fbae0dace9fcc0dc622c3409d" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>local_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1a72828c9a333be0dfff3e89e350fd0e11" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>local_tile_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1a0287cec92e00fb111b559123590206f8" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>LocalIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a16c99a93d11fc7240730f332e2586b9b" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>LocalTileIndex</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a46fe436cf49ee7a1d997483554a1966a" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_amrlevel</name></member>
      <member refid="classamrex_1_1MFIter_1ab32b9180b7d33b0f9afdc25e9b14bd3e" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_fa</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ab816646d06cbb8bde38ec73d3cad1303" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_fabs</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ad4440122fa2d2e2f66a50fba97d62586" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_leveldata</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a7614b1bf508cfb79fd233bf3c7527b00" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a33de9fa05506431fd65c4134ce8ce573" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_range</name></member>
      <member refid="classamrex_1_1MFIter_1aac055187a5b4d7200fc77827dc28a76c" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ae7623281ac9e772db1fc5085a64aeeca" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a1d9668de99635aa50096d0f091d8b9b0" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a830e42aee76ec9fe8dae8bdd262e0b2d" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ad7a19e95ba128febb94b27d2a9d97ef1" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a970e636bf6a2d744068483806ddb7944" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a2c0a016e1d5d69073f2cab81e7c6a095" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1aecfd3f3ef12e8703caad5794968ff06a" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a66b92b6dbfbe1a498ba614df28817709" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a07296b12634219c4a15337435852a67b" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>nextDynamicIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a9c69e3a5196ec1466c349566cada2a2b" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>nodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38af1e51da50b24860035a3665786fe9d14" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>NoTeamBarrier</name></member>
      <member refid="classamrex_1_1MFIter_1a967c3c48ccb4f316911d06fcaccb29fa" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>num_local_tiles</name></member>
      <member refid="classamrex_1_1MFIter_1af2fd15d47b733fec41ff3ed293b6ccb9" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>numLocalTiles</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1af62d2ed31b36cd235ae68b0edd95a51a" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>operator()</name></member>
      <member refid="classamrex_1_1MFIter_1ad163462bff3679b60d12d6a92f3a69f6" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>operator++</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1aa65703406becd33b424efc5a298d7f64" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a30a84aa6392dc4536c6761c0cf72b097" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>SkipInit</name></member>
      <member refid="classamrex_1_1MFIter_1a0d943179eca5b0805f3a42e183a666cd" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>theFabArrayBase</name></member>
      <member refid="classamrex_1_1MFIter_1a10b2f0f6900d23295fe25fd526153f43" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tile_array</name></member>
      <member refid="classamrex_1_1MFIter_1ae64d80e0b2d14e9209c426a0654e8a1f" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1MFIter_1a5ee5aa32becbbb2490764c1b59399bf2" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a38d6ae3b5ed3802c272809feb7eb4168" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a34fd1729c06d788a8a7fc1e706832501" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a84a7a1c6a16dd352f210e4a66ee8a138" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a1db74b1bbdeb756077e4bc33e25a2740" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>Tiling</name></member>
      <member refid="classamrex_1_1MFIter_1a1406cbb9152b357a39e877b78eb8ff0d" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>typ</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a8b28e83d795edcadebe049e773b4a136" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>UngrownBox</name></member>
      <member refid="classamrex_1_1MFIter_1a3b646c3a8d9530997d5804769c47b335" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>validbox</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a11cdfec72e349c0312a44f1238e209d6" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>~FillPatchIterator</name></member>
      <member refid="classamrex_1_1MFIter_1aac3223d243bff8f86cbd227b8f1af866" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>~MFIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
