<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1EB2_1_1IndexSpace" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>amrex::EB2::IndexSpace</compoundname>
    <derivedcompoundref refid="classamrex_1_1EB2_1_1IndexSpaceImp" prot="public" virt="non-virtual">amrex::EB2::IndexSpaceImp&lt; G &gt;</derivedcompoundref>
    <includes refid="AMReX__EB2_8H" local="no">AMReX_EB2.H</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1IndexSpace_1a8d0ae0b87400d58e5fe0e17e947b8f9f" prot="protected" static="yes" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> &gt; &gt;</type>
        <definition>Vector&lt; std::unique_ptr&lt; IndexSpace &gt; &gt; amrex::EB2::IndexSpace::m_instance</definition>
        <argsstring></argsstring>
        <name>m_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1ac4076fe625fa22e660fed58771f6b2d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::EB2::IndexSpace::~IndexSpace</definition>
        <argsstring>()</argsstring>
        <name>~IndexSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="28" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1a71aa6d39a145bc12424b2fc6c9a7e015" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">Level</ref> &amp;</type>
        <definition>virtual const Level&amp; amrex::EB2::IndexSpace::getLevel</definition>
        <argsstring>(const Geometry &amp;geom) const =0</argsstring>
        <name>getLevel</name>
        <reimplementedby refid="classamrex_1_1EB2_1_1IndexSpaceImp_1a1eeaab4266c11166a3072eea2f888f52">getLevel</reimplementedby>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1a7795703119c27937004c54f50532a369" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
        <definition>virtual const Box&amp; amrex::EB2::IndexSpace::coarsestDomain</definition>
        <argsstring>() const =0</argsstring>
        <name>coarsestDomain</name>
        <reimplementedby refid="classamrex_1_1EB2_1_1IndexSpaceImp_1aeb660db350d2d8ea329bdbd72e6f258d">coarsestDomain</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="38" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1a58ac3a8fea70064dd6fe75c8808f07d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::EB2::IndexSpace::push</definition>
        <argsstring>(IndexSpace *ispace)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> *</type>
          <declname>ispace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1a2eb8612a6d6b28efe5c3e02b24e1972a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::EB2::IndexSpace::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="31" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1a12188b1089e12d80bb6c9b26c0a65c15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::EB2::IndexSpace::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="32" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1ad17160a9839f2d64ac20460b4cefbaee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">IndexSpace</ref> &amp;</type>
        <definition>static const IndexSpace&amp; amrex::EB2::IndexSpace::top</definition>
        <argsstring>()</argsstring>
        <name>top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1afe89438e3ebb36ca54134d16069ed21f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool amrex::EB2::IndexSpace::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="34" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1IndexSpace_1a10300c7aac1d8cbf6a42b40d09004809" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int amrex::EB2::IndexSpace::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="35" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3361">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
      </node>
      <node id="3362">
        <label>amrex::EB2::IndexSpaceImp&lt; G &gt;</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpaceImp"/>
        <childnode refid="3361" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3363">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="3364" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="3365">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt; &gt;</label>
      </node>
      <node id="3364">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3365" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H" bodystart="25" bodyend="42"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a12188b1089e12d80bb6c9b26c0a65c15" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>clear</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a7795703119c27937004c54f50532a369" prot="public" virt="pure-virtual"><scope>amrex::EB2::IndexSpace</scope><name>coarsestDomain</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1afe89438e3ebb36ca54134d16069ed21f" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>empty</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a71aa6d39a145bc12424b2fc6c9a7e015" prot="public" virt="pure-virtual"><scope>amrex::EB2::IndexSpace</scope><name>getLevel</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a8d0ae0b87400d58e5fe0e17e947b8f9f" prot="protected" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>m_instance</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a2eb8612a6d6b28efe5c3e02b24e1972a" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>pop</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a58ac3a8fea70064dd6fe75c8808f07d8" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>push</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1a10300c7aac1d8cbf6a42b40d09004809" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>size</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1ad17160a9839f2d64ac20460b4cefbaee" prot="public" virt="non-virtual"><scope>amrex::EB2::IndexSpace</scope><name>top</name></member>
      <member refid="classamrex_1_1EB2_1_1IndexSpace_1ac4076fe625fa22e660fed58771f6b2d5" prot="public" virt="virtual"><scope>amrex::EB2::IndexSpace</scope><name>~IndexSpace</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
