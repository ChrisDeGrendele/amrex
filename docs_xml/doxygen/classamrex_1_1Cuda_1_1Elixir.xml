<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Cuda_1_1Elixir" kind="class" language="C++" prot="public">
    <compoundname>amrex::Cuda::Elixir</compoundname>
    <includes refid="AMReX__CudaElixir_8H" local="no">AMReX_CudaElixir.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Cuda_1_1Elixir_1aa39b24f61ed5fd0c21b5066f4a3ad940" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* amrex::Cuda::Elixir::m_p</definition>
        <argsstring></argsstring>
        <name>m_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Cuda_1_1Elixir_1a9272c097376103466ed8063fde8220de" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
        <definition>Arena* amrex::Cuda::Elixir::m_arena</definition>
        <argsstring></argsstring>
        <name>m_arena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a07e2d5e8502fcf284a3199915dccc92d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::Elixir::Elixir</definition>
        <argsstring>()</argsstring>
        <name>Elixir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="13" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a5bad4728f0ded19bddd14c1a82dcc9e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::Elixir::Elixir</definition>
        <argsstring>(void *p, Arena *arena)</argsstring>
        <name>Elixir</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref> *</type>
          <declname>arena</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a733a6b4209dc561395a580f7b1df589d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::Elixir::Elixir</definition>
        <argsstring>(Elixir const &amp;)=delete</argsstring>
        <name>Elixir</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1Elixir" kindref="compound">Elixir</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1acb661ab2b85a69b87ee2a39764e85542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::Elixir::operator=</definition>
        <argsstring>(Elixir const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1Elixir" kindref="compound">Elixir</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a05dbfe634aa2cadfb8eb13fb9a93a05e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::Elixir::Elixir</definition>
        <argsstring>(Elixir &amp;&amp;rhs)</argsstring>
        <name>Elixir</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1Elixir" kindref="compound">Elixir</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a08d8a3cc5aaa53c169b93d50a0283ddf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::Elixir::operator=</definition>
        <argsstring>(Elixir &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1Elixir" kindref="compound">Elixir</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="27" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a431dead75b6711e27ec75ae2aa1efa22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::Elixir::~Elixir</definition>
        <argsstring>()</argsstring>
        <name>~Elixir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1Elixir_1a4d3088f852931d997769829069dda90e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::Elixir::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.cpp" bodystart="32" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1329">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
      </node>
      <node id="1328">
        <label>amrex::Cuda::Elixir</label>
        <link refid="classamrex_1_1Cuda_1_1Elixir"/>
        <childnode refid="1329" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" line="10" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaElixir.H" bodystart="9" bodyend="43"/>
    <listofallmembers>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a4d3088f852931d997769829069dda90e" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>clear</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a07e2d5e8502fcf284a3199915dccc92d" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a5bad4728f0ded19bddd14c1a82dcc9e9" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a733a6b4209dc561395a580f7b1df589d" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a05dbfe634aa2cadfb8eb13fb9a93a05e" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>Elixir</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a9272c097376103466ed8063fde8220de" prot="private" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>m_arena</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1aa39b24f61ed5fd0c21b5066f4a3ad940" prot="private" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>m_p</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1acb661ab2b85a69b87ee2a39764e85542" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a08d8a3cc5aaa53c169b93d50a0283ddf" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Cuda_1_1Elixir_1a431dead75b6711e27ec75ae2aa1efa22" prot="public" virt="non-virtual"><scope>amrex::Cuda::Elixir</scope><name>~Elixir</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
