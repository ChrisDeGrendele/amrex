<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Cuda_1_1AsyncFabImpl" kind="class" language="C++" prot="public">
    <compoundname>amrex::Cuda::AsyncFabImpl</compoundname>
    <includes refid="AMReX__CudaAsyncFabImpl_8H" local="no">AMReX_CudaAsyncFabImpl.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1aa0e75ee885ed822a664b2540f5944f3b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref></type>
        <definition>FArrayBox amrex::Cuda::AsyncFabImpl::m_cpu_fab</definition>
        <argsstring></argsstring>
        <name>m_cpu_fab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="48" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a284dc4f392fc0354a478a79be46a4f2f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox* amrex::Cuda::AsyncFabImpl::m_cpu_fab_alias</definition>
        <argsstring></argsstring>
        <name>m_cpu_fab_alias</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>()</argsstring>
        <name>AsyncFabImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="14" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a8a063328a4d27218a3a6242be5f6ecda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(Box const &amp;bx, int ncomp)</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="203" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1ae7f33bf5c078ebeec1c18c5ba300e3c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(FArrayBox &amp;a_fab)</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="16" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1ae691630fcb3593007522aa2ad28c202d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(FArrayBox &amp;a_fab, Box const &amp;bx, int ncomp)</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="208" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1d6f0f69d10492cd715cbe21b8f5cab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFabImpl::~AsyncFabImpl</definition>
        <argsstring>()</argsstring>
        <name>~AsyncFabImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="18" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1ab83b526a81fa6b6d6e829735b3869e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFabImpl::AsyncFabImpl</definition>
        <argsstring>(AsyncFabImpl const &amp;)=delete</argsstring>
        <name>AsyncFabImpl</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl" kindref="compound">AsyncFabImpl</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1812378e55d967db8d92dbeefd691322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFabImpl::operator=</definition>
        <argsstring>(AsyncFabImpl const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl" kindref="compound">AsyncFabImpl</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a2586206b1f0bc00c810c80a93391a392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox * amrex::Cuda::AsyncFabImpl::fabPtr</definition>
        <argsstring>() noexcept</argsstring>
        <name>fabPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a5003a0c9e0cd519f8756915e7988cacf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>FArrayBox &amp; amrex::Cuda::AsyncFabImpl::hostFab</definition>
        <argsstring>() noexcept</argsstring>
        <name>hostFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="218" bodyend="218"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1ac633bd55d7f455034101cad0c3c707ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFabImpl::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFabImpl_1a3e314fb91385b6e34cda9ddc0354f57a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFabImpl::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp" bodystart="199" bodyend="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="588">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="586">
        <label>amrex::Cuda::AsyncFabImpl</label>
        <link refid="classamrex_1_1Cuda_1_1AsyncFabImpl"/>
        <childnode refid="587" relation="usage">
          <edgelabel>m_cpu_fab_alias</edgelabel>
          <edgelabel>m_cpu_fab</edgelabel>
        </childnode>
      </node>
      <node id="589">
        <label>amrex::BaseFabData&lt; Real &gt;</label>
        <link refid="structamrex_1_1BaseFabData"/>
        <childnode refid="590" relation="public-inheritance">
        </childnode>
        <childnode refid="591" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="592">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="592" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="595">
        <label>Real</label>
      </node>
      <node id="591">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="592" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="593" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="593">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="594">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="590">
        <label>amrex::FabAllocator</label>
        <link refid="structamrex_1_1FabAllocator"/>
      </node>
      <node id="587">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="588" relation="public-inheritance">
        </childnode>
        <childnode refid="594" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="595" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" line="11" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H" bodystart="10" bodyend="52"/>
    <listofallmembers>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a8a063328a4d27218a3a6242be5f6ecda" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ae7f33bf5c078ebeec1c18c5ba300e3c4" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ae691630fcb3593007522aa2ad28c202d" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ab83b526a81fa6b6d6e829735b3869e3f" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>AsyncFabImpl</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a2586206b1f0bc00c810c80a93391a392" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a3e314fb91385b6e34cda9ddc0354f57a" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a5003a0c9e0cd519f8756915e7988cacf" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>hostFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ac633bd55d7f455034101cad0c3c707ac" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1aa0e75ee885ed822a664b2540f5944f3b" prot="private" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>m_cpu_fab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a284dc4f392fc0354a478a79be46a4f2f" prot="private" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>m_cpu_fab_alias</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1812378e55d967db8d92dbeefd691322" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1d6f0f69d10492cd715cbe21b8f5cab2" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFabImpl</scope><name>~AsyncFabImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
