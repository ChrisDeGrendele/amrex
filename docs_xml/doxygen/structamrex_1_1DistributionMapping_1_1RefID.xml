<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1DistributionMapping_1_1RefID" kind="struct" language="C++" prot="public">
    <compoundname>amrex::DistributionMapping::RefID</compoundname>
    <includes refid="AMReX__DistributionMapping_8H" local="no">AMReX_DistributionMapping.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1DistributionMapping_1_1RefID_1a83d7d3288a3b51ffca12886346794042" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1DistributionMapping_1_1Ref" kindref="compound">Ref</ref> *</type>
        <definition>Ref* amrex::DistributionMapping::RefID::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="271" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1aa6f3c236221a9f300733d31a0380b418" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::RefID::RefID</definition>
        <argsstring>()</argsstring>
        <name>RefID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="262" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1a5c2a864f0025bd04c4e60adbdb2ad792" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::DistributionMapping::RefID::RefID</definition>
        <argsstring>(Ref *data_)</argsstring>
        <name>RefID</name>
        <param>
          <type><ref refid="structamrex_1_1DistributionMapping_1_1Ref" kindref="compound">Ref</ref> *</type>
          <declname>data_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="263" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1aa388896293e8668450b838b32e49501f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::DistributionMapping::RefID::operator&lt;</definition>
        <argsstring>(const RefID &amp;rhs) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="264" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1afc293cbc52e43d272819a2917b1c4fae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::DistributionMapping::RefID::operator==</definition>
        <argsstring>(const RefID &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="265" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1ad58785ef35db39c53347fdbb8cc14470" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::DistributionMapping::RefID::operator!=</definition>
        <argsstring>(const RefID &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="266" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1aae919d83758235f1a0d37558f783a8e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1DistributionMapping_1_1Ref" kindref="compound">Ref</ref> *</type>
        <definition>const Ref* amrex::DistributionMapping::RefID::dataPtr</definition>
        <argsstring>() const </argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="267" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DistributionMapping_1_1RefID_1abaacb906f16cc96b34ddcf2710942d9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::DistributionMapping::RefID::PrintPtr</definition>
        <argsstring>(std::ostream &amp;os) const </argsstring>
        <name>PrintPtr</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="268" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="268" bodyend="268"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1DistributionMapping_1_1RefID_1a27efe3d5f7340241a0b4d2e2df7814b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const RefID &amp;id)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">RefID</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="269" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp" bodystart="1584" bodyend="1588"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4877">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4878" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4878">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="4875">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="4876" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="4876">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="4877" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" line="261" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.H" bodystart="261" bodyend="272"/>
    <listofallmembers>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a83d7d3288a3b51ffca12886346794042" prot="private" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>data</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1aae919d83758235f1a0d37558f783a8e8" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1ad58785ef35db39c53347fdbb8cc14470" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1aa388896293e8668450b838b32e49501f" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator&lt;</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a27efe3d5f7340241a0b4d2e2df7814b1" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator&lt;&lt;</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1afc293cbc52e43d272819a2917b1c4fae" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>operator==</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1abaacb906f16cc96b34ddcf2710942d9b" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>PrintPtr</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1aa6f3c236221a9f300733d31a0380b418" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>RefID</name></member>
      <member refid="structamrex_1_1DistributionMapping_1_1RefID_1a5c2a864f0025bd04c4e60adbdb2ad792" prot="public" virt="non-virtual"><scope>amrex::DistributionMapping::RefID</scope><name>RefID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
