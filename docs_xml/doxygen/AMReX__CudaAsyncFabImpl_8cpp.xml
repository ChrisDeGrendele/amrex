<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__CudaAsyncFabImpl_8cpp" kind="file" language="C++">
    <compoundname>AMReX_CudaAsyncFabImpl.cpp</compoundname>
    <includes refid="AMReX__CudaAsyncFabImpl_8H" local="no">AMReX_CudaAsyncFabImpl.H</includes>
    <incdepgraph>
      <node id="12690">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12691" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12638" relation="include">
        </childnode>
      </node>
      <node id="12705">
        <label>iomanip</label>
      </node>
      <node id="12654">
        <label>functional</label>
      </node>
      <node id="12686">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12666" relation="include">
        </childnode>
        <childnode refid="12681" relation="include">
        </childnode>
        <childnode refid="12687" relation="include">
        </childnode>
        <childnode refid="12659" relation="include">
        </childnode>
        <childnode refid="12668" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
      </node>
      <node id="12674">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
        <childnode refid="12639" relation="include">
        </childnode>
      </node>
      <node id="12642">
        <label>limits</label>
      </node>
      <node id="12673">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="12655" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
      </node>
      <node id="12628">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp</label>
        <link refid="AMReX_CudaAsyncFabImpl.cpp"/>
        <childnode refid="12629" relation="include">
        </childnode>
      </node>
      <node id="12702">
        <label>AMReX_CudaReduce.H</label>
        <link refid="AMReX__CudaReduce_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12680" relation="include">
        </childnode>
      </node>
      <node id="12706">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12703" relation="include">
        </childnode>
      </node>
      <node id="12632">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="12633" relation="include">
        </childnode>
        <childnode refid="12634" relation="include">
        </childnode>
        <childnode refid="12635" relation="include">
        </childnode>
        <childnode refid="12638" relation="include">
        </childnode>
        <childnode refid="12639" relation="include">
        </childnode>
        <childnode refid="12659" relation="include">
        </childnode>
        <childnode refid="12660" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12661" relation="include">
        </childnode>
      </node>
      <node id="12688">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="12681" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12666" relation="include">
        </childnode>
        <childnode refid="12651" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12689" relation="include">
        </childnode>
      </node>
      <node id="12639">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="12633" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12641" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
        <childnode refid="12643" relation="include">
        </childnode>
        <childnode refid="12644" relation="include">
        </childnode>
        <childnode refid="12638" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12637" relation="include">
        </childnode>
        <childnode refid="12649" relation="include">
        </childnode>
      </node>
      <node id="12651">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12638" relation="include">
        </childnode>
        <childnode refid="12652" relation="include">
        </childnode>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12654" relation="include">
        </childnode>
        <childnode refid="12655" relation="include">
        </childnode>
        <childnode refid="12656" relation="include">
        </childnode>
      </node>
      <node id="12675">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="12679">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="12680" relation="include">
        </childnode>
        <childnode refid="12655" relation="include">
        </childnode>
      </node>
      <node id="12657">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="12644" relation="include">
        </childnode>
        <childnode refid="12658" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
      </node>
      <node id="12704">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="12694" relation="include">
        </childnode>
        <childnode refid="12691" relation="include">
        </childnode>
        <childnode refid="12705" relation="include">
        </childnode>
        <childnode refid="12651" relation="include">
        </childnode>
        <childnode refid="12690" relation="include">
        </childnode>
        <childnode refid="12689" relation="include">
        </childnode>
      </node>
      <node id="12641">
        <label>cmath</label>
      </node>
      <node id="12708">
        <label>AMReX_CudaAsyncArray.H</label>
        <link refid="AMReX__CudaAsyncArray_8H"/>
        <childnode refid="12666" relation="include">
        </childnode>
        <childnode refid="12709" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12665" relation="include">
        </childnode>
        <childnode refid="12663" relation="include">
        </childnode>
        <childnode refid="12700" relation="include">
        </childnode>
      </node>
      <node id="12653">
        <label>stdexcept</label>
      </node>
      <node id="12698">
        <label>numeric</label>
      </node>
      <node id="12668">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="12633" relation="include">
        </childnode>
        <childnode refid="12639" relation="include">
        </childnode>
        <childnode refid="12659" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
      </node>
      <node id="12667">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="12641" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12644" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
        <childnode refid="12643" relation="include">
        </childnode>
        <childnode refid="12634" relation="include">
        </childnode>
        <childnode refid="12637" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12668" relation="include">
        </childnode>
        <childnode refid="12669" relation="include">
        </childnode>
        <childnode refid="12670" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12673" relation="include">
        </childnode>
        <childnode refid="12674" relation="include">
        </childnode>
        <childnode refid="12675" relation="include">
        </childnode>
        <childnode refid="12676" relation="include">
        </childnode>
      </node>
      <node id="12655">
        <label>string</label>
      </node>
      <node id="12703">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="12681" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
        <childnode refid="12704" relation="include">
        </childnode>
        <childnode refid="12665" relation="include">
        </childnode>
        <childnode refid="12700" relation="include">
        </childnode>
      </node>
      <node id="12681">
        <label>map</label>
      </node>
      <node id="12691">
        <label>fstream</label>
      </node>
      <node id="12635">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="12636" relation="include">
        </childnode>
      </node>
      <node id="12646">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="12634" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12647" relation="include">
        </childnode>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
      </node>
      <node id="12700">
        <label>AMReX_CudaDevice.H</label>
        <link refid="AMReX__CudaDevice_8H"/>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12634" relation="include">
        </childnode>
        <childnode refid="12651" relation="include">
        </childnode>
        <childnode refid="12680" relation="include">
        </childnode>
        <childnode refid="12679" relation="include">
        </childnode>
        <childnode refid="12662" relation="include">
        </childnode>
      </node>
      <node id="12645">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="12637">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="12677">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="12678" relation="include">
        </childnode>
      </node>
      <node id="12683">
        <label>sys/types.h</label>
      </node>
      <node id="12697">
        <label>typeinfo</label>
      </node>
      <node id="12656">
        <label>cstdio</label>
      </node>
      <node id="12663">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="12664" relation="include">
        </childnode>
      </node>
      <node id="12662">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
      </node>
      <node id="12692">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="12693" relation="include">
        </childnode>
        <childnode refid="12655" relation="include">
        </childnode>
        <childnode refid="12647" relation="include">
        </childnode>
        <childnode refid="12694" relation="include">
        </childnode>
        <childnode refid="12656" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12695" relation="include">
        </childnode>
        <childnode refid="12696" relation="include">
        </childnode>
      </node>
      <node id="12684">
        <label>unistd.h</label>
      </node>
      <node id="12629">
        <label>AMReX_CudaAsyncFabImpl.H</label>
        <link refid="AMReX__CudaAsyncFabImpl_8H"/>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12631" relation="include">
        </childnode>
      </node>
      <node id="12693">
        <label>stack</label>
      </node>
      <node id="12658">
        <label>vector</label>
      </node>
      <node id="12710">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12704" relation="include">
        </childnode>
        <childnode refid="12675" relation="include">
        </childnode>
      </node>
      <node id="12650">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="12651" relation="include">
        </childnode>
      </node>
      <node id="12699">
        <label>AMReX_CudaRange.H</label>
        <link refid="AMReX__CudaRange_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12679" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12663" relation="include">
        </childnode>
      </node>
      <node id="12649">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="12647">
        <label>utility</label>
      </node>
      <node id="12634">
        <label>array</label>
      </node>
      <node id="12631">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12667" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
        <childnode refid="12710" relation="include">
        </childnode>
        <childnode refid="12641" relation="include">
        </childnode>
      </node>
      <node id="12694">
        <label>sstream</label>
      </node>
      <node id="12652">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="12653" relation="include">
        </childnode>
      </node>
      <node id="12707">
        <label>AMReX_CudaAsyncFab.H</label>
        <link refid="AMReX__CudaAsyncFab_8H"/>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
      </node>
      <node id="12689">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="12638" relation="include">
        </childnode>
        <childnode refid="12690" relation="include">
        </childnode>
        <childnode refid="12692" relation="include">
        </childnode>
        <childnode refid="12673" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12658" relation="include">
        </childnode>
        <childnode refid="12655" relation="include">
        </childnode>
        <childnode refid="12697" relation="include">
        </childnode>
        <childnode refid="12644" relation="include">
        </childnode>
        <childnode refid="12654" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
        <childnode refid="12698" relation="include">
        </childnode>
      </node>
      <node id="12680">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12655" relation="include">
        </childnode>
        <childnode refid="12681" relation="include">
        </childnode>
        <childnode refid="12682" relation="include">
        </childnode>
        <childnode refid="12664" relation="include">
        </childnode>
        <childnode refid="12683" relation="include">
        </childnode>
        <childnode refid="12684" relation="include">
        </childnode>
        <childnode refid="12685" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12686" relation="include">
        </childnode>
        <childnode refid="12688" relation="include">
        </childnode>
        <childnode refid="12689" relation="include">
        </childnode>
      </node>
      <node id="12665">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12666" relation="include">
        </childnode>
      </node>
      <node id="12660">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="12633" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
        <childnode refid="12649" relation="include">
        </childnode>
      </node>
      <node id="12661">
        <label>AMReX_CudaMemory.H</label>
        <link refid="AMReX__CudaMemory_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12662" relation="include">
        </childnode>
        <childnode refid="12663" relation="include">
        </childnode>
        <childnode refid="12665" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
      </node>
      <node id="12685">
        <label>sys/wait.h</label>
      </node>
      <node id="12633">
        <label>iosfwd</label>
      </node>
      <node id="12640">
        <label>cstdlib</label>
      </node>
      <node id="12696">
        <label>cfenv</label>
      </node>
      <node id="12648">
        <label>iostream</label>
      </node>
      <node id="12659">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="12633" relation="include">
        </childnode>
        <childnode refid="12638" relation="include">
        </childnode>
        <childnode refid="12639" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
      </node>
      <node id="12666">
        <label>cstddef</label>
      </node>
      <node id="12687">
        <label>unordered_map</label>
      </node>
      <node id="12676">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12662" relation="include">
        </childnode>
        <childnode refid="12677" relation="include">
        </childnode>
        <childnode refid="12679" relation="include">
        </childnode>
        <childnode refid="12661" relation="include">
        </childnode>
        <childnode refid="12699" relation="include">
        </childnode>
        <childnode refid="12701" relation="include">
        </childnode>
        <childnode refid="12702" relation="include">
        </childnode>
        <childnode refid="12700" relation="include">
        </childnode>
        <childnode refid="12703" relation="include">
        </childnode>
        <childnode refid="12706" relation="include">
        </childnode>
        <childnode refid="12707" relation="include">
        </childnode>
        <childnode refid="12708" relation="include">
        </childnode>
      </node>
      <node id="12643">
        <label>climits</label>
      </node>
      <node id="12672">
        <label>mutex</label>
      </node>
      <node id="12682">
        <label>chrono</label>
      </node>
      <node id="12695">
        <label>csignal</label>
      </node>
      <node id="12678">
        <label>AMReX_CudaLaunch.H</label>
        <link refid="AMReX__CudaLaunch_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12662" relation="include">
        </childnode>
        <childnode refid="12679" relation="include">
        </childnode>
        <childnode refid="12699" relation="include">
        </childnode>
        <childnode refid="12700" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12637" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12663" relation="include">
        </childnode>
        <childnode refid="12666" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
      </node>
      <node id="12670">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="12666" relation="include">
        </childnode>
        <childnode refid="12671" relation="include">
        </childnode>
        <childnode refid="12658" relation="include">
        </childnode>
        <childnode refid="12672" relation="include">
        </childnode>
        <childnode refid="12665" relation="include">
        </childnode>
      </node>
      <node id="12664">
        <label>type_traits</label>
      </node>
      <node id="12671">
        <label>set</label>
      </node>
      <node id="12669">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="12665" relation="include">
        </childnode>
      </node>
      <node id="12638">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="12644">
        <label>algorithm</label>
      </node>
      <node id="12709">
        <label>cstring</label>
      </node>
      <node id="12630">
        <label>memory</label>
      </node>
      <node id="12701">
        <label>AMReX_CudaUtility.H</label>
        <link refid="AMReX__CudaUtility_8H"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12700" relation="include">
        </childnode>
        <childnode refid="12637" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12641" relation="include">
        </childnode>
      </node>
      <node id="12636">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="12637" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Cuda">amrex::Cuda</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CudaAsyncFabImpl_8H" kindref="compound">AMReX_CudaAsyncFabImpl.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CudaDevice_8H" kindref="compound">AMReX_CudaDevice.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Vector_8H" kindref="compound">AMReX_Vector.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Cuda<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_FAB_IS_PINNED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ac633bd55d7f455034101cad0c3c707ac" kindref="member">AsyncFabImpl::Initialize</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a3e314fb91385b6e34cda9ddc0354f57a" kindref="member">AsyncFabImpl::Finalize</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>()<sp/>:<sp/>m_gpu_fab(new<sp/>FArrayBox())<sp/>{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)<sp/>:<sp/>m_gpu_fab(new<sp/>FArrayBox(bx,ncomp))<sp/>{}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(FArrayBox&amp;<sp/>a_fab)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_gpu_fab(a_fab.isAllocated()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>new<sp/>FArrayBox(a_fab.box(),<sp/>a_fab.nComp())</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>new<sp/>FArrayBox())</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(FArrayBox&amp;<sp/></highlight><highlight class="comment">/*a_fab*/</highlight><highlight class="normal">,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>AsyncFabImpl(bx,ncomp)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1d6f0f69d10492cd715cbe21b8f5cab2" kindref="member">AsyncFabImpl::~AsyncFabImpl</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">FArrayBox*</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6843b3c675e5d05b65215fbfae6458a3" kindref="member">AsyncFabImpl::fabPtr</ref><sp/>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(m_gpu_fab<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_gpu_fab.get();</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">FArrayBox&amp;<sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ad7a1b684f12082cc64095114f15e0cab" kindref="member">AsyncFabImpl::hostFab</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_gpu_fab;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fab<sp/>is<sp/>Managed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>asyncfab_mutex;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;Vector&lt;std::unique_ptr&lt;FArrayBox&gt;<sp/>&gt;<sp/>&gt;<sp/>fab_stacks;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector&lt;std::unique_ptr&lt;FArrayBox&gt;<sp/>&gt;&amp;<sp/>get_stack<sp/>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/><ref refid="namespaceamrex__omp__module_1a1f5881f02905de2162615538e3989e36" kindref="member">omp_get_thread_num</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fab_stacks[tid];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ac633bd55d7f455034101cad0c3c707ac" kindref="member">AsyncFabImpl::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthreads<sp/>=<sp/><ref refid="namespaceamrex__omp__module_1a88c4536a09e2cc9d9edff5cd040814db" kindref="member">omp_get_max_threads</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nthreads<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>fab_stacks.resize(nthreads);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a3e314fb91385b6e34cda9ddc0354f57a" kindref="member">AsyncFabImpl::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>fab_stacks.clear();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>()</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(BaseFabData&lt;Real&gt;),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseFabData<sp/>must<sp/>be<sp/>trivially<sp/>copyable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fabstack<sp/>=<sp/>get_stack();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_copy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(asyncfab_mutex);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabstack.empty())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu_fab.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FArrayBox());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu_fab<sp/>=<sp/>std::move(fabstack.back());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabstack.pop_back();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_copy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(do_copy)<sp/>copy_htod();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_cpu_fab(bx,ncomp)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fabstack<sp/>=<sp/>get_stack();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(asyncfab_mutex);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabstack.empty())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu_fab.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FArrayBox());<sp/><sp/></highlight><highlight class="comment">//<sp/>yes,<sp/>we<sp/>build<sp/>an<sp/>empty<sp/>fab<sp/>here,<sp/>later<sp/>it<sp/>will<sp/>be<sp/>overwritten<sp/>by<sp/>copy_htod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu_fab<sp/>=<sp/>std::move(fabstack.back());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabstack.pop_back();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_htod();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(FArrayBox&amp;<sp/>a_fab)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_fab.isAllocated())<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cpu_fab.resize(a_fab.box(),<sp/>a_fab.nComp());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fabstack<sp/>=<sp/>get_stack();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(asyncfab_mutex);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabstack.empty())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu_fab.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FArrayBox());<sp/><sp/></highlight><highlight class="comment">//<sp/>yes,<sp/>we<sp/>build<sp/>an<sp/>empty<sp/>fab<sp/>here,<sp/>later<sp/>it<sp/>will<sp/>be<sp/>overwritten<sp/>by<sp/>copy_htod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_gpu_fab<sp/>=<sp/>std::move(fabstack.back());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabstack.pop_back();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_htod();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(FArrayBox&amp;<sp/></highlight><highlight class="comment">/*a_fab*/</highlight><highlight class="normal">,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>AsyncFabImpl(bx,ncomp)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1d6f0f69d10492cd715cbe21b8f5cab2" kindref="member">AsyncFabImpl::~AsyncFabImpl</ref><sp/>()</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(asyncfab_mutex);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fabstack<sp/>=<sp/>get_stack();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>fabstack.push_back(std::move(m_gpu_fab));</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">FArrayBox*</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6843b3c675e5d05b65215fbfae6458a3" kindref="member">AsyncFabImpl::fabPtr</ref><sp/>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(m_gpu_fab<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_gpu_fab.get();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">FArrayBox&amp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ad7a1b684f12082cc64095114f15e0cab" kindref="member">AsyncFabImpl::hostFab</ref><sp/>()</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cpu_fab;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">AsyncFabImpl::copy_htod<sp/>()</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dest<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">BaseFabData&lt;Real&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_gpu_fab.get());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Cuda_1a4eb712380d2714aa1c219d3a8e4c410c" kindref="member">inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cpu_fab_data<sp/>=<sp/>m_cpu_fab;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cpu_fab_data.<ref refid="structamrex_1_1BaseFabData_1a62e0869c74a07fe1ccf3c015c2d4ea90" kindref="member">setOwner</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1af0d8b69cc9585ca09e00607a8ead0f31" kindref="member">AMREX_GPU_SAFE_CALL</ref>(cudaMemcpyAsync(dest,<sp/>&amp;m_cpu_fab_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BaseFabData&lt;Real&gt;),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaMemcpyHostToDevice,<sp/>Device::cudaStream()));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>src<sp/><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">BaseFabData&lt;Real&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;m_cpu_fab);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(dest,<sp/>src,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BaseFabData&lt;Real&gt;));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Cuda<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ac633bd55d7f455034101cad0c3c707ac" kindref="member">AsyncFabImpl::Initialize</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a3e314fb91385b6e34cda9ddc0354f57a" kindref="member">AsyncFabImpl::Finalize</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_cpu_fab(bx,ncomp),<sp/>m_cpu_fab_alias(&amp;m_cpu_fab)<sp/>{}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(FArrayBox&amp;<sp/>a_fab)<sp/>:<sp/>m_cpu_fab_alias<sp/>(&amp;a_fab)<sp/>{}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6b9ea073ce37f898a24a743027b112fa" kindref="member">AsyncFabImpl::AsyncFabImpl</ref><sp/>(FArrayBox&amp;<sp/>a_fab,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_cpu_fab_alias(&amp;a_fab)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cpu_fab_alias-&gt;resize(bx,ncomp);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a1d6f0f69d10492cd715cbe21b8f5cab2" kindref="member">AsyncFabImpl::~AsyncFabImpl</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">FArrayBox*<sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1a6843b3c675e5d05b65215fbfae6458a3" kindref="member">AsyncFabImpl::fabPtr</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cpu_fab_alias;<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">FArrayBox&amp;<sp/><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl_1ad7a1b684f12082cc64095114f15e0cab" kindref="member">AsyncFabImpl::hostFab</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_cpu_fab_alias;<sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp"/>
  </compounddef>
</doxygen>
