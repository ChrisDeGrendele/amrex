<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1ParallelContext" kind="namespace" language="C++">
    <compoundname>amrex::ParallelContext</compoundname>
    <innerclass refid="classamrex_1_1ParallelContext_1_1Frame" prot="public">amrex::ParallelContext::Frame</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1ParallelContext_1a9bffb84c7ffc09c79a7a48e953322be2" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1ParallelContext_1_1Frame" kindref="compound">Frame</ref> &gt;</type>
        <definition>Vector&lt; Frame &gt; amrex::ParallelContext::frames</definition>
        <argsstring></argsstring>
        <name>frames</name>
        <briefdescription>
<para>stack of communicator frames </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp" line="9" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a5a5a250def432f97e96b6cdf1f8e7d1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::CommunicatorAll</definition>
        <argsstring>()</argsstring>
        <name>CommunicatorAll</name>
        <briefdescription>
<para>world communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ac6aad5f4fece7da10c4a0aec721b2aa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a2e7770334e9e65834ce3c95dd0c3a50f" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::GroupAll</definition>
        <argsstring>()</argsstring>
        <name>GroupAll</name>
        <briefdescription>
<para>world group </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1afde8286279adc58bb4ab1d30a5d02cc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::NProcsAll</definition>
        <argsstring>()</argsstring>
        <name>NProcsAll</name>
        <briefdescription>
<para>number of ranks in world communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ab7e37f99813fe7bbc27d5b7268cef5d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::MyProcAll</definition>
        <argsstring>()</argsstring>
        <name>MyProcAll</name>
        <briefdescription>
<para>my rank in world communicator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ac0a6ad036d05f2df88abddb1de4f45fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::IOProcessorNumberAll</definition>
        <argsstring>()</argsstring>
        <name>IOProcessorNumberAll</name>
        <briefdescription>
<para>IO rank in world communicator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a8957066759b044b01f2e9f0bd895f6f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParallelContext::IOProcessorAll</definition>
        <argsstring>()</argsstring>
        <name>IOProcessorAll</name>
        <briefdescription>
<para>Am IO processor for world communicator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="62" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aa54c6e8be9e7978be7175ef73c4d8918" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream* amrex::ParallelContext::OFSPtrAll</definition>
        <argsstring>()</argsstring>
        <name>OFSPtrAll</name>
        <briefdescription>
<para>Pointer to ofstream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="64" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1afb1955e0ab6b3f188007ad3aa5a4ef8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::ParallelContext::CommunicatorSub</definition>
        <argsstring>()</argsstring>
        <name>CommunicatorSub</name>
        <briefdescription>
<para>sub-communicator for current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="67" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1c4de5ee0180d4051570f1202b1b0b6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__ccse-mpi_8H_1a2e7770334e9e65834ce3c95dd0c3a50f" kindref="member">MPI_Group</ref></type>
        <definition>MPI_Group amrex::ParallelContext::GroupSub</definition>
        <argsstring>()</argsstring>
        <name>GroupSub</name>
        <briefdescription>
<para>sub-group for current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="69" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a1e98db9c755ff62ca57280f0d6313936" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::NProcsSub</definition>
        <argsstring>()</argsstring>
        <name>NProcsSub</name>
        <briefdescription>
<para>number of ranks in current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="71" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1aad2c854492138fe1cbc1eed6efc4a285" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::MyProcSub</definition>
        <argsstring>()</argsstring>
        <name>MyProcSub</name>
        <briefdescription>
<para>my sub-rank in current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="73" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1acca72b4c16d04bcff92076f94102c77e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::IOProcessorNumberSub</definition>
        <argsstring>()</argsstring>
        <name>IOProcessorNumberSub</name>
        <briefdescription>
<para>IO sub-rank in current frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="75" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a78b7017f1d35548e12ecc8d3b58113eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParallelContext::IOProcessorSub</definition>
        <argsstring>()</argsstring>
        <name>IOProcessorSub</name>
        <briefdescription>
<para>Am IO processor for current frame? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="77" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a92a26a1787cb356e40c0d1d292b60e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ofstream *</type>
        <definition>std::ofstream* amrex::ParallelContext::OFSPtrSub</definition>
        <argsstring>()</argsstring>
        <name>OFSPtrSub</name>
        <briefdescription>
<para>Pointer to ofstream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="79" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1acca5d709a82a02af512b29314b186eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::get_inc_mpi_tag</definition>
        <argsstring>()</argsstring>
        <name>get_inc_mpi_tag</name>
        <briefdescription>
<para>get and increment mpi tag in current frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="82" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a84684e4377d405d237277f4e2fbde339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::local_to_global_rank</definition>
        <argsstring>(int rank)</argsstring>
        <name>local_to_global_rank</name>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
<para>translate between local rank and global rank </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="84" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1ab37269d54ad8ee5b96331e3d7fe2f6b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::local_to_global_rank</definition>
        <argsstring>(int *global, const int *local, int n)</argsstring>
        <name>local_to_global_rank</name>
        <param>
          <type>int *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="85" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="85" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a60c8ba6a67754c2b46d8b1ad78cb26b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParallelContext::global_to_local_rank</definition>
        <argsstring>(int rank)</argsstring>
        <name>global_to_local_rank</name>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="87" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a4bd5983e3cd4d7324ffafcadb19ffb1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::global_to_local_rank</definition>
        <argsstring>(int *local, const int *global, int n)</argsstring>
        <name>global_to_local_rank</name>
        <param>
          <type>int *</type>
          <declname>local</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="88" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="88" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a09cb92f4a123081a62f72e26a4e3c2a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::push</definition>
        <argsstring>(MPI_Comm c)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="91" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a8c562ca41b2d74fcd48dc76cc2acb6b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::push</definition>
        <argsstring>(MPI_Comm c, int id, int io_rank)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>io_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="92" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1af6494464a81b93bee92095f59487324b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::set_last_frame_ofs</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>set_last_frame_ofs</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="93" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelContext_1a6bdab1c75756fa491add5ace4c59550f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParallelContext::pop</definition>
        <argsstring>()</argsstring>
        <name>pop</name>
        <briefdescription>
<para>Note that it&apos;s the user&apos;s responsibility to free the MPI_Comm. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" line="97" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.H" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelContext.cpp" line="7" column="1"/>
  </compounddef>
</doxygen>
