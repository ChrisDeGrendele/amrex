<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__CArena_8cpp" kind="file" language="C++">
    <compoundname>AMReX_CArena.cpp</compoundname>
    <includes local="no">utility</includes>
    <includes local="no">cstring</includes>
    <includes refid="AMReX__CArena_8H" local="no">AMReX_CArena.H</includes>
    <includes refid="AMReX__BLassert_8H" local="no">AMReX_BLassert.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <incdepgraph>
      <node id="10871">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10872" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
      </node>
      <node id="10888">
        <label>iomanip</label>
      </node>
      <node id="10822">
        <label>functional</label>
      </node>
      <node id="10866">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="10830" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10867" relation="include">
        </childnode>
        <childnode refid="10862" relation="include">
        </childnode>
        <childnode refid="10868" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
      </node>
      <node id="10860">
        <label>limits</label>
      </node>
      <node id="10877">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
      </node>
      <node id="10885">
        <label>AMReX_CudaReduce.H</label>
        <link refid="AMReX__CudaReduce_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
      </node>
      <node id="10889">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
      </node>
      <node id="10855">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10850" relation="include">
        </childnode>
        <childnode refid="10857" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10858" relation="include">
        </childnode>
        <childnode refid="10862" relation="include">
        </childnode>
        <childnode refid="10863" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10864" relation="include">
        </childnode>
      </node>
      <node id="10882">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10830" relation="include">
        </childnode>
        <childnode refid="10859" relation="include">
        </childnode>
      </node>
      <node id="10884">
        <label>AMReX_GpuAsyncFab.H</label>
        <link refid="AMReX__GpuAsyncFab_8H"/>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
      </node>
      <node id="10869">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10860" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
      </node>
      <node id="10858">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10859" relation="include">
        </childnode>
        <childnode refid="10860" relation="include">
        </childnode>
        <childnode refid="10861" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
      </node>
      <node id="10825">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10828" relation="include">
        </childnode>
        <childnode refid="10830" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10832" relation="include">
        </childnode>
        <childnode refid="10819" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
      </node>
      <node id="10839">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
      </node>
      <node id="10853">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10819" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
      </node>
      <node id="10887">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10872" relation="include">
        </childnode>
        <childnode refid="10888" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
      </node>
      <node id="10859">
        <label>cmath</label>
      </node>
      <node id="10829">
        <label>stdexcept</label>
      </node>
      <node id="10879">
        <label>numeric</label>
      </node>
      <node id="10868">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10858" relation="include">
        </childnode>
        <childnode refid="10862" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
      </node>
      <node id="10831">
        <label>string</label>
      </node>
      <node id="10886">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10860" relation="include">
        </childnode>
        <childnode refid="10887" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
      </node>
      <node id="10841">
        <label>map</label>
      </node>
      <node id="10821">
        <label>unordered_set</label>
      </node>
      <node id="10872">
        <label>fstream</label>
      </node>
      <node id="10857">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="10847" relation="include">
        </childnode>
      </node>
      <node id="10849">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="10850" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10830" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10832" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
      </node>
      <node id="10852">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="10813">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX_CArena.cpp"/>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
        <childnode refid="10816" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10835" relation="include">
        </childnode>
      </node>
      <node id="10848">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="10837">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="10838" relation="include">
        </childnode>
      </node>
      <node id="10844">
        <label>sys/types.h</label>
      </node>
      <node id="10878">
        <label>typeinfo</label>
      </node>
      <node id="10832">
        <label>cstdio</label>
      </node>
      <node id="10865">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="10843" relation="include">
        </childnode>
      </node>
      <node id="10836">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
      </node>
      <node id="10873">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="10874" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10814" relation="include">
        </childnode>
        <childnode refid="10851" relation="include">
        </childnode>
        <childnode refid="10832" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10875" relation="include">
        </childnode>
        <childnode refid="10876" relation="include">
        </childnode>
      </node>
      <node id="10845">
        <label>unistd.h</label>
      </node>
      <node id="10874">
        <label>stack</label>
      </node>
      <node id="10819">
        <label>vector</label>
      </node>
      <node id="10824">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="10825" relation="include">
        </childnode>
      </node>
      <node id="10880">
        <label>AMReX_CudaRange.H</label>
        <link refid="AMReX__CudaRange_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10865" relation="include">
        </childnode>
      </node>
      <node id="10826">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="10890">
        <label>AMReX_CudaElixir.H</label>
        <link refid="AMReX__CudaElixir_8H"/>
        <childnode refid="10823" relation="include">
        </childnode>
      </node>
      <node id="10814">
        <label>utility</label>
      </node>
      <node id="10850">
        <label>array</label>
      </node>
      <node id="10851">
        <label>sstream</label>
      </node>
      <node id="10828">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="10829" relation="include">
        </childnode>
      </node>
      <node id="10870">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10871" relation="include">
        </childnode>
        <childnode refid="10873" relation="include">
        </childnode>
        <childnode refid="10877" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10830" relation="include">
        </childnode>
        <childnode refid="10819" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10878" relation="include">
        </childnode>
        <childnode refid="10854" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10860" relation="include">
        </childnode>
        <childnode refid="10879" relation="include">
        </childnode>
      </node>
      <node id="10840">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10830" relation="include">
        </childnode>
        <childnode refid="10831" relation="include">
        </childnode>
        <childnode refid="10841" relation="include">
        </childnode>
        <childnode refid="10842" relation="include">
        </childnode>
        <childnode refid="10843" relation="include">
        </childnode>
        <childnode refid="10844" relation="include">
        </childnode>
        <childnode refid="10845" relation="include">
        </childnode>
        <childnode refid="10846" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10847" relation="include">
        </childnode>
        <childnode refid="10849" relation="include">
        </childnode>
        <childnode refid="10853" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10866" relation="include">
        </childnode>
        <childnode refid="10869" relation="include">
        </childnode>
        <childnode refid="10870" relation="include">
        </childnode>
      </node>
      <node id="10823">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
      </node>
      <node id="10863">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
        <childnode refid="10826" relation="include">
        </childnode>
      </node>
      <node id="10864">
        <label>AMReX_CudaMemory.H</label>
        <link refid="AMReX__CudaMemory_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10865" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
      </node>
      <node id="10856">
        <label>iosfwd</label>
      </node>
      <node id="10846">
        <label>sys/wait.h</label>
      </node>
      <node id="10834">
        <label>cstdlib</label>
      </node>
      <node id="10876">
        <label>cfenv</label>
      </node>
      <node id="10830">
        <label>iostream</label>
      </node>
      <node id="10862">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="10856" relation="include">
        </childnode>
        <childnode refid="10827" relation="include">
        </childnode>
        <childnode refid="10858" relation="include">
        </childnode>
        <childnode refid="10852" relation="include">
        </childnode>
      </node>
      <node id="10817">
        <label>cstddef</label>
      </node>
      <node id="10867">
        <label>unordered_map</label>
      </node>
      <node id="10835">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10837" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10882" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
        <childnode refid="10883" relation="include">
        </childnode>
        <childnode refid="10884" relation="include">
        </childnode>
        <childnode refid="10864" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10885" relation="include">
        </childnode>
        <childnode refid="10886" relation="include">
        </childnode>
        <childnode refid="10889" relation="include">
        </childnode>
        <childnode refid="10890" relation="include">
        </childnode>
        <childnode refid="10891" relation="include">
        </childnode>
      </node>
      <node id="10861">
        <label>climits</label>
      </node>
      <node id="10891">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="10820">
        <label>mutex</label>
      </node>
      <node id="10842">
        <label>chrono</label>
      </node>
      <node id="10875">
        <label>csignal</label>
      </node>
      <node id="10838">
        <label>AMReX_CudaLaunch.H</label>
        <link refid="AMReX__CudaLaunch_8H"/>
        <childnode refid="10826" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10880" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
        <childnode refid="10855" relation="include">
        </childnode>
        <childnode refid="10848" relation="include">
        </childnode>
        <childnode refid="10824" relation="include">
        </childnode>
        <childnode refid="10865" relation="include">
        </childnode>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10860" relation="include">
        </childnode>
      </node>
      <node id="10816">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10818" relation="include">
        </childnode>
        <childnode refid="10819" relation="include">
        </childnode>
        <childnode refid="10820" relation="include">
        </childnode>
        <childnode refid="10821" relation="include">
        </childnode>
        <childnode refid="10822" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
      </node>
      <node id="10843">
        <label>type_traits</label>
      </node>
      <node id="10818">
        <label>set</label>
      </node>
      <node id="10827">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="10854">
        <label>algorithm</label>
      </node>
      <node id="10881">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10850" relation="include">
        </childnode>
        <childnode refid="10825" relation="include">
        </childnode>
        <childnode refid="10840" relation="include">
        </childnode>
        <childnode refid="10839" relation="include">
        </childnode>
        <childnode refid="10836" relation="include">
        </childnode>
      </node>
      <node id="10815">
        <label>cstring</label>
      </node>
      <node id="10833">
        <label>memory</label>
      </node>
      <node id="10883">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="10817" relation="include">
        </childnode>
        <childnode refid="10815" relation="include">
        </childnode>
        <childnode refid="10834" relation="include">
        </childnode>
        <childnode refid="10833" relation="include">
        </childnode>
        <childnode refid="10823" relation="include">
        </childnode>
        <childnode refid="10865" relation="include">
        </childnode>
        <childnode refid="10881" relation="include">
        </childnode>
      </node>
      <node id="10847">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="10848" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CArena_8H" kindref="compound">AMReX_CArena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLassert_8H" kindref="compound">AMReX_BLassert.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classamrex_1_1CArena_1a43a76cc08d37a6c6174a05989d0bc60e" kindref="member">CArena::CArena</ref><sp/>(std::size_t<sp/>hunk_size,<sp/>ArenaInfo<sp/>info)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena_1aeb2158ba443c9b23ba0d12bcf38a66e1" kindref="member">arena_info</ref><sp/>=<sp/>info;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>alignment<sp/>of<sp/>hunksize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref><sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(hunk_size<sp/>==<sp/>0<sp/>?<sp/><ref refid="classamrex_1_1CArena_1a10adc62608b67926d034077109597b14a73f4c71472036baf157528f4435be5d2" kindref="member">DefaultHunkSize</ref><sp/>:<sp/>hunk_size);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a7ec2fcdaa0d06d1fceb739d0e1661751" kindref="member">m_used</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref><sp/>&gt;=<sp/>hunk_size);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref>%<ref refid="classamrex_1_1Arena_1a52dd4bf03bb4d31899bca6ca3440760a" kindref="member">Arena::align_size</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="classamrex_1_1CArena_1abca549bb11a9efb8b05dca10c32aab81" kindref="member">CArena::~CArena</ref><sp/>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>N<sp/>=<sp/><ref refid="classamrex_1_1CArena_1ae4df71ed6e581bb88793c7c009cb4660" kindref="member">m_alloc</ref>.size();<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena_1a9267a7d1f5ca6f3d24154c06329bdbe7" kindref="member">deallocate_system</ref>(<ref refid="classamrex_1_1CArena_1ae4df71ed6e581bb88793c7c009cb4660" kindref="member">m_alloc</ref>[i]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classamrex_1_1CArena_1aeafab1fb8b884a0fc6ac916ae7d10321" kindref="member">CArena::alloc</ref><sp/>(std::size_t<sp/>nbytes)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(<ref refid="classamrex_1_1CArena_1a445be9f2ccca25ca4d2c8db026400136" kindref="member">carena_mutex</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>nbytes<sp/>=<sp/><ref refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" kindref="member">Arena::align</ref>(nbytes<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>nbytes);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>node<sp/>in<sp/>freelist<sp/>at<sp/>lowest<sp/>memory<sp/>address<sp/>that&apos;ll<sp/>satisfy<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>NL::iterator<sp/>free_it<sp/>=<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.begin();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>free_it<sp/>!=<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.end();<sp/>++free_it)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*free_it).size()<sp/>&gt;=<sp/>nbytes)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free_it<sp/>==<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.end())</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>N<sp/>=<sp/>nbytes<sp/>&lt;<sp/><ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref><sp/>?<sp/><ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref><sp/>:<sp/>nbytes;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp<sp/>=<sp/><ref refid="classamrex_1_1Arena_1afc721e195430f79b2d1b287c490ef0fb" kindref="member">allocate_system</ref>(N);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a7ec2fcdaa0d06d1fceb739d0e1661751" kindref="member">m_used</ref><sp/>+=<sp/>N;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1ae4df71ed6e581bb88793c7c009cb4660" kindref="member">m_alloc</ref>.push_back(vp);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbytes<sp/>&lt;<sp/><ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>leftover<sp/>chunk<sp/>to<sp/>free<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>with<sp/>a<sp/>hint<sp/>--<sp/>should<sp/>be<sp/>largest<sp/>block<sp/>in<sp/>the<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>block<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vp)<sp/>+<sp/>nbytes;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.insert(<ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.end(),<sp/>Node(block,<sp/>vp,<sp/><ref refid="classamrex_1_1CArena_1a7bbf66f41bc3167185236bdcd6fe67a1" kindref="member">m_hunk</ref>-nbytes));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.insert(Node(vp,<sp/>vp,<sp/>nbytes));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>((*free_it).size()<sp/>&gt;=<sp/>nbytes);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.find(*free_it)<sp/>==<sp/><ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.end());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vp<sp/>=<sp/>(*free_it).block();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.insert(Node(vp,<sp/>free_it-&gt;owner(),<sp/>nbytes));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*free_it).size()<sp/>&gt;<sp/>nbytes)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>remainder<sp/>of<sp/>free<sp/>block<sp/>back<sp/>into<sp/>freelist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>with<sp/>a<sp/>hint<sp/>--<sp/>right<sp/>after<sp/>the<sp/>current<sp/>block<sp/>being<sp/>split.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node<sp/>freeblock<sp/>=<sp/>*free_it;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeblock.size(freeblock.size()<sp/>-<sp/>nbytes);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeblock.block(static_cast&lt;char*&gt;(vp)<sp/>+<sp/>nbytes);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.insert(free_it,<sp/>freeblock);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.erase(free_it);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(!(vp<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vp;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="classamrex_1_1CArena_1a6920342ae3cc9420d8e59915130e138e" kindref="member">CArena::free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vp)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(<ref refid="classamrex_1_1CArena_1a445be9f2ccca25ca4d2c8db026400136" kindref="member">carena_mutex</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vp<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>calls<sp/>with<sp/>NULL<sp/>as<sp/>allowed<sp/>by<sp/>C++<sp/>delete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`vp&apos;<sp/>had<sp/>better<sp/>be<sp/>in<sp/>the<sp/>busy<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>busy_it<sp/>=<sp/><ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.find(Node(vp,0,0));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(!(busy_it<sp/>==<sp/><ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.end()));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.find(*busy_it)<sp/>==<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.end());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>free&apos;d<sp/>block<sp/>on<sp/>free<sp/>list<sp/>and<sp/>save<sp/>iterator<sp/>to<sp/>insert()ed<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;NL::iterator,bool&gt;<sp/>pair_it<sp/>=<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.insert(*busy_it);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(pair_it.second<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>NL::iterator<sp/>free_it<sp/>=<sp/>pair_it.first;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(free_it<sp/>!=<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.end()<sp/>&amp;&amp;<sp/>(*free_it).block()<sp/>==<sp/>(*busy_it).block());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>remove<sp/>from<sp/>busy<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a88823438ee0e89721d65131d87d2f687" kindref="member">m_busylist</ref>.erase(busy_it);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coalesce<sp/>freeblock(s)<sp/>on<sp/>lo<sp/>and<sp/>hi<sp/>side<sp/>of<sp/>this<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(free_it<sp/>==<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.begin()))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NL::iterator<sp/>lo_it<sp/>=<sp/>free_it;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--lo_it;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((*lo_it).block())<sp/>+<sp/>(*lo_it).size();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr<sp/>==<sp/>(*free_it).block()<sp/>&amp;&amp;<sp/>lo_it-&gt;coalescable(*free_it))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>cast<sp/>is<sp/>needed<sp/>as<sp/>iterators<sp/>to<sp/>set<sp/>return<sp/>const<sp/>values;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>we<sp/>can&apos;t<sp/>legally<sp/>change<sp/>an<sp/>element<sp/>of<sp/>a<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case<sp/>I<sp/>want<sp/>to<sp/>change<sp/>the<sp/>size()<sp/>of<sp/>a<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>freelist.<sp/><sp/>Since<sp/>size()<sp/>is<sp/>not<sp/>used<sp/>in<sp/>the<sp/>ordering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relations<sp/>in<sp/>the<sp/>set,<sp/>this<sp/>won&apos;t<sp/>effect<sp/>the<sp/>order;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>it<sp/>won&apos;t<sp/>muck<sp/>up<sp/>the<sp/>ordering<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>don&apos;t<sp/>want<sp/>to<sp/>have<sp/>to<sp/>remove<sp/>the<sp/>element<sp/>from<sp/>the<sp/>set<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>reinsert<sp/>it<sp/>with<sp/>a<sp/>different<sp/>size()<sp/>as<sp/>it&apos;ll<sp/>just<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>into<sp/>the<sp/>same<sp/>place<sp/>in<sp/>the<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>node<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Node*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;(*lo_it));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(!(node<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;size((*lo_it).size()<sp/>+<sp/>(*free_it).size());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.erase(free_it);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_it<sp/>=<sp/>lo_it;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>NL::iterator<sp/>hi_it<sp/>=<sp/>free_it;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((*free_it).block())<sp/>+<sp/>(*free_it).size();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++hi_it<sp/>!=<sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.end()<sp/>&amp;&amp;<sp/>addr<sp/>==<sp/>(*hi_it).block()<sp/>&amp;&amp;<sp/>hi_it-&gt;coalescable(*free_it))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ditto<sp/>the<sp/>above<sp/>comment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>node<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">Node*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;(*free_it));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(!(node<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;size((*free_it).size()<sp/>+<sp/>(*hi_it).size());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1CArena_1a000d9e231672c9a28a72a05abec379fb" kindref="member">m_freelist</ref>.erase(hi_it);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">std::size_t</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="classamrex_1_1CArena_1a5f5de3e5518c0f5bcc71a6a2b4076a3f" kindref="member">CArena::heap_space_used</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1CArena_1a7ec2fcdaa0d06d1fceb739d0e1661751" kindref="member">m_used</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CArena.cpp"/>
  </compounddef>
</doxygen>
