<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1EB2_1_1CylinderIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::CylinderIF</compoundname>
    <includes refid="AMReX__EB2__IF__Cylinder_8H" local="no">AMReX_EB2_IF_Cylinder.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a7c5b05498e0dbdf86a65e6fc719e12ad" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="95" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1ac76b57e5f88b041a0369fc7a8c5026f7" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a7dd72f5ab847bff174c67eff2c1b00e5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::EB2::CylinderIF::m_direction</definition>
        <argsstring></argsstring>
        <name>m_direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="97" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a26366762c0f2c1c0bdd8d1be6ac69d59" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref></type>
        <definition>RealArray amrex::EB2::CylinderIF::m_center</definition>
        <argsstring></argsstring>
        <name>m_center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="98" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a0fb81cf1ebc423d40a267cab578265bc" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::EB2::CylinderIF::m_inside</definition>
        <argsstring></argsstring>
        <name>m_inside</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="99" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a199d69a6d5a31853f86d54ceb745774e" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_radius2</definition>
        <argsstring></argsstring>
        <name>m_radius2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1aed435ec56a45539b440ca5f202f21436" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_halfheight</definition>
        <argsstring></argsstring>
        <name>m_halfheight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="102" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1ab6453352eca518f991c6e74195f3d337" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_sign</definition>
        <argsstring></argsstring>
        <name>m_sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="103" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a7f70d143e2569bc9112f4c5f1efcd83d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::CylinderIF</definition>
        <argsstring>(Real a_radius, int a_direction, const RealArray &amp;a_center, bool a_inside)</argsstring>
        <name>CylinderIF</name>
        <param>
          <type>Real</type>
          <declname>a_radius</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_direction</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloaded constructor for infinite cylinder IF: if the user does not provide a cylinder height, the IF corresponds to a cylinder that spans the whole domain. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a65cc987a90a62e4c8e29302895bab48c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::CylinderIF</definition>
        <argsstring>(Real a_radius, Real a_height, int a_direction, const RealArray &amp;a_center, bool a_inside)</argsstring>
        <name>CylinderIF</name>
        <param>
          <type>Real</type>
          <declname>a_radius</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_direction</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloaded constructor for finite cylinder IF: if the user does specify a cylinder height (length), then the IF corresponds to a cylinder extending only to height/2 from it&apos;s center. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="28" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a139eafd595dac0dfe04c197a9562c65c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::~CylinderIF</definition>
        <argsstring>()</argsstring>
        <name>~CylinderIF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1ac95d0145e3b32c4416b51918700ebe7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::CylinderIF</definition>
        <argsstring>(const CylinderIF &amp;rhs) noexcept=default</argsstring>
        <name>CylinderIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1CylinderIF" kindref="compound">CylinderIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a2c89f29c0c46c2871e4a619b859e8882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::CylinderIF</definition>
        <argsstring>(CylinderIF &amp;&amp;rhs) noexcept=default</argsstring>
        <name>CylinderIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1CylinderIF" kindref="compound">CylinderIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a7ffad7a5273b3f5581c6c8092d01bcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1CylinderIF" kindref="compound">CylinderIF</ref> &amp;</type>
        <definition>CylinderIF&amp; amrex::EB2::CylinderIF::operator=</definition>
        <argsstring>(const CylinderIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1CylinderIF" kindref="compound">CylinderIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a30216e6d46706635123487973976d32b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1CylinderIF" kindref="compound">CylinderIF</ref> &amp;</type>
        <definition>CylinderIF&amp; amrex::EB2::CylinderIF::operator=</definition>
        <argsstring>(CylinderIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1CylinderIF" kindref="compound">CylinderIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a23436e3cf1451ea84ad03cc66afeccb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::operator()</definition>
        <argsstring>(const RealArray &amp;p) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="46" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1015">
        <label>Real</label>
      </node>
      <node id="1014">
        <label>amrex::EB2::CylinderIF</label>
        <link refid="classamrex_1_1EB2_1_1CylinderIF"/>
        <childnode refid="1015" relation="usage">
          <edgelabel>m_sign</edgelabel>
          <edgelabel>m_radius2</edgelabel>
          <edgelabel>m_height</edgelabel>
          <edgelabel>m_radius</edgelabel>
          <edgelabel>m_halfheight</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="13" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="12" bodyend="104"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7f70d143e2569bc9112f4c5f1efcd83d" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>CylinderIF</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a65cc987a90a62e4c8e29302895bab48c" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>CylinderIF</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1ac95d0145e3b32c4416b51918700ebe7b" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>CylinderIF</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a2c89f29c0c46c2871e4a619b859e8882" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>CylinderIF</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a26366762c0f2c1c0bdd8d1be6ac69d59" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_center</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7dd72f5ab847bff174c67eff2c1b00e5" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_direction</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1aed435ec56a45539b440ca5f202f21436" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_halfheight</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1ac76b57e5f88b041a0369fc7a8c5026f7" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_height</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a0fb81cf1ebc423d40a267cab578265bc" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_inside</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7c5b05498e0dbdf86a65e6fc719e12ad" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_radius</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a199d69a6d5a31853f86d54ceb745774e" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_radius2</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1ab6453352eca518f991c6e74195f3d337" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_sign</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a23436e3cf1451ea84ad03cc66afeccb7" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7ffad7a5273b3f5581c6c8092d01bcdc" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a30216e6d46706635123487973976d32b" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a139eafd595dac0dfe04c197a9562c65c" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>~CylinderIF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
