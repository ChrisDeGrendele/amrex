<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__CudaLaunch_8H" kind="file" language="C++">
    <compoundname>AMReX_CudaLaunch.H</compoundname>
    <includes refid="AMReX__GpuQualifiers_8H" local="no">AMReX_GpuQualifiers.H</includes>
    <includes refid="AMReX__GpuControl_8H" local="no">AMReX_GpuControl.H</includes>
    <includes refid="AMReX__GpuError_8H" local="no">AMReX_GpuError.H</includes>
    <includes refid="AMReX__CudaRange_8H" local="no">AMReX_CudaRange.H</includes>
    <includes refid="AMReX__CudaDevice_8H" local="no">AMReX_CudaDevice.H</includes>
    <includes refid="AMReX__Box_8H" local="no">AMReX_Box.H</includes>
    <includes refid="AMReX__Extension_8H" local="no">AMReX_Extension.H</includes>
    <includes refid="AMReX__BLassert_8H" local="no">AMReX_BLassert.H</includes>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">limits</includes>
    <includedby refid="AMReX__CudaLaunch_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.cpp</includedby>
    <includedby refid="AMReX__GpuLaunch_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuLaunch.H</includedby>
    <incdepgraph>
      <node id="14760">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14761" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14726" relation="include">
        </childnode>
      </node>
      <node id="14729">
        <label>functional</label>
      </node>
      <node id="14755">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="14716" relation="include">
        </childnode>
        <childnode refid="14754" relation="include">
        </childnode>
        <childnode refid="14718" relation="include">
        </childnode>
        <childnode refid="14756" relation="include">
        </childnode>
        <childnode refid="14749" relation="include">
        </childnode>
        <childnode refid="14757" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
      </node>
      <node id="14747">
        <label>limits</label>
      </node>
      <node id="14766">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14731" relation="include">
        </childnode>
      </node>
      <node id="14742">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="14743" relation="include">
        </childnode>
        <childnode refid="14734" relation="include">
        </childnode>
        <childnode refid="14744" relation="include">
        </childnode>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14745" relation="include">
        </childnode>
        <childnode refid="14749" relation="include">
        </childnode>
        <childnode refid="14750" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14751" relation="include">
        </childnode>
      </node>
      <node id="14758">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="14718" relation="include">
        </childnode>
        <childnode refid="14747" relation="include">
        </childnode>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14754" relation="include">
        </childnode>
        <childnode refid="14725" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14731" relation="include">
        </childnode>
        <childnode refid="14759" relation="include">
        </childnode>
      </node>
      <node id="14745">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="14743" relation="include">
        </childnode>
        <childnode refid="14715" relation="include">
        </childnode>
        <childnode refid="14746" relation="include">
        </childnode>
        <childnode refid="14747" relation="include">
        </childnode>
        <childnode refid="14748" relation="include">
        </childnode>
        <childnode refid="14740" relation="include">
        </childnode>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14732" relation="include">
        </childnode>
        <childnode refid="14711" relation="include">
        </childnode>
      </node>
      <node id="14725">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="14711" relation="include">
        </childnode>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14716" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
      </node>
      <node id="14713">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="14714" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
      </node>
      <node id="14739">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="14740" relation="include">
        </childnode>
        <childnode refid="14741" relation="include">
        </childnode>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
      </node>
      <node id="14746">
        <label>cmath</label>
      </node>
      <node id="14728">
        <label>stdexcept</label>
      </node>
      <node id="14768">
        <label>numeric</label>
      </node>
      <node id="14757">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="14743" relation="include">
        </childnode>
        <childnode refid="14745" relation="include">
        </childnode>
        <childnode refid="14749" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
      </node>
      <node id="14717">
        <label>string</label>
      </node>
      <node id="14718">
        <label>map</label>
      </node>
      <node id="14761">
        <label>fstream</label>
      </node>
      <node id="14744">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="14731" relation="include">
        </childnode>
      </node>
      <node id="14733">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="14734" relation="include">
        </childnode>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14736" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14716" relation="include">
        </childnode>
        <childnode refid="14737" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14725" relation="include">
        </childnode>
        <childnode refid="14711" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
        <childnode refid="14731" relation="include">
        </childnode>
      </node>
      <node id="14770">
        <label>AMReX_CudaDevice.H</label>
        <link refid="AMReX__CudaDevice_8H"/>
        <childnode refid="14715" relation="include">
        </childnode>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14734" relation="include">
        </childnode>
        <childnode refid="14725" relation="include">
        </childnode>
        <childnode refid="14714" relation="include">
        </childnode>
        <childnode refid="14713" relation="include">
        </childnode>
        <childnode refid="14712" relation="include">
        </childnode>
      </node>
      <node id="14738">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="14732">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="14721">
        <label>sys/types.h</label>
      </node>
      <node id="14767">
        <label>typeinfo</label>
      </node>
      <node id="14730">
        <label>cstdio</label>
      </node>
      <node id="14752">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="14720" relation="include">
        </childnode>
      </node>
      <node id="14712">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
      </node>
      <node id="14762">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="14763" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14736" relation="include">
        </childnode>
        <childnode refid="14737" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14715" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14765" relation="include">
        </childnode>
      </node>
      <node id="14722">
        <label>unistd.h</label>
      </node>
      <node id="14763">
        <label>stack</label>
      </node>
      <node id="14741">
        <label>vector</label>
      </node>
      <node id="14724">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="14725" relation="include">
        </childnode>
      </node>
      <node id="14769">
        <label>AMReX_CudaRange.H</label>
        <link refid="AMReX__CudaRange_8H"/>
        <childnode refid="14711" relation="include">
        </childnode>
        <childnode refid="14713" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14752" relation="include">
        </childnode>
      </node>
      <node id="14711">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="14736">
        <label>utility</label>
      </node>
      <node id="14734">
        <label>array</label>
      </node>
      <node id="14737">
        <label>sstream</label>
      </node>
      <node id="14727">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="14728" relation="include">
        </childnode>
      </node>
      <node id="14759">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14762" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14731" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14716" relation="include">
        </childnode>
        <childnode refid="14741" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14767" relation="include">
        </childnode>
        <childnode refid="14740" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14747" relation="include">
        </childnode>
        <childnode refid="14768" relation="include">
        </childnode>
      </node>
      <node id="14714">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="14715" relation="include">
        </childnode>
        <childnode refid="14716" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14718" relation="include">
        </childnode>
        <childnode refid="14719" relation="include">
        </childnode>
        <childnode refid="14720" relation="include">
        </childnode>
        <childnode refid="14721" relation="include">
        </childnode>
        <childnode refid="14722" relation="include">
        </childnode>
        <childnode refid="14723" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14731" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14755" relation="include">
        </childnode>
        <childnode refid="14758" relation="include">
        </childnode>
        <childnode refid="14759" relation="include">
        </childnode>
      </node>
      <node id="14753">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14754" relation="include">
        </childnode>
        <childnode refid="14715" relation="include">
        </childnode>
      </node>
      <node id="14750">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="14743" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
        <childnode refid="14711" relation="include">
        </childnode>
      </node>
      <node id="14751">
        <label>AMReX_CudaMemory.H</label>
        <link refid="AMReX__CudaMemory_8H"/>
        <childnode refid="14711" relation="include">
        </childnode>
        <childnode refid="14712" relation="include">
        </childnode>
        <childnode refid="14752" relation="include">
        </childnode>
        <childnode refid="14753" relation="include">
        </childnode>
        <childnode refid="14715" relation="include">
        </childnode>
      </node>
      <node id="14743">
        <label>iosfwd</label>
      </node>
      <node id="14723">
        <label>sys/wait.h</label>
      </node>
      <node id="14715">
        <label>cstdlib</label>
      </node>
      <node id="14765">
        <label>cfenv</label>
      </node>
      <node id="14716">
        <label>iostream</label>
      </node>
      <node id="14749">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="14743" relation="include">
        </childnode>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14745" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
      </node>
      <node id="14754">
        <label>cstddef</label>
      </node>
      <node id="14756">
        <label>unordered_map</label>
      </node>
      <node id="14748">
        <label>climits</label>
      </node>
      <node id="14719">
        <label>chrono</label>
      </node>
      <node id="14764">
        <label>csignal</label>
      </node>
      <node id="14710">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H</label>
        <link refid="AMReX_CudaLaunch.H"/>
        <childnode refid="14711" relation="include">
        </childnode>
        <childnode refid="14712" relation="include">
        </childnode>
        <childnode refid="14713" relation="include">
        </childnode>
        <childnode refid="14769" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14732" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14752" relation="include">
        </childnode>
        <childnode refid="14754" relation="include">
        </childnode>
        <childnode refid="14747" relation="include">
        </childnode>
      </node>
      <node id="14720">
        <label>type_traits</label>
      </node>
      <node id="14726">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="14740">
        <label>algorithm</label>
      </node>
      <node id="14735">
        <label>memory</label>
      </node>
      <node id="14731">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="14732" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14916">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.cpp</label>
        <link refid="AMReX__Laplacian_8cpp"/>
      </node>
      <node id="14906">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.cpp</label>
        <link refid="AMReX__ABecLaplacian_8cpp"/>
      </node>
      <node id="14788">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="15061">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14928">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="14823">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp</label>
        <link refid="AMReX__LoadBalanceKD_8cpp"/>
      </node>
      <node id="14832">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="14989">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="14813">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="14816">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="15059">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14820">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="14894">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14895" relation="include">
        </childnode>
      </node>
      <node id="15048">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14917">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.cpp</label>
        <link refid="AMReX__LinOp_8cpp"/>
      </node>
      <node id="14899">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
        <childnode refid="14900" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
      </node>
      <node id="14845">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="14988">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.cpp</label>
        <link refid="AMReX__CudaAsyncFabImpl_8cpp"/>
      </node>
      <node id="14864">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="14834">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
      </node>
      <node id="14915">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.H</label>
        <link refid="AMReX__Laplacian_8H"/>
        <childnode refid="14916" relation="include">
        </childnode>
      </node>
      <node id="14796">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.H</label>
        <link refid="AMReX__EB__LSCoreBase_8H"/>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
      </node>
      <node id="14790">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="14961">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="14962" relation="include">
        </childnode>
      </node>
      <node id="14938">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="14976">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="14903">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="14772">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.cpp</label>
        <link refid="AMReX__CudaLaunch_8cpp"/>
      </node>
      <node id="15013">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="15014" relation="include">
        </childnode>
      </node>
      <node id="14819">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="15002">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="15003" relation="include">
        </childnode>
      </node>
      <node id="14843">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="14815" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
      </node>
      <node id="14867">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="14868" relation="include">
        </childnode>
      </node>
      <node id="14922">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.cpp</label>
        <link refid="AMReX__DivVis_8cpp"/>
      </node>
      <node id="14848">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="14842">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="14813" relation="include">
        </childnode>
      </node>
      <node id="14924">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.cpp</label>
        <link refid="AMReX__MCCGSolver_8cpp"/>
      </node>
      <node id="14923">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.H</label>
        <link refid="AMReX__MCCGSolver_8H"/>
        <childnode refid="14924" relation="include">
        </childnode>
        <childnode refid="14925" relation="include">
        </childnode>
      </node>
      <node id="14993">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="15021">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_2D_K.H</label>
        <link refid="AMReX__MG__2D__K_8H"/>
      </node>
      <node id="14882">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="14910">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.H</label>
        <link refid="AMReX__MultiGrid_8H"/>
        <childnode refid="14908" relation="include">
        </childnode>
        <childnode refid="14909" relation="include">
        </childnode>
      </node>
      <node id="14849">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="14850" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
      </node>
      <node id="15030">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="15031" relation="include">
        </childnode>
      </node>
      <node id="14884">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="14892">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="14893" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
      </node>
      <node id="14887">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="15014">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="14835" relation="include">
        </childnode>
      </node>
      <node id="14900">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14901" relation="include">
        </childnode>
      </node>
      <node id="14965">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14966" relation="include">
        </childnode>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14881" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14942" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14908" relation="include">
        </childnode>
        <childnode refid="14850" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
      </node>
      <node id="14838">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="14839" relation="include">
        </childnode>
        <childnode refid="14849" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14852" relation="include">
        </childnode>
      </node>
      <node id="14799">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="15044">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="15015">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="15029">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="15030" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="15031" relation="include">
        </childnode>
      </node>
      <node id="15004">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="15003" relation="include">
        </childnode>
      </node>
      <node id="14851">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14850" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
      </node>
      <node id="14897">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="15010">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="15051">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14920">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="14921" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14919" relation="include">
        </childnode>
        <childnode refid="14926" relation="include">
        </childnode>
        <childnode refid="14927" relation="include">
        </childnode>
      </node>
      <node id="14801">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="14865">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
      </node>
      <node id="14908">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.cpp</label>
        <link refid="AMReX__CGSolver_8cpp"/>
      </node>
      <node id="14889">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="15062">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14945">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="14946" relation="include">
        </childnode>
      </node>
      <node id="15049">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="15043">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="15035" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="15045" relation="include">
        </childnode>
        <childnode refid="15046" relation="include">
        </childnode>
        <childnode refid="15047" relation="include">
        </childnode>
        <childnode refid="15048" relation="include">
        </childnode>
        <childnode refid="15049" relation="include">
        </childnode>
        <childnode refid="15050" relation="include">
        </childnode>
        <childnode refid="15051" relation="include">
        </childnode>
        <childnode refid="15052" relation="include">
        </childnode>
        <childnode refid="15053" relation="include">
        </childnode>
        <childnode refid="15054" relation="include">
        </childnode>
        <childnode refid="15055" relation="include">
        </childnode>
        <childnode refid="15056" relation="include">
        </childnode>
        <childnode refid="15057" relation="include">
        </childnode>
        <childnode refid="15058" relation="include">
        </childnode>
        <childnode refid="15059" relation="include">
        </childnode>
        <childnode refid="15060" relation="include">
        </childnode>
        <childnode refid="15061" relation="include">
        </childnode>
        <childnode refid="15062" relation="include">
        </childnode>
      </node>
      <node id="14959">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="14953" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14955" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
      </node>
      <node id="14862">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="14831" relation="include">
        </childnode>
      </node>
      <node id="14839">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="14840" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
      </node>
      <node id="14985">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="14981" relation="include">
        </childnode>
      </node>
      <node id="15003">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="14808" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
      </node>
      <node id="14896">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14897" relation="include">
        </childnode>
      </node>
      <node id="14975">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="14832" relation="include">
        </childnode>
      </node>
      <node id="14981">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="14836">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14793">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="14970">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14938" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
      </node>
      <node id="14840">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
        <childnode refid="14847" relation="include">
        </childnode>
      </node>
      <node id="14778">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="14779" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
        <childnode refid="14805" relation="include">
        </childnode>
        <childnode refid="14827" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14971" relation="include">
        </childnode>
        <childnode refid="15033" relation="include">
        </childnode>
        <childnode refid="15009" relation="include">
        </childnode>
        <childnode refid="15035" relation="include">
        </childnode>
        <childnode refid="15036" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15057">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14895">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="14968">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="15047">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14860">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="14861" relation="include">
        </childnode>
      </node>
      <node id="14927">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H</label>
        <link refid="AMReX__MCMultiGrid_8H"/>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14925" relation="include">
        </childnode>
      </node>
      <node id="14781">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
      </node>
      <node id="15032">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Functors.H</label>
        <link refid="AMReX__Functors_8H"/>
        <childnode refid="14821" relation="include">
        </childnode>
      </node>
      <node id="15052">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14857">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="14824">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
      </node>
      <node id="14951">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="14878">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="14977">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="14942">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
      </node>
      <node id="14859">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14862" relation="include">
        </childnode>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14867" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14870" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14881" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
        <childnode refid="14885" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14936" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14938" relation="include">
        </childnode>
        <childnode refid="14802" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14941" relation="include">
        </childnode>
        <childnode refid="14942" relation="include">
        </childnode>
        <childnode refid="14948" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14894" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="14958" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14907" relation="include">
        </childnode>
        <childnode refid="14904" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14923" relation="include">
        </childnode>
        <childnode refid="14920" relation="include">
        </childnode>
        <childnode refid="14927" relation="include">
        </childnode>
        <childnode refid="14849" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="14820" relation="include">
        </childnode>
        <childnode refid="14960" relation="include">
        </childnode>
        <childnode refid="14961" relation="include">
        </childnode>
      </node>
      <node id="15018">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
      </node>
      <node id="14947">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="15012">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="14808">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="15001">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="14888">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="14889" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
        <childnode refid="14899" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
        <childnode refid="14904" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14918" relation="include">
        </childnode>
        <childnode refid="14920" relation="include">
        </childnode>
      </node>
      <node id="15008">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="14891" relation="include">
        </childnode>
      </node>
      <node id="14987">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp</label>
        <link refid="AMReX__CudaAsyncFab_8cpp"/>
      </node>
      <node id="15050">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14844">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="14992">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="15020">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_1D_K.H</label>
        <link refid="AMReX__MG__1D__K_8H"/>
      </node>
      <node id="14850">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="14800">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="14875">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="14997">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14772" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14936" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14902" relation="include">
        </childnode>
      </node>
      <node id="14911">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.H</label>
        <link refid="AMReX__ABec2_8H"/>
        <childnode refid="14912" relation="include">
        </childnode>
        <childnode refid="14913" relation="include">
        </childnode>
      </node>
      <node id="14944">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="14933">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="14953">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="14941">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Algoim/AMReX_algoim_integrals.H</label>
        <link refid="AMReX__algoim__integrals_8H"/>
      </node>
      <node id="14996">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="14827" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14997" relation="include">
        </childnode>
        <childnode refid="14964" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
      </node>
      <node id="14795">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.cpp</label>
        <link refid="AMReX__EB__LSCoreBase_8cpp"/>
      </node>
      <node id="14984">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="14985" relation="include">
        </childnode>
      </node>
      <node id="14818">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="15024">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="15005">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="14972">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="14936">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14937" relation="include">
        </childnode>
      </node>
      <node id="14991">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="14837">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="15063">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="15032" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
        <childnode refid="15064" relation="include">
        </childnode>
      </node>
      <node id="14999">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="14856">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="14857" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
      </node>
      <node id="14934">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="14890">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="14891" relation="include">
        </childnode>
        <childnode refid="14892" relation="include">
        </childnode>
        <childnode refid="14896" relation="include">
        </childnode>
      </node>
      <node id="14874">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="15037">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="14954">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="14872">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="14804">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="14797">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="14806">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
        <childnode refid="14808" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14815" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
        <childnode refid="14820" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
      </node>
      <node id="15056">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14779">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14781" relation="include">
        </childnode>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
        <childnode refid="14802" relation="include">
        </childnode>
      </node>
      <node id="14831">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="15040">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="14830">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="14831" relation="include">
        </childnode>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14852" relation="include">
        </childnode>
      </node>
      <node id="14958">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14955" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
      </node>
      <node id="14791">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="15017">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="14932">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="14773">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="14774" relation="include">
        </childnode>
      </node>
      <node id="14814">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="14962">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="14879">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="15039">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14938" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
      </node>
      <node id="14854">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="14853">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="14812" relation="include">
        </childnode>
        <childnode refid="14819" relation="include">
        </childnode>
      </node>
      <node id="14809">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.cpp</label>
        <link refid="AMReX__EB__levelset_8cpp"/>
      </node>
      <node id="14794">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H</label>
        <link refid="AMReX__EB__LSCore_8H"/>
      </node>
      <node id="14777">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BArena.cpp</label>
        <link refid="AMReX__BArena_8cpp"/>
      </node>
      <node id="15045">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
        <childnode refid="14930" relation="include">
        </childnode>
      </node>
      <node id="14978">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="14979" relation="include">
        </childnode>
      </node>
      <node id="14810">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="14950">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="14951" relation="include">
        </childnode>
      </node>
      <node id="15011">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="15054">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14943">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="14947" relation="include">
        </childnode>
      </node>
      <node id="15000">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="14787">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
      </node>
      <node id="14935">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="14881">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="14882" relation="include">
        </childnode>
        <childnode refid="14883" relation="include">
        </childnode>
      </node>
      <node id="14898">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="14885">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14886" relation="include">
        </childnode>
        <childnode refid="14929" relation="include">
        </childnode>
      </node>
      <node id="14775">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="14858">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="14986">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFabImpl.H</label>
        <link refid="AMReX__CudaAsyncFabImpl_8H"/>
        <childnode refid="14987" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
      </node>
      <node id="14937">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="14835">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="14983">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="14940">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="15006">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="14863">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
      </node>
      <node id="14907">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.H</label>
        <link refid="AMReX__CGSolver_8H"/>
        <childnode refid="14908" relation="include">
        </childnode>
        <childnode refid="14909" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
      </node>
      <node id="14901">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="15060">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="15055">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14871">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="14828">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="14779" relation="include">
        </childnode>
        <childnode refid="14829" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14830" relation="include">
        </childnode>
        <childnode refid="14964" relation="include">
        </childnode>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14965" relation="include">
        </childnode>
        <childnode refid="14969" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="14970" relation="include">
        </childnode>
      </node>
      <node id="14971">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="14972" relation="include">
        </childnode>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14976" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
        <childnode refid="14978" relation="include">
        </childnode>
        <childnode refid="14980" relation="include">
        </childnode>
        <childnode refid="14981" relation="include">
        </childnode>
        <childnode refid="14982" relation="include">
        </childnode>
        <childnode refid="14983" relation="include">
        </childnode>
        <childnode refid="14984" relation="include">
        </childnode>
        <childnode refid="14986" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14990" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14964" relation="include">
        </childnode>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="15001" relation="include">
        </childnode>
        <childnode refid="15002" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
        <childnode refid="14965" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14890" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="15009" relation="include">
        </childnode>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="15013" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="14953" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
        <childnode refid="14958" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="14918" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15022" relation="include">
        </childnode>
        <childnode refid="15024" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
        <childnode refid="15027" relation="include">
        </childnode>
        <childnode refid="15028" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="15029" relation="include">
        </childnode>
      </node>
      <node id="14829">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="14830" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14859" relation="include">
        </childnode>
      </node>
      <node id="15023">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_K.H</label>
        <link refid="AMReX__MG__K_8H"/>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="14812">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="14807">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="14805">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="14806" relation="include">
        </childnode>
      </node>
      <node id="15016">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="14847">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="14844" relation="include">
        </childnode>
      </node>
      <node id="14846">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="14803">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="14952">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="14953" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14955" relation="include">
        </childnode>
        <childnode refid="14958" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
      </node>
      <node id="14789">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="14788" relation="include">
        </childnode>
      </node>
      <node id="14967">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="14912">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.cpp</label>
        <link refid="AMReX__ABec2_8cpp"/>
      </node>
      <node id="14925">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp</label>
        <link refid="AMReX__MCMultiGrid_8cpp"/>
      </node>
      <node id="15034">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="14956">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="15058">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14957">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="14891">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="14973">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="14784">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14785" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
      </node>
      <node id="14833">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="14921">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.H</label>
        <link refid="AMReX__DivVis_8H"/>
        <childnode refid="14922" relation="include">
        </childnode>
      </node>
      <node id="14852">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="14853" relation="include">
        </childnode>
        <childnode refid="14854" relation="include">
        </childnode>
      </node>
      <node id="14877">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14879" relation="include">
        </childnode>
      </node>
      <node id="14995">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="14876" relation="include">
        </childnode>
      </node>
      <node id="14886">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="14887" relation="include">
        </childnode>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14928" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
      </node>
      <node id="14817">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="14802">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
      </node>
      <node id="14798">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="14799" relation="include">
        </childnode>
      </node>
      <node id="14873">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
      </node>
      <node id="14926">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.cpp</label>
        <link refid="AMReX__MCLinOp_8cpp"/>
      </node>
      <node id="15027">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="14818" relation="include">
        </childnode>
      </node>
      <node id="15064">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="14914">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.cpp</label>
        <link refid="AMReX__ABec4_8cpp"/>
      </node>
      <node id="14919">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.cpp</label>
        <link refid="AMReX__MCInterpBndryData_8cpp"/>
      </node>
      <node id="14782">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="14783" relation="include">
        </childnode>
        <childnode refid="14791" relation="include">
        </childnode>
        <childnode refid="14792" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="14774">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14778" relation="include">
        </childnode>
        <childnode refid="15040" relation="include">
        </childnode>
        <childnode refid="14982" relation="include">
        </childnode>
        <childnode refid="14983" relation="include">
        </childnode>
        <childnode refid="14984" relation="include">
        </childnode>
        <childnode refid="15041" relation="include">
        </childnode>
        <childnode refid="15042" relation="include">
        </childnode>
        <childnode refid="14828" relation="include">
        </childnode>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="15001" relation="include">
        </childnode>
        <childnode refid="15002" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
        <childnode refid="15043" relation="include">
        </childnode>
        <childnode refid="15063" relation="include">
        </childnode>
      </node>
      <node id="14949">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="14869">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="15033">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="15034" relation="include">
        </childnode>
        <childnode refid="14830" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="15001" relation="include">
        </childnode>
        <childnode refid="15002" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="14934" relation="include">
        </childnode>
      </node>
      <node id="14946">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="14825">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14826" relation="include">
        </childnode>
      </node>
      <node id="15036">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="14930" relation="include">
        </childnode>
        <childnode refid="14936" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14803" relation="include">
        </childnode>
        <childnode refid="15037" relation="include">
        </childnode>
        <childnode refid="15038" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
        <childnode refid="15016" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14970" relation="include">
        </childnode>
      </node>
      <node id="14841">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
        <childnode refid="14818" relation="include">
        </childnode>
      </node>
      <node id="14822">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H</label>
        <link refid="AMReX__LoadBalanceKD_8H"/>
        <childnode refid="14823" relation="include">
        </childnode>
      </node>
      <node id="14966">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
      </node>
      <node id="14883">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14884" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
      </node>
      <node id="15038">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="15039" relation="include">
        </childnode>
      </node>
      <node id="14866">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="15042">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="14855">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.H</label>
        <link refid="AMReX__EB__levelset_8H"/>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
      </node>
      <node id="15026">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="14816" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="14771">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H</label>
        <link refid="AMReX_CudaLaunch.H"/>
        <childnode refid="14772" relation="include">
        </childnode>
        <childnode refid="14773" relation="include">
        </childnode>
      </node>
      <node id="14893">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="14979">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="14980" relation="include">
        </childnode>
      </node>
      <node id="15007">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="15008" relation="include">
        </childnode>
      </node>
      <node id="14998">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="14788" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
      </node>
      <node id="14969">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="14888" relation="include">
        </childnode>
        <childnode refid="14898" relation="include">
        </childnode>
      </node>
      <node id="14948">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="14949" relation="include">
        </childnode>
      </node>
      <node id="14930">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="14931" relation="include">
        </childnode>
        <childnode refid="14934" relation="include">
        </childnode>
        <childnode refid="14935" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
      </node>
      <node id="14880">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="14913">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.H</label>
        <link refid="AMReX__ABec4_8H"/>
        <childnode refid="14914" relation="include">
        </childnode>
      </node>
      <node id="14786">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AsyncFillPatch.cpp</label>
        <link refid="AMReX__AsyncFillPatch_8cpp"/>
      </node>
      <node id="14902">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="14903" relation="include">
        </childnode>
      </node>
      <node id="14827">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="14811">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="14812" relation="include">
        </childnode>
      </node>
      <node id="15046">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="15009">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="15010" relation="include">
        </childnode>
        <childnode refid="14969" relation="include">
        </childnode>
        <childnode refid="14918" relation="include">
        </childnode>
      </node>
      <node id="14792">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="14793" relation="include">
        </childnode>
      </node>
      <node id="14918">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.H</label>
        <link refid="AMReX__MCInterpBndryData_8H"/>
        <childnode refid="14919" relation="include">
        </childnode>
      </node>
      <node id="14815">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="15041">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DArena.cpp</label>
        <link refid="AMReX__DArena_8cpp"/>
      </node>
      <node id="14821">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14822" relation="include">
        </childnode>
        <childnode refid="14824" relation="include">
        </childnode>
        <childnode refid="14820" relation="include">
        </childnode>
        <childnode refid="14825" relation="include">
        </childnode>
      </node>
      <node id="14785">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="15053">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="15044" relation="include">
        </childnode>
      </node>
      <node id="14964">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="15028">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="14844" relation="include">
        </childnode>
      </node>
      <node id="14994">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="14995" relation="include">
        </childnode>
      </node>
      <node id="15022">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_3D_K.H</label>
        <link refid="AMReX__MG__3D__K_8H"/>
        <childnode refid="15023" relation="include">
        </childnode>
      </node>
      <node id="15025">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="14815" relation="include">
        </childnode>
      </node>
      <node id="14939">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="15035">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="14931" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
      </node>
      <node id="14963">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="14873" relation="include">
        </childnode>
      </node>
      <node id="14876">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
      </node>
      <node id="14904">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.H</label>
        <link refid="AMReX__LinOp_8H"/>
        <childnode refid="14905" relation="include">
        </childnode>
        <childnode refid="14907" relation="include">
        </childnode>
        <childnode refid="14915" relation="include">
        </childnode>
        <childnode refid="14917" relation="include">
        </childnode>
        <childnode refid="14910" relation="include">
        </childnode>
        <childnode refid="14911" relation="include">
        </childnode>
        <childnode refid="14913" relation="include">
        </childnode>
      </node>
      <node id="14868">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="14826">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="14982">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="14974">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="14975" relation="include">
        </childnode>
      </node>
      <node id="14780">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="14905">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.H</label>
        <link refid="AMReX__ABecLaplacian_8H"/>
        <childnode refid="14906" relation="include">
        </childnode>
        <childnode refid="14907" relation="include">
        </childnode>
        <childnode refid="14911" relation="include">
        </childnode>
      </node>
      <node id="14955">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="14953" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
      </node>
      <node id="14776">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="15019">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="14783">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="14780" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14789" relation="include">
        </childnode>
        <childnode refid="14790" relation="include">
        </childnode>
      </node>
      <node id="15031">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="14821" relation="include">
        </childnode>
      </node>
      <node id="14929">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="14870">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="14871" relation="include">
        </childnode>
      </node>
      <node id="14931">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="14932" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14933" relation="include">
        </childnode>
      </node>
      <node id="14980">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="14990">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="14960">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="14792" relation="include">
        </childnode>
        <childnode refid="14821" relation="include">
        </childnode>
      </node>
      <node id="14861">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="14909">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.cpp</label>
        <link refid="AMReX__MultiGrid_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1LayoutData" prot="public">amrex::LayoutData</innerclass>
    <innerclass refid="structamrex_1_1Cuda_1_1ComponentBox" prot="public">amrex::Cuda::ComponentBox</innerclass>
    <innerclass refid="structamrex_1_1Cuda_1_1GridSize" prot="public">amrex::Cuda::GridSize</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Cuda">amrex::Cuda</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a50d3c1b5aefe758658ea98bb16b433c8" prot="public" static="no">
        <name>AMREX_CUDA_NCELLS_PER_THREAD</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="16" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1af9b9b6a3b6253b425fb57bafb812dff3" prot="public" static="no">
        <name>AMREX_CUDA_WARP_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="17" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a45a9c9b334efe017556083fcfff10dc9" prot="public" static="no">
        <name>AMREX_CUDA_Y_STRIDE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="18" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a4b268a171ec376f8713532502b934b46" prot="public" static="no">
        <name>AMREX_CUDA_Z_STRIDE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="19" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a5bffe7674f4aec5a22bb78db89ab0e41" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOXIV</name>
        <param><defname>BX</defname></param>
        <param><defname>IV</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        long amrex_i_npts = BX.numPts(); \
        for (auto const amrex_i_i : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(amrex_i_npts)) { \
            const auto IV = BX.atOffset(amrex_i_i); \
            block \
        } \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="566" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a65e35e5a45d39e3ef750c66d85e2ae6d" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOXIV</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a5bffe7674f4aec5a22bb78db89ab0e41" kindref="member">AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOXIV</ref>(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="575" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a63b6307fc787b22847883e7e92b78f18" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE</name>
        <param><defname>TN</defname></param>
        <param><defname>TI</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        for (auto const TI : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(TN)) { \
            block \
        } \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="577" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a8ed1caca578db18bc2f0ab9cfcca4720" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_2</name>
        <param><defname>TN1</defname></param>
        <param><defname>TI1</defname></param>
        <param><defname>block1</defname></param>
        <param><defname>TN2</defname></param>
        <param><defname>TI2</defname></param>
        <param><defname>block2</defname></param>
        <initializer>{ \
        for (auto const TI1 : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(TN1)) { \
            block1 \
        } \
        for (auto const TI2 : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(TN2)) { \
            block2 \
        } \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="584" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a005591e617bb87bf43a28e42f954dc7d" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_3</name>
        <param><defname>TN1</defname></param>
        <param><defname>TI1</defname></param>
        <param><defname>block1</defname></param>
        <param><defname>TN2</defname></param>
        <param><defname>TI2</defname></param>
        <param><defname>block2</defname></param>
        <param><defname>TN3</defname></param>
        <param><defname>TI3</defname></param>
        <param><defname>block3</defname></param>
        <initializer>{ \
        for (auto const TI1 : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(TN1)) { \
            block1 \
        } \
        for (auto const TI2 : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(TN2)) { \
            block2 \
        } \
        for (auto const TI3 : <ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">amrex::Cuda::Range</ref>(TN3)) { \
            block3 \
        } \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="594" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1afa326403c2a5d2ed4efcb7d7799b8e16" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a63b6307fc787b22847883e7e92b78f18" kindref="member">AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE</ref>(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="607" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ad1db42d4c50254e1ee81df4836bf2a36" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_2</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a8ed1caca578db18bc2f0ab9cfcca4720" kindref="member">AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_2</ref>(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="608" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a6f44a39dcdffcb16bd0672c44d9d4511" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_3</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a005591e617bb87bf43a28e42f954dc7d" kindref="member">AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_3</ref>(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="609" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ad758a0aa0e589ff611167ff4f541ef84" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOX</name>
        <param><defname>bbb</defname></param>
        <param><defname>tbb</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref>&amp; tbb = bbb; \
        block \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="611" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a8add31175a78f260a11e84267462f333" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOX</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1ad758a0aa0e589ff611167ff4f541ef84" kindref="member">AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOX</ref>(__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="617" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a550d2d5809e095e927981708b0295036" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_ASYNC</name>
        <param><defname>bbb</defname></param>
        <param><defname>tbb</defname></param>
        <param><defname>sync_id</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref>&amp; tbb = bbb; \
        block \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="619" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1add8f4ad74da3f0738313e315052eaee2" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE_XYZ</name>
        <param><defname>bbx</defname></param>
        <param><defname>bby</defname></param>
        <param><defname>bbz</defname></param>
        <param><defname>tbx</defname></param>
        <param><defname>tby</defname></param>
        <param><defname>tbz</defname></param>
        <param><defname>blockx</defname></param>
        <param><defname>blocky</defname></param>
        <param><defname>blockz</defname></param>
        <initializer>{ \
        const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref>&amp; tbx = bbx; \
        blockx \
        const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref>&amp; tby = bby; \
        blocky \
        const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref>&amp; tbz = bbz; \
        blockz \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="625" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a7f03176fb56f74a38b8a8bae91d8f564" prot="public" static="no">
        <name>AMREX_CUDA_FOR_1D_IMPL</name>
        <param><defname>n</defname></param>
        <param><defname>i</defname></param>
        <param><defname>block</defname></param>
        <initializer>for (auto i = decltype(n){0}; i &lt; n; ++i) {     \
            block \
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="635" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a251e8b5e7dbe6cbc829b9bb4a004ff6f" prot="public" static="no">
        <name>AMREX_CUDA_PARALLEL_FOR_1D_IMPL</name>
        <param><defname>n</defname></param>
        <param><defname>i</defname></param>
        <param><defname>block</defname></param>
        <initializer><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref> \
        for (auto i = decltype(n){0}; i &lt; n; ++i) {     \
            block \
        }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="640" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1acb8538ffb878499a71558f05b4b9043b" prot="public" static="no">
        <name>AMREX_CUDA_FOR_3D_IMPL</name>
        <param><defname>box</defname></param>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>k</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        const auto amrex_i_lo = <ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box); \
        const auto amrex_i_hi = <ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box); \
        for (int k = amrex_i_lo.z; k &lt;= amrex_i_hi.z; ++k) { \
        for (int j = amrex_i_lo.y; j &lt;= amrex_i_hi.y; ++j) { \
        for (int i = amrex_i_lo.x; i &lt;= amrex_i_hi.x; ++i) { \
            block \
        }}} \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="646" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a143dd3319e86265840053a7bea5780e4" prot="public" static="no">
        <name>AMREX_CUDA_PARALLEL_FOR_3D_IMPL</name>
        <param><defname>box</defname></param>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>k</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        const auto amrex_i_lo = <ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box); \
        const auto amrex_i_hi = <ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box); \
        for (int k = amrex_i_lo.z; k &lt;= amrex_i_hi.z; ++k) { \
        for (int j = amrex_i_lo.y; j &lt;= amrex_i_hi.y; ++j) { \
        <ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref> \
        for (int i = amrex_i_lo.x; i &lt;= amrex_i_hi.x; ++i) { \
            block \
        }}} \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="657" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ab010703fba8c39cfcb388910c40c9f7f" prot="public" static="no">
        <name>AMREX_CUDA_FOR_4D_IMPL</name>
        <param><defname>box</defname></param>
        <param><defname>ncomp</defname></param>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>k</defname></param>
        <param><defname>n</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        const auto amrex_i_lo = <ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box); \
        const auto amrex_i_hi = <ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box); \
        for (int n = 0; n &lt; ncomp; ++n) { \
        for (int k = amrex_i_lo.z; k &lt;= amrex_i_hi.z; ++k) { \
        for (int j = amrex_i_lo.y; j &lt;= amrex_i_hi.y; ++j) { \
        for (int i = amrex_i_lo.x; i &lt;= amrex_i_hi.x; ++i) { \
            block \
        }}}} \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="669" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a52e535b13401714ea1dade47b1b4b2a6" prot="public" static="no">
        <name>AMREX_CUDA_PARALLEL_FOR_4D_IMPL</name>
        <param><defname>box</defname></param>
        <param><defname>ncomp</defname></param>
        <param><defname>i</defname></param>
        <param><defname>j</defname></param>
        <param><defname>k</defname></param>
        <param><defname>n</defname></param>
        <param><defname>block</defname></param>
        <initializer>{ \
        const auto amrex_i_lo = <ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box); \
        const auto amrex_i_hi = <ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box); \
        for (int n = 0; n &lt; ncomp; ++n) { \
        for (int k = amrex_i_lo.z; k &lt;= amrex_i_hi.z; ++k) { \
        for (int j = amrex_i_lo.y; j &lt;= amrex_i_hi.y; ++j) { \
        <ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref> \
        for (int i = amrex_i_lo.x; i &lt;= amrex_i_hi.x; ++i) { \
            block \
        }}}} \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="681" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1af3fb01469e99f3091ced2ad981439338" prot="public" static="no">
        <name>AMREX_CUDA_HOST_DEVICE_FOR_1D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a7f03176fb56f74a38b8a8bae91d8f564" kindref="member">AMREX_CUDA_FOR_1D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="694" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ac8d2e4329c038e608b2903492f14c86e" prot="public" static="no">
        <name>AMREX_CUDA_DEVICE_FOR_1D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a7f03176fb56f74a38b8a8bae91d8f564" kindref="member">AMREX_CUDA_FOR_1D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="695" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a06b3625bc53bc8529f113b4cbdf2ed3c" prot="public" static="no">
        <name>AMREX_CUDA_HOST_DEVICE_FOR_3D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1acb8538ffb878499a71558f05b4b9043b" kindref="member">AMREX_CUDA_FOR_3D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="697" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a9efa305d3ba9959b3457321fa653bbd2" prot="public" static="no">
        <name>AMREX_CUDA_DEVICE_FOR_3D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1acb8538ffb878499a71558f05b4b9043b" kindref="member">AMREX_CUDA_FOR_3D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="698" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ae6344d99eefb22b1053479b184f00690" prot="public" static="no">
        <name>AMREX_CUDA_HOST_DEVICE_FOR_4D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1ab010703fba8c39cfcb388910c40c9f7f" kindref="member">AMREX_CUDA_FOR_4D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="700" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a1ec50557e5fe9d029866f97f42f268b8" prot="public" static="no">
        <name>AMREX_CUDA_DEVICE_FOR_4D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1ab010703fba8c39cfcb388910c40c9f7f" kindref="member">AMREX_CUDA_FOR_4D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="701" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a132099fa459823ae0e14349dbefcf1aa" prot="public" static="no">
        <name>AMREX_CUDA_DEVICE_PARALLEL_FOR_1D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a251e8b5e7dbe6cbc829b9bb4a004ff6f" kindref="member">AMREX_CUDA_PARALLEL_FOR_1D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="703" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a57449a5a4af348bfef691abc41f1590e" prot="public" static="no">
        <name>AMREX_CUDA_DEVICE_PARALLEL_FOR_3D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a143dd3319e86265840053a7bea5780e4" kindref="member">AMREX_CUDA_PARALLEL_FOR_3D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="704" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ab7143140b8f8224ded655dd3569555e1" prot="public" static="no">
        <name>AMREX_CUDA_DEVICE_PARALLEL_FOR_4D</name>
        <param><defname>...</defname></param>
        <initializer><ref refid="AMReX__CudaLaunch_8H_1a52e535b13401714ea1dade47b1b4b2a6" kindref="member">AMREX_CUDA_PARALLEL_FOR_4D_IMPL</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="705" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1ae2036212d83a24124cb193bf5986a1c2" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_HOST_DEVICE</name>
        <param><defname>strategy</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="namespaceamrex_1a006c22eb1e141a0784faa415c00a49c4" kindref="member">amrex::launch_host</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="707" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a646603fd1b68abfc3b87ed49cbda9d6d" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_DEVICE</name>
        <param><defname>strategy</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="namespaceamrex_1a006c22eb1e141a0784faa415c00a49c4" kindref="member">amrex::launch_host</ref>(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="708" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__CudaLaunch_8H_1a6fa0b26c1551671a64ec4a324e725136" prot="public" static="no">
        <name>AMREX_CUDA_LAUNCH_GLOBAL</name>
        <param><defname>strategy</defname></param>
        <param><defname>function</defname></param>
        <param><defname>...</defname></param>
        <initializer>function(__VA_ARGS__);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" line="709" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H" bodystart="709" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_CUDA_LAUNCH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuQualifiers_8H" kindref="compound">AMReX_GpuQualifiers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuControl_8H" kindref="compound">AMReX_GpuControl.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuError_8H" kindref="compound">AMReX_GpuError.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CudaRange_8H" kindref="compound">AMReX_CudaRange.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CudaDevice_8H" kindref="compound">AMReX_CudaDevice.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Box_8H" kindref="compound">AMReX_Box.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Extension_8H" kindref="compound">AMReX_Extension.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLassert_8H" kindref="compound">AMReX_BLassert.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="AMReX__CudaLaunch_8H_1a50d3c1b5aefe758658ea98bb16b433c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_NCELLS_PER_THREAD<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="AMReX__CudaLaunch_8H_1af9b9b6a3b6253b425fb57bafb812dff3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_WARP_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="AMReX__CudaLaunch_8H_1a45a9c9b334efe017556083fcfff10dc9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_Y_STRIDE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="AMReX__CudaLaunch_8H_1a4b268a171ec376f8713532502b934b46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_Z_STRIDE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>&amp;&amp;<sp/>defined(__CUDACC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CUDA<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOXIV(BX,IV,block)<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_npts<sp/>=<sp/>BX.numPts();<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(amrex_i_npts);<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>amrex_i_i<sp/>:<sp/>amrex::Cuda::Range(amrex_i_npts))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>IV<sp/>=<sp/>BX.atOffset(amrex_i_i);<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_npts<sp/>=<sp/>BX.numPts();<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>amrex_i_i<sp/>:<sp/>amrex::Cuda::Range(amrex_i_npts))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>IV<sp/>=<sp/>BX.atOffset(amrex_i_i);<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOXIV(BX,IV,block)<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_npts<sp/>=<sp/>BX.numPts();<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(amrex_i_npts);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>amrex_i_i<sp/>:<sp/>amrex::Cuda::Range(amrex_i_npts))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>IV<sp/>=<sp/>BX.atOffset(amrex_i_i);<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Abort(&quot;AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOXIV:<sp/>cannot<sp/>call<sp/>device<sp/>function<sp/>from<sp/>host&quot;);<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE(TN,TI,block)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI<sp/>:<sp/>amrex::Cuda::Range(TN))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI<sp/>:<sp/>amrex::Cuda::Range(TN))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>fused<sp/>launches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_2(TN1,TI1,block1,TN2,TI2,block2)<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec1<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN1);<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec2<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN2);<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>amrex_i_nblocks<sp/>=<sp/>amrex::max(amrex_i_ec1.numBlocks.x,<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_ec2.numBlocks.x);<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_nblocks.y<sp/>=<sp/>2;<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_nblocks,<sp/>amrex_i_ec1.numThreads,<sp/>0,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(blockIdx.y)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>0:<sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>1:<sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>three<sp/>fused<sp/>launches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_3(TN1,TI1,block1,TN2,TI2,block2,TN3,TI3,block3)<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec1<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN1);<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec2<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN2);<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec3<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN3);<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>amrex_i_nblocks<sp/>=<sp/>amrex::max(amrex::max(amrex_i_ec1.numBlocks.x,<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_ec2.numBlocks.x),<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_ec3.numBlocks.x);<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_nblocks.y<sp/>=<sp/>3;<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_nblocks,<sp/>amrex_i_ec1.numThreads,<sp/>0,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(blockIdx.y)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>0:<sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>1:<sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>2:<sp/>for<sp/>(auto<sp/>const<sp/>TI3<sp/>:<sp/>amrex::Cuda::Range(TN3))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block3<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI3<sp/>:<sp/>amrex::Cuda::Range(TN3))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block3<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE(TN,TI,block)<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN);<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI<sp/>:<sp/>amrex::Cuda::Range(TN))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Abort(&quot;AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE:<sp/>cannot<sp/>call<sp/>device<sp/>function<sp/>from<sp/>host&quot;);<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>fused<sp/>launches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_2(TN1,TI1,block1,TN2,TI2,block2)<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec1<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN1);<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec2<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN2);<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>amrex_i_nblocks<sp/>=<sp/>amrex::max(amrex_i_ec1.numBlocks.x,<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_ec2.numBlocks.x);<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_nblocks.y<sp/>=<sp/>2;<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_nblocks,<sp/>amrex_i_ec1.numThreads,<sp/>0,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(blockIdx.y)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>0:<sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>1:<sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Abort(&quot;AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_2:<sp/>cannot<sp/>call<sp/>device<sp/>function<sp/>from<sp/>host&quot;);<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>three<sp/>fused<sp/>launches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_3(TN1,TI1,block1,TN2,TI2,block2,TN3,TI3,block3)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec1<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN1);<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec2<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN2);<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec3<sp/>=<sp/>amrex::Cuda::ExecutionConfig(TN3);<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>amrex_i_nblocks<sp/>=<sp/>amrex::max(amrex::max(amrex_i_ec1.numBlocks.x,<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_ec2.numBlocks.x),<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_ec3.numBlocks.x);<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_nblocks.y<sp/>=<sp/>3;<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_nblocks,<sp/>amrex_i_ec1.numThreads,<sp/>0,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(blockIdx.y)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>0:<sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>1:<sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>2:<sp/>for<sp/>(auto<sp/>const<sp/>TI3<sp/>:<sp/>amrex::Cuda::Range(TN3))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block3<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Abort(&quot;AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_2:<sp/>cannot<sp/>call<sp/>device<sp/>function<sp/>from<sp/>host&quot;);<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOX(bbb,tbb,block)<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(bbb);<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_numpts<sp/>=<sp/>bbb.numPts();<sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_tid<sp/>=<sp/>blockDim.x*blockIdx.x<sp/>+<sp/>threadIdx.x;<sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_wid<sp/>=<sp/>amrex_i_tid<sp/>/<sp/>AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_lid<sp/>=<sp/>amrex_i_tid<sp/>-<sp/>amrex_i_wid*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_offset<sp/>=<sp/>amrex_i_lid<sp/>+<sp/>amrex_i_wid*AMREX_CUDA_NCELLS_PER_THREAD*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(long<sp/>amrex_i_i<sp/>=<sp/>0;<sp/>amrex_i_i<sp/>&lt;<sp/>AMREX_CUDA_NCELLS_PER_THREAD;<sp/>++amrex_i_i,<sp/>amrex_i_offset<sp/>+=<sp/>AMREX_CUDA_WARP_SIZE)<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tbb<sp/>=<sp/>amrex::Cuda::getThreadBox(bbb,<sp/>amrex_i_offset);<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tbb.ok())<sp/>block<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbb<sp/>=<sp/>bbb;<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_ASYNC(bbb,tbb,sync_var,block)<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(bbb);<sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_numpts<sp/>=<sp/>bbb.numPts();<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_tid<sp/>=<sp/>blockDim.x*blockIdx.x<sp/>+<sp/>threadIdx.x;<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_wid<sp/>=<sp/>amrex_i_tid<sp/>/<sp/>AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_lid<sp/>=<sp/>amrex_i_tid<sp/>-<sp/>amrex_i_wid*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_offset<sp/>=<sp/>amrex_i_lid<sp/>+<sp/>amrex_i_wid*AMREX_CUDA_NCELLS_PER_THREAD*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(long<sp/>amrex_i_i<sp/>=<sp/>0;<sp/>amrex_i_i<sp/>&lt;<sp/>AMREX_CUDA_NCELLS_PER_THREAD;<sp/>++amrex_i_i,<sp/>amrex_i_offset<sp/>+=<sp/>AMREX_CUDA_WARP_SIZE)<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tbb<sp/>=<sp/>amrex::Cuda::getThreadBox(bbb,<sp/>amrex_i_offset);<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tbb.ok())<sp/>block<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++sync_var;<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Cuda::Device::set_stream_index(sync_var);<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbb<sp/>=<sp/>bbb;<sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOX(bbb,tbb,block)<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(bbb);<sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_numpts<sp/>=<sp/>bbb.numPts();<sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_tid<sp/>=<sp/>blockDim.x*blockIdx.x<sp/>+<sp/>threadIdx.x;<sp/>\</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_wid<sp/>=<sp/>amrex_i_tid<sp/>/<sp/>AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_lid<sp/>=<sp/>amrex_i_tid<sp/>-<sp/>amrex_i_wid*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_offset<sp/>=<sp/>amrex_i_lid<sp/>+<sp/>amrex_i_wid*AMREX_CUDA_NCELLS_PER_THREAD*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(long<sp/>amrex_i_i<sp/>=<sp/>0;<sp/>amrex_i_i<sp/>&lt;<sp/>AMREX_CUDA_NCELLS_PER_THREAD;<sp/>++amrex_i_i,<sp/>amrex_i_offset<sp/>+=<sp/>AMREX_CUDA_WARP_SIZE)<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tbb<sp/>=<sp/>amrex::Cuda::getThreadBox(bbb,<sp/>amrex_i_offset);<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tbb.ok())<sp/>block<sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Abort(&quot;AMREX_CUDA_LAUNCH_DEVICE_LAMBDA:<sp/>cannot<sp/>call<sp/>device<sp/>function<sp/>from<sp/>host&quot;);<sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_XYZ(bbx,bby,bbz,tbx,tby,tbz,blockx,blocky,blockz)<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>max_pts<sp/>=<sp/>std::max(bbx.numPts(),<sp/>std::max(bby.numPts(),<sp/>bbz.numPts()));<sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>Cuda::ExecutionConfig(max_pts);<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_tid<sp/>=<sp/>blockDim.x*blockIdx.x<sp/>+<sp/>threadIdx.x;<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_wid<sp/>=<sp/>amrex_i_tid<sp/>/<sp/>AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_lid<sp/>=<sp/>amrex_i_tid<sp/>-<sp/>amrex_i_wid*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>long<sp/>amrex_i_offset<sp/>=<sp/>amrex_i_lid<sp/>+<sp/>amrex_i_wid*AMREX_CUDA_NCELLS_PER_THREAD*AMREX_CUDA_WARP_SIZE;<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_loc_offset<sp/>=<sp/>amrex_i_offset;<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(long<sp/>amrex_i_i<sp/>=<sp/>0;<sp/>amrex_i_i<sp/>&lt;<sp/>AMREX_CUDA_NCELLS_PER_THREAD;<sp/>++amrex_i_i,<sp/>amrex_i_loc_offset<sp/>+=<sp/>AMREX_CUDA_WARP_SIZE)<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tbx<sp/>=<sp/>amrex::Cuda::getThreadBox(bbx,<sp/>amrex_i_loc_offset);<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tbx.ok())<sp/>blockx<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_loc_offset<sp/>=<sp/>amrex_i_offset;<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(long<sp/>amrex_i_i<sp/>=<sp/>0;<sp/>amrex_i_i<sp/>&lt;<sp/>AMREX_CUDA_NCELLS_PER_THREAD;<sp/>++amrex_i_i,<sp/>amrex_i_loc_offset<sp/>+=<sp/>AMREX_CUDA_WARP_SIZE)<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tby<sp/>=<sp/>amrex::Cuda::getThreadBox(bby,<sp/>amrex_i_loc_offset);<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tby.ok())<sp/>blocky<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_loc_offset<sp/>=<sp/>amrex_i_offset;<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(long<sp/>amrex_i_i<sp/>=<sp/>0;<sp/>amrex_i_i<sp/>&lt;<sp/>AMREX_CUDA_NCELLS_PER_THREAD;<sp/>++amrex_i_i,<sp/>amrex_i_loc_offset<sp/>+=<sp/>AMREX_CUDA_WARP_SIZE)<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tbz<sp/>=<sp/>amrex::Cuda::getThreadBox(bbz,<sp/>amrex_i_loc_offset);<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tbz.ok())<sp/>blockz<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbx<sp/>=<sp/>bbx;<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockx<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tby<sp/>=<sp/>bby;<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocky<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbz<sp/>=<sp/>bbz;<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockz<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_NOBOX(bbb,tbb,block)<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig();<sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>bbb.loVect3d();<sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>bbb.hiVect3d();<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_k<sp/>=<sp/>amrex_i_lo[2]<sp/>+<sp/>blockIdx.z<sp/>*<sp/>blockDim.z<sp/>+<sp/>threadIdx.z;<sp/>amrex_i_k<sp/>&lt;=<sp/>amrex_i_hi[2];<sp/>amrex_i_k<sp/>+=<sp/>blockDim.z<sp/>*<sp/>gridDim.z)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_j<sp/>=<sp/>amrex_i_lo[1]<sp/>+<sp/>blockIdx.y<sp/>*<sp/>blockDim.y<sp/>+<sp/>threadIdx.y;<sp/>amrex_i_j<sp/>&lt;=<sp/>amrex_i_hi[1];<sp/>amrex_i_j<sp/>+=<sp/>blockDim.y<sp/>*<sp/>gridDim.y)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_i<sp/>=<sp/>amrex_i_lo[0]<sp/>+<sp/>blockIdx.x<sp/>*<sp/>blockDim.x<sp/>+<sp/>threadIdx.x;<sp/>amrex_i_i<sp/>&lt;=<sp/>amrex_i_hi[0];<sp/>amrex_i_i<sp/>+=<sp/>blockDim.x<sp/>*<sp/>gridDim.x)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Box<sp/>tbb(IntVect(AMREX_D_DECL(amrex_i_i,amrex_i_j,amrex_i_k)),<sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntVect(AMREX_D_DECL(amrex_i_i,amrex_i_j,amrex_i_k)),<sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbb.type());<sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbb<sp/>=<sp/>bbb;<sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE(strategy,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>strategy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>\</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_host(__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE(strategy,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>strategy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>\</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Abort(&quot;AMREX_CUDA_LAUNCH_DEVICE:<sp/>cannot<sp/>call<sp/>device<sp/>function<sp/>from<sp/>host&quot;);<sp/>\</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cannot<sp/>respect<sp/>Gpu::inLaunchRegion<sp/>because<sp/>function<sp/>must<sp/>be<sp/>__global__.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_GLOBAL(strategy,<sp/>function,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>strategy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="405"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR_1D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_HOST_DEVICE_FOR_1D(n,i,block)<sp/>\</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(n);<sp/>\</highlight></codeline>
<codeline lineno="413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>amrex_i_stride<sp/>=<sp/>blockDim.x*gridDim.x;<sp/>\</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>amrex_i_stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="417"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_PRAGMA_SIMD<sp/>\</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>i<sp/>=<sp/>decltype(n){0};<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>block<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_FOR_1D(n,i,block)<sp/>\</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="429"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(n);<sp/>\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>amrex_i_stride<sp/>=<sp/>blockDim.x*gridDim.x;<sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>amrex_i_stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_PARALLEL_FOR_1D(...)<sp/>AMREX_CUDA_DEVICE_FOR_1D(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR_3D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_HOST_DEVICE_FOR_3D(box,i,j,k,block)<sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>amrex_i_ncells<sp/>=<sp/>box.numPts();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/><sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_len<sp/>=<sp/>amrex::length(box);<sp/>\</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(amrex_i_ncells);<sp/>\</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>amrex_i_stride<sp/>=<sp/>blockDim.x*gridDim.x;<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_icell<sp/>&lt;<sp/>amrex_i_ncells;<sp/>amrex_i_icell<sp/>+=<sp/>amrex_i_stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>k<sp/>=<sp/><sp/>amrex_i_icell<sp/>/<sp/><sp/><sp/>(amrex_i_len.x*amrex_i_len.y);<sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>/<sp/><sp/><sp/>amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>-<sp/>j*amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>amrex_i_lo.x;<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>amrex_i_lo.y;<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>amrex_i_lo.z;<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>amrex::ubound(box);<sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>amrex_i_lo.z;<sp/>k<sp/>&lt;=<sp/>amrex_i_hi.z;<sp/>++k)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>amrex_i_lo.y;<sp/>j<sp/>&lt;=<sp/>amrex_i_hi.y;<sp/>++j)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_PRAGMA_SIMD<sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>amrex_i_lo.x;<sp/>i<sp/>&lt;=<sp/>amrex_i_hi.x;<sp/>++i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}<sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_FOR_3D(box,i,j,k,block)<sp/>\</highlight></codeline>
<codeline lineno="478"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="479"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>amrex_i_ncells<sp/>=<sp/>box.numPts();<sp/>\</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/><sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_len<sp/>=<sp/>amrex::length(box);<sp/>\</highlight></codeline>
<codeline lineno="482"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(amrex_i_ncells);<sp/>\</highlight></codeline>
<codeline lineno="483"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>amrex_i_stride<sp/>=<sp/>blockDim.x*gridDim.x;<sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_icell<sp/>&lt;<sp/>amrex_i_ncells;<sp/>amrex_i_icell<sp/>+=<sp/>amrex_i_stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>k<sp/>=<sp/><sp/>amrex_i_icell<sp/>/<sp/><sp/><sp/>(amrex_i_len.x*amrex_i_len.y);<sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>/<sp/><sp/><sp/>amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>-<sp/>j*amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>amrex_i_lo.x;<sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>amrex_i_lo.y;<sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>amrex_i_lo.z;<sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_PARALLEL_FOR_3D(...)<sp/>AMREX_CUDA_DEVICE_FOR_3D(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FOR_4D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_HOST_DEVICE_FOR_4D(box,ncomp,i,j,k,n,block)<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(amrex::Gpu::inLaunchRegion())<sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="506"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>amrex_i_ncells<sp/>=<sp/>box.numPts();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="507"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/><sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="508"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_len<sp/>=<sp/>amrex::length(box);<sp/>\</highlight></codeline>
<codeline lineno="509"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(amrex_i_ncells);<sp/>\</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>amrex_i_stride<sp/>=<sp/>blockDim.x*gridDim.x;<sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_icell<sp/>&lt;<sp/>amrex_i_ncells;<sp/>amrex_i_icell<sp/>+=<sp/>amrex_i_stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>k<sp/>=<sp/><sp/>amrex_i_icell<sp/>/<sp/><sp/><sp/>(amrex_i_len.x*amrex_i_len.y);<sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>/<sp/><sp/><sp/>amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>-<sp/>j*amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>amrex_i_lo.x;<sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>amrex_i_lo.y;<sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>amrex_i_lo.z;<sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>block<sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="523"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="526"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>amrex::ubound(box);<sp/>\</highlight></codeline>
<codeline lineno="528"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>amrex_i_lo.z;<sp/>k<sp/>&lt;=<sp/>amrex_i_hi.z;<sp/>++k)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>amrex_i_lo.y;<sp/>j<sp/>&lt;=<sp/>amrex_i_hi.y;<sp/>++j)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_PRAGMA_SIMD<sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>amrex_i_lo.x;<sp/>i<sp/>&lt;=<sp/>amrex_i_hi.x;<sp/>++i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}}<sp/>\</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_FOR_4D(box,ncomp,i,j,k,n,block)<sp/>\</highlight></codeline>
<codeline lineno="538"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>amrex_i_ncells<sp/>=<sp/>box.numPts();<sp/>\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/><sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_len<sp/>=<sp/>amrex::length(box);<sp/>\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_ec<sp/>=<sp/>amrex::Cuda::ExecutionConfig(amrex_i_ncells);<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::launch_global&lt;&lt;&lt;amrex_i_ec.numBlocks,<sp/>amrex_i_ec.numThreads,<sp/>amrex_i_ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/>AMREX_GPU_DEVICE<sp/>()<sp/>noexcept<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="545"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>amrex_i_icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>amrex_i_stride<sp/>=<sp/>blockDim.x*gridDim.x;<sp/>\</highlight></codeline>
<codeline lineno="546"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex_i_icell<sp/>&lt;<sp/>amrex_i_ncells;<sp/>amrex_i_icell<sp/>+=<sp/>amrex_i_stride)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="547"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>k<sp/>=<sp/><sp/>amrex_i_icell<sp/>/<sp/><sp/><sp/>(amrex_i_len.x*amrex_i_len.y);<sp/>\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>/<sp/><sp/><sp/>amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>(amrex_i_icell<sp/>-<sp/>k*(amrex_i_len.x*amrex_i_len.y))<sp/>-<sp/>j*amrex_i_len.x;<sp/>\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>amrex_i_lo.x;<sp/>\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>amrex_i_lo.y;<sp/>\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>amrex_i_lo.z;<sp/>\</highlight></codeline>
<codeline lineno="553"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>block<sp/>\</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});<sp/>\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_GPU_ERROR_CHECK();<sp/>\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_PARALLEL_FOR_4D(...)<sp/>AMREX_CUDA_DEVICE_FOR_4D(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//<sp/>************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CPU<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="AMReX__CudaLaunch_8H_1a5bffe7674f4aec5a22bb78db89ab0e41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOXIV(BX,IV,block)<sp/>\</highlight></codeline>
<codeline lineno="567"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="568"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>amrex_i_npts<sp/>=<sp/>BX.numPts();<sp/>\</highlight></codeline>
<codeline lineno="569"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>amrex_i_i<sp/>:<sp/>amrex::Cuda::Range(amrex_i_npts))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>IV<sp/>=<sp/>BX.atOffset(amrex_i_i);<sp/>\</highlight></codeline>
<codeline lineno="571"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="573"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="AMReX__CudaLaunch_8H_1a65e35e5a45d39e3ef750c66d85e2ae6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOXIV(...)<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOXIV(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="AMReX__CudaLaunch_8H_1a63b6307fc787b22847883e7e92b78f18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE(TN,TI,block)<sp/>\</highlight></codeline>
<codeline lineno="578"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="579"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI<sp/>:<sp/>amrex::Cuda::Range(TN))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="580"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="581"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="582"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="AMReX__CudaLaunch_8H_1a8ed1caca578db18bc2f0ab9cfcca4720" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_2(TN1,TI1,block1,TN2,TI2,block2)<sp/>\</highlight></codeline>
<codeline lineno="585"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="587"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="588"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="592"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="AMReX__CudaLaunch_8H_1a005591e617bb87bf43a28e42f954dc7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_3(TN1,TI1,block1,TN2,TI2,block2,TN3,TI3,block3)<sp/>\</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI1<sp/>:<sp/>amrex::Cuda::Range(TN1))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block1<sp/>\</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI2<sp/>:<sp/>amrex::Cuda::Range(TN2))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block2<sp/>\</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>const<sp/>TI3<sp/>:<sp/>amrex::Cuda::Range(TN3))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block3<sp/>\</highlight></codeline>
<codeline lineno="604"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="605"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="AMReX__CudaLaunch_8H_1afa326403c2a5d2ed4efcb7d7799b8e16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE(...)<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="AMReX__CudaLaunch_8H_1ad1db42d4c50254e1ee81df4836bf2a36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_2(...)<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_2(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="AMReX__CudaLaunch_8H_1a6f44a39dcdffcb16bd0672c44d9d4511" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_RANGE_3(...)<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_RANGE_3(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="AMReX__CudaLaunch_8H_1ad758a0aa0e589ff611167ff4f541ef84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOX(bbb,tbb,block)<sp/>\</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="613"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbb<sp/>=<sp/>bbb;<sp/>\</highlight></codeline>
<codeline lineno="614"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="615"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="AMReX__CudaLaunch_8H_1a8add31175a78f260a11e84267462f333" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE_LAMBDA_BOX(...)<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_BOX(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="AMReX__CudaLaunch_8H_1a550d2d5809e095e927981708b0295036" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_LAMBDA_ASYNC(bbb,tbb,sync_id,block)<sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="621"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbb<sp/>=<sp/>bbb;<sp/>\</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="623"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="AMReX__CudaLaunch_8H_1add8f4ad74da3f0738313e315052eaee2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE_XYZ(bbx,bby,bbz,tbx,tby,tbz,blockx,blocky,blockz)<sp/>\</highlight></codeline>
<codeline lineno="626"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="627"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbx<sp/>=<sp/>bbx;<sp/>\</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockx<sp/>\</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tby<sp/>=<sp/>bby;<sp/>\</highlight></codeline>
<codeline lineno="630"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocky<sp/>\</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>amrex::Box&amp;<sp/>tbz<sp/>=<sp/>bbz;<sp/>\</highlight></codeline>
<codeline lineno="632"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockz<sp/>\</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="AMReX__CudaLaunch_8H_1a7f03176fb56f74a38b8a8bae91d8f564" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_FOR_1D_IMPL(n,i,block)<sp/>\</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>i<sp/>=<sp/>decltype(n){0};<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="AMReX__CudaLaunch_8H_1a251e8b5e7dbe6cbc829b9bb4a004ff6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_PARALLEL_FOR_1D_IMPL(n,i,block)<sp/>\</highlight></codeline>
<codeline lineno="641"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_PRAGMA_SIMD<sp/>\</highlight></codeline>
<codeline lineno="642"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto<sp/>i<sp/>=<sp/>decltype(n){0};<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="644"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="AMReX__CudaLaunch_8H_1acb8538ffb878499a71558f05b4b9043b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_FOR_3D_IMPL(box,i,j,k,block)<sp/>\</highlight></codeline>
<codeline lineno="647"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="648"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="649"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>amrex::ubound(box);<sp/>\</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>amrex_i_lo.z;<sp/>k<sp/>&lt;=<sp/>amrex_i_hi.z;<sp/>++k)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="651"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>amrex_i_lo.y;<sp/>j<sp/>&lt;=<sp/>amrex_i_hi.y;<sp/>++j)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>amrex_i_lo.x;<sp/>i<sp/>&lt;=<sp/>amrex_i_hi.x;<sp/>++i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="653"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}<sp/>\</highlight></codeline>
<codeline lineno="655"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657" refid="AMReX__CudaLaunch_8H_1a143dd3319e86265840053a7bea5780e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_PARALLEL_FOR_3D_IMPL(box,i,j,k,block)<sp/>\</highlight></codeline>
<codeline lineno="658"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>amrex::ubound(box);<sp/>\</highlight></codeline>
<codeline lineno="661"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>amrex_i_lo.z;<sp/>k<sp/>&lt;=<sp/>amrex_i_hi.z;<sp/>++k)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="662"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>amrex_i_lo.y;<sp/>j<sp/>&lt;=<sp/>amrex_i_hi.y;<sp/>++j)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="663"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_PRAGMA_SIMD<sp/>\</highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>amrex_i_lo.x;<sp/>i<sp/>&lt;=<sp/>amrex_i_hi.x;<sp/>++i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="665"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}<sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="AMReX__CudaLaunch_8H_1ab010703fba8c39cfcb388910c40c9f7f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_FOR_4D_IMPL(box,ncomp,i,j,k,n,block)<sp/>\</highlight></codeline>
<codeline lineno="670"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="671"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="672"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>amrex::ubound(box);<sp/>\</highlight></codeline>
<codeline lineno="673"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="674"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>amrex_i_lo.z;<sp/>k<sp/>&lt;=<sp/>amrex_i_hi.z;<sp/>++k)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>amrex_i_lo.y;<sp/>j<sp/>&lt;=<sp/>amrex_i_hi.y;<sp/>++j)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="676"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>amrex_i_lo.x;<sp/>i<sp/>&lt;=<sp/>amrex_i_hi.x;<sp/>++i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="677"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="678"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}}<sp/>\</highlight></codeline>
<codeline lineno="679"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="AMReX__CudaLaunch_8H_1a52e535b13401714ea1dade47b1b4b2a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_PARALLEL_FOR_4D_IMPL(box,ncomp,i,j,k,n,block)<sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_lo<sp/>=<sp/>amrex::lbound(box);<sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>amrex_i_hi<sp/>=<sp/>amrex::ubound(box);<sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>amrex_i_lo.z;<sp/>k<sp/>&lt;=<sp/>amrex_i_hi.z;<sp/>++k)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>amrex_i_lo.y;<sp/>j<sp/>&lt;=<sp/>amrex_i_hi.y;<sp/>++j)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_PRAGMA_SIMD<sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>amrex_i_lo.x;<sp/>i<sp/>&lt;=<sp/>amrex_i_hi.x;<sp/>++i)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="690"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>\</highlight></codeline>
<codeline lineno="691"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}}<sp/>\</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="AMReX__CudaLaunch_8H_1af3fb01469e99f3091ced2ad981439338" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_HOST_DEVICE_FOR_1D(...)<sp/>AMREX_CUDA_FOR_1D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="AMReX__CudaLaunch_8H_1ac8d2e4329c038e608b2903492f14c86e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_FOR_1D(...)<sp/><sp/><sp/><sp/><sp/><sp/>AMREX_CUDA_FOR_1D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="AMReX__CudaLaunch_8H_1a06b3625bc53bc8529f113b4cbdf2ed3c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_HOST_DEVICE_FOR_3D(...)<sp/>AMREX_CUDA_FOR_3D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="AMReX__CudaLaunch_8H_1a9efa305d3ba9959b3457321fa653bbd2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_FOR_3D(...)<sp/><sp/><sp/><sp/><sp/><sp/>AMREX_CUDA_FOR_3D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700" refid="AMReX__CudaLaunch_8H_1ae6344d99eefb22b1053479b184f00690" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_HOST_DEVICE_FOR_4D(...)<sp/>AMREX_CUDA_FOR_4D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701" refid="AMReX__CudaLaunch_8H_1a1ec50557e5fe9d029866f97f42f268b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_FOR_4D(...)<sp/><sp/><sp/><sp/><sp/><sp/>AMREX_CUDA_FOR_4D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="AMReX__CudaLaunch_8H_1a132099fa459823ae0e14349dbefcf1aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_PARALLEL_FOR_1D(...)<sp/><sp/><sp/><sp/><sp/><sp/>AMREX_CUDA_PARALLEL_FOR_1D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="AMReX__CudaLaunch_8H_1a57449a5a4af348bfef691abc41f1590e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_PARALLEL_FOR_3D(...)<sp/><sp/><sp/><sp/><sp/><sp/>AMREX_CUDA_PARALLEL_FOR_3D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="AMReX__CudaLaunch_8H_1ab7143140b8f8224ded655dd3569555e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_DEVICE_PARALLEL_FOR_4D(...)<sp/><sp/><sp/><sp/><sp/><sp/>AMREX_CUDA_PARALLEL_FOR_4D_IMPL(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="AMReX__CudaLaunch_8H_1ae2036212d83a24124cb193bf5986a1c2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_HOST_DEVICE(strategy,<sp/>...)<sp/>amrex::launch_host(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="AMReX__CudaLaunch_8H_1a646603fd1b68abfc3b87ed49cbda9d6d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_DEVICE(strategy,<sp/>...)<sp/>amrex::launch_host(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709" refid="AMReX__CudaLaunch_8H_1a6fa0b26c1551671a64ec4a324e725136" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_CUDA_LAUNCH_GLOBAL(strategy,<sp/>function,<sp/>...)<sp/>function(__VA_ARGS__);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>of<sp/>CUDA,<sp/>we<sp/>cannot<sp/>take<sp/>rvalue<sp/>lambdas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Variadic<sp/>lambda<sp/>function<sp/>wrappers<sp/>for<sp/>C++<sp/>CUDA<sp/>Kernel<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="721" refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3d3f711243a9a5a973dd44a2174e1529" kindref="member">AMREX_GPU_GLOBAL</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" kindref="member">launch_global</ref><sp/>(L<sp/>f0)<sp/>{<sp/>f0();<sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">L,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Lambdas&gt;</highlight></codeline>
<codeline lineno="724" refid="namespaceamrex_1ab00122e9945b91351e217899154404ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3d3f711243a9a5a973dd44a2174e1529" kindref="member">AMREX_GPU_GLOBAL</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" kindref="member">launch_global</ref><sp/>(L<sp/>f0,<sp/>Lambdas...<sp/>fs)<sp/>{<sp/>f0();<sp/><ref refid="namespaceamrex_1a8d531ed0aeef2766dfaf1086bba15da2" kindref="member">call_device</ref>(fs...);<sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="727" refid="namespaceamrex_1a8d531ed0aeef2766dfaf1086bba15da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8d531ed0aeef2766dfaf1086bba15da2" kindref="member">call_device</ref><sp/>(L<sp/>f0)<sp/>noexcept<sp/>{<sp/>f0();<sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">L,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Lambdas&gt;</highlight></codeline>
<codeline lineno="730" refid="namespaceamrex_1af41625305a9964fe293563e25874277e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8d531ed0aeef2766dfaf1086bba15da2" kindref="member">call_device</ref><sp/>(L<sp/>f0,<sp/>Lambdas...<sp/>fs)<sp/>noexcept<sp/>{<sp/>f0();<sp/><ref refid="namespaceamrex_1a8d531ed0aeef2766dfaf1086bba15da2" kindref="member">call_device</ref>(fs...);<sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CPU<sp/>variation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="735" refid="namespaceamrex_1a006c22eb1e141a0784faa415c00a49c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a006c22eb1e141a0784faa415c00a49c4" kindref="member">launch_host</ref><sp/>(L&amp;&amp;<sp/>f0)<sp/>noexcept<sp/>{<sp/>std::forward&lt;L&gt;(f0)();<sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">L,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Lambdas&gt;</highlight></codeline>
<codeline lineno="738" refid="namespaceamrex_1a3365c3faa5657c39e8d8aa3ac2b7592c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a006c22eb1e141a0784faa415c00a49c4" kindref="member">launch_host</ref><sp/>(L&amp;&amp;<sp/>f0,<sp/>Lambdas&amp;&amp;...<sp/>fs)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f0)();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a006c22eb1e141a0784faa415c00a49c4" kindref="member">launch_host</ref>(std::forward&lt;Lambdas&gt;(fs)...);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="classamrex_1_1LayoutData" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Cuda<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/>************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="structamrex_1_1Cuda_1_1ComponentBox" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Cuda_1_1ComponentBox" kindref="compound">ComponentBox</ref><sp/>{</highlight></codeline>
<codeline lineno="752" refid="structamrex_1_1Cuda_1_1ComponentBox_1ab697bb90be4dfffea7537e850d8d195e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/><ref refid="structamrex_1_1Cuda_1_1ComponentBox_1ab697bb90be4dfffea7537e850d8d195e" kindref="member">box</ref>;</highlight></codeline>
<codeline lineno="753" refid="structamrex_1_1Cuda_1_1ComponentBox_1acf10f623e3256fb1c03773c544a18087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Cuda_1_1ComponentBox_1acf10f623e3256fb1c03773c544a18087" kindref="member">ic</ref>;</highlight></codeline>
<codeline lineno="754" refid="structamrex_1_1Cuda_1_1ComponentBox_1ab798b2783071e7f111aa4a169e2a92ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Cuda_1_1ComponentBox_1ab798b2783071e7f111aa4a169e2a92ab" kindref="member">nc</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="structamrex_1_1Cuda_1_1GridSize" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Cuda_1_1GridSize" kindref="compound">GridSize</ref><sp/>{</highlight></codeline>
<codeline lineno="758" refid="structamrex_1_1Cuda_1_1GridSize_1a1eafc94db20f558c2dfdf22a355cf675" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Cuda_1_1GridSize_1a1eafc94db20f558c2dfdf22a355cf675" kindref="member">numBlocks</ref>;</highlight></codeline>
<codeline lineno="759" refid="structamrex_1_1Cuda_1_1GridSize_1a19e9d2a0a1650b7a5388d383b736bdbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Cuda_1_1GridSize_1a19e9d2a0a1650b7a5388d383b736bdbd" kindref="member">numThreads</ref>;</highlight></codeline>
<codeline lineno="760" refid="structamrex_1_1Cuda_1_1GridSize_1af40d27208ced351b08696bbaca3ec3e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Cuda_1_1GridSize_1af40d27208ced351b08696bbaca3ec3e7" kindref="member">globalBlockId</ref>;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Cuda_1a473fa828b8130db28e98e03079650256" kindref="member">getGridSize</ref><sp/>(<ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngrow,<sp/><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData&lt;GridSize&gt;</ref>&amp;<sp/>gs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ntotblocks);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="namespaceamrex_1_1Cuda_1a2d4304ee440481fe9953b82f76f2b8c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/><ref refid="namespaceamrex_1_1Cuda_1a2d4304ee440481fe9953b82f76f2b8c3" kindref="member">getThreadBox</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>offset)<sp/>noexcept</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>&amp;&amp;<sp/>defined(__CUDA_ARCH__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a6f147c0c62906bc0c8cc3f89378de9e2" kindref="member">length3d</ref>();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>offset<sp/>/<sp/>(len[0]*len[1]);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(offset<sp/>-<sp/>k*(len[0]*len[1]))<sp/>/<sp/>len[0];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(offset<sp/>-<sp/>k*(len[0]*len[1]))<sp/>-<sp/>j*len[0];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>iv{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(static_cast&lt;int&gt;(i),</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(j),</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(k))};</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv<sp/>+=<sp/>bx.smallEnd();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bx<sp/>&amp;<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>(iv,iv,bx.type()));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bx;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//<sp/>************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>&amp;&amp;<sp/>defined(__CUDACC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExecutionConfig<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecutionConfig<sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cuda::Device::grid_stride_threads_and_blocks(numBlocks,numThreads);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecutionConfig<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><ref refid="structamrex_1_1Cuda_1_1ComponentBox_1ab697bb90be4dfffea7537e850d8d195e" kindref="member">box</ref>)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>change<sp/>this,<sp/>we<sp/>must<sp/>make<sp/>sure<sp/>it<sp/>doesn&apos;t<sp/>break<sp/>say<sp/>getGridSize,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assumes<sp/>the<sp/>decomposition<sp/>is<sp/>1D.<sp/><sp/>FabArrayUtility<sp/>Reduce*<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cuda::Device::n_threads_and_blocks(<sp/>((box.<ref refid="classamrex_1_1Box_1a3d8fc04f3fa3fb6bb0721aea64cbb373" kindref="member">numPts</ref>()+<ref refid="AMReX__CudaLaunch_8H_1a50d3c1b5aefe758658ea98bb16b433c8" kindref="member">AMREX_CUDA_NCELLS_PER_THREAD</ref>-1)/<ref refid="AMReX__CudaLaunch_8H_1a50d3c1b5aefe758658ea98bb16b433c8" kindref="member">AMREX_CUDA_NCELLS_PER_THREAD</ref>),<sp/>numBlocks,<sp/>numThreads<sp/>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>b<sp/>=<sp/><ref refid="namespaceamrex_1a3d70dd5968fac861d1a6bdeca6a421dd" kindref="member">amrex::surroundingNodes</ref>(box);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>-=<sp/>box.<ref refid="classamrex_1_1Box_1a04e076a4688ca383aeaccfcb0bceef60" kindref="member">smallEnd</ref>();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.<ref refid="classamrex_1_1IntVect_1a12d3e367640c1ed999ae4b05a5611e83" kindref="member">coarsen</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(1,<ref refid="AMReX__CudaLaunch_8H_1a45a9c9b334efe017556083fcfff10dc9" kindref="member">AMREX_CUDA_Y_STRIDE</ref>,<ref refid="AMReX__CudaLaunch_8H_1a4b268a171ec376f8713532502b934b46" kindref="member">AMREX_CUDA_Z_STRIDE</ref>)));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cuda::Device::c_threads_and_blocks(b.loVect(),<sp/>b.hiVect(),<sp/>numBlocks,<sp/>numThreads);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecutionConfig<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comps)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b<sp/>=<sp/><ref refid="namespaceamrex_1a3d70dd5968fac861d1a6bdeca6a421dd" kindref="member">amrex::surroundingNodes</ref>(box);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cuda::Device::c_comps_threads_and_blocks(b.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>(),<sp/>b.<ref refid="classamrex_1_1Box_1a8d84792ed854e04c97770960290f6f5c" kindref="member">hiVect</ref>(),<sp/>comps,<sp/>numBlocks,<sp/>numThreads);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecutionConfig<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>N)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cuda::Device::n_threads_and_blocks(N,<sp/>numBlocks,<sp/>numThreads);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExecutionConfig<sp/>(dim3<sp/>nb,<sp/>dim3<sp/>nt,<sp/>std::size_t<sp/>sm=0)<sp/>noexcept</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>numBlocks(nb),<sp/>numThreads(nt),<sp/>sharedMem(sm)<sp/>{}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>numBlocks;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>numThreads;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>sharedMem<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a78559bd0504c5d262c864b4a1508c515" kindref="member">launch</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Cuda::ExecutionConfig(n);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" kindref="member">amrex::launch_global</ref>&lt;&lt;&lt;ec.numBlocks,<sp/>ec.numThreads,<sp/>ec.sharedMem,<sp/>Cuda::Device::cudaStream()&gt;&gt;&gt;(</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i<sp/>:<sp/><ref refid="namespaceamrex_1_1Cuda_1af2d03fabad9378084ccfc0a1779ca3eb" kindref="member">Cuda::Range</ref>(n))<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1aff2d29ad26ba217734430c3d36f42dd1" kindref="member">AMREX_GPU_ERROR_CHECK</ref>();</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref><sp/>(T<sp/>n,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Cuda::ExecutionConfig(n);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" kindref="member">amrex::launch_global</ref>&lt;&lt;&lt;ec.numBlocks,<sp/>ec.numThreads,<sp/>ec.sharedMem,<sp/>Cuda::Device::cudaStream()&gt;&gt;&gt;(</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1aff2d29ad26ba217734430c3d36f42dd1" kindref="member">AMREX_GPU_ERROR_CHECK</ref>();</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" kindref="member">ParallelFor</ref><sp/>(T<sp/>n,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref>(n,f);</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structamrex_1_1Cuda_1_1ComponentBox_1ab697bb90be4dfffea7537e850d8d195e" kindref="member">box</ref>,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a3d8fc04f3fa3fb6bb0721aea64cbb373" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1a346de71b0a8301172fc1cc6df227037a" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Cuda::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" kindref="member">amrex::launch_global</ref>&lt;&lt;&lt;ec.numBlocks,<sp/>ec.numThreads,<sp/>ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1aff2d29ad26ba217734430c3d36f42dd1" kindref="member">AMREX_GPU_ERROR_CHECK</ref>();</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref>(box,f);</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a3d8fc04f3fa3fb6bb0721aea64cbb373" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1a346de71b0a8301172fc1cc6df227037a" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Cuda::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8fd1cb48ab79898f1f480c55c433113a" kindref="member">amrex::launch_global</ref>&lt;&lt;&lt;ec.numBlocks,<sp/>ec.numThreads,<sp/>ec.sharedMem,<sp/>amrex::Cuda::Device::cudaStream()&gt;&gt;&gt;(</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuError_8H_1aff2d29ad26ba217734430c3d36f42dd1" kindref="member">AMREX_GPU_ERROR_CHECK</ref>();</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref>(box,ncomp,f);</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="921" refid="namespaceamrex_1a78559bd0504c5d262c864b4a1508c515" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a78559bd0504c5d262c864b4a1508c515" kindref="member">launch</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(n);</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="928" refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(i);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="937" refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" kindref="member">ParallelFor</ref><sp/>(T<sp/>n,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(i);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="947" refid="namespaceamrex_1a3e735aad9b8537c4cb3c1664b1049ac6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(i,j,k);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L&gt;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="960" refid="namespaceamrex_1aa0372f4e7091b65738a55ee4729cdb49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(i,j,k);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="974" refid="namespaceamrex_1a812dc62544399a58a5e8c4e96ce59a39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1affcf348713e6da3804d1865d13635294" kindref="member">For</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(i,j,k,n);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>L,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;T&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="989" refid="namespaceamrex_1a486e0ef55520d238fe136663f9708514" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a6058fef7b9f2361b042c56dc6caae15d" kindref="member">ParallelFor</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>T<sp/>ncomp,<sp/>L&amp;&amp;<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a38527c39e1b07777c6b7390f77db95e3" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1aee1c8ddea8a977a982dbe39c4a9884a9" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;L&gt;(f)(i,j,k,n);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaLaunch.H"/>
  </compounddef>
</doxygen>
