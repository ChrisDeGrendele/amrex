<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1LSCore" kind="class" language="C++" prot="public">
    <compoundname>amrex::LSCore</compoundname>
    <basecompoundref refid="classamrex_1_1LSCoreBase" prot="public" virt="non-virtual">amrex::LSCoreBase</basecompoundref>
    <includes refid="AMReX__EB__LSCore_8H" local="no">AMReX_EB_LSCore.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1LSCore_1ab4720c2910c1521e3de9962c31eee5dd" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">EB2::GeometryShop</ref>&lt; F &gt;</type>
        <definition>EB2::GeometryShop&lt;F&gt; amrex::LSCore&lt; F &gt;::m_gshop</definition>
        <argsstring></argsstring>
        <name>m_gshop</name>
        <briefdescription>
<para>Used when building finer levels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="80" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1LSCore_1aca5d00daf9c5c2258765ab50f8c12da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::LSCore&lt; F &gt;::LSCore</definition>
        <argsstring>(EB2::GeometryShop&lt; F &gt; gshop)</argsstring>
        <name>LSCore</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">EB2::GeometryShop</ref>&lt; F &gt;</type>
          <declname>gshop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor - reads amr in parameters from inputs file<itemizedlist>
<listitem><para>sizes multilevel arrays and data structures </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LSCore_1a7db20b5b0b1b653997ed74c2d5fc806e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::LSCore&lt; F &gt;::LSCore</definition>
        <argsstring>(EB2::GeometryShop&lt; F &gt; a_gshop, const RealBox *rb, int max_level_in, const Vector&lt; int &gt; &amp;n_cell_in, int coord=-1)</argsstring>
        <name>LSCore</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">EB2::GeometryShop</ref>&lt; F &gt;</type>
          <declname>a_gshop</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1RealBox" kindref="compound">RealBox</ref> *</type>
          <declname>rb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_level_in</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt; &amp;</type>
          <declname>n_cell_in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LSCore_1a7b0bede3b4532ae3338420be247f9523" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>LSCore::~LSCore</definition>
        <argsstring>()</argsstring>
        <name>~LSCore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreI.H" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LSCore_1adbe3f83c44927912f413aff8c03c3671" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LSCore::ClearLevel</definition>
        <argsstring>(int lev) override</argsstring>
        <name>ClearLevel</name>
        <reimplements refid="classamrex_1_1LSCoreBase_1aabe20a1818e92d5a4e976a07be8fec4e">ClearLevel</reimplements>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <briefdescription>
<para>Delete level data. Overrides the pure virtual function in <ref refid="classamrex_1_1AmrCore" kindref="compound">AmrCore</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Delete level data overrides the pure virtual function in <ref refid="classamrex_1_1AmrCore" kindref="compound">AmrCore</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreI.H" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LSCore_1aef08d0e705a4320bd5b9929bc02b1690" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LSCore::MakeNewLevelFromScratch</definition>
        <argsstring>(int lev, Real time, const BoxArray &amp;ba, const DistributionMapping &amp;dm) override</argsstring>
        <name>MakeNewLevelFromScratch</name>
        <reimplements refid="classamrex_1_1LSCoreBase_1aa7bc5e980ea04512e48b2c04fa1f3105">MakeNewLevelFromScratch</reimplements>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a new level from scratch using provided <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>. Only used during initialization. Overrides the pure virtual function in <ref refid="classamrex_1_1AmrCore" kindref="compound">AmrCore</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="59" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreI.H" bodystart="65" bodyend="158"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1LSCore_1a917795217583cdd187bdf68987e5b6c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">EB2::Level</ref> *</type>
        <definition>const EB2::Level * LSCore::BuildEBLevel</definition>
        <argsstring>(const EB2::GeometryShop&lt; F &gt; &amp;gshop, int lev, const Vector&lt; Geometry &gt; &amp;geom)</argsstring>
        <name>BuildEBLevel</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">EB2::GeometryShop</ref>&lt; F &gt; &amp;</type>
          <declname>gshop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>Build a new EB level and return a pointer to this level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Important! this is needed to allow EBFactory to be built on coarser levels (which is needed by FillCoarsePatch) </para>        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="62" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreI.H" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LSCore_1a796141f193c78640cf04aac2db83c3b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">EB2::Level</ref> *</type>
        <definition>const EB2::Level * LSCore::BuildEBLevel</definition>
        <argsstring>(const EB2::GeometryShop&lt; F &gt; gshop, int lev, const Vector&lt; Geometry &gt; &amp;geom, int max_crse_level, int required_crse_lev)</argsstring>
        <name>BuildEBLevel</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1GeometryShop" kindref="compound">EB2::GeometryShop</ref>&lt; F &gt;</type>
          <declname>gshop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_crse_level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>required_crse_lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="65" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreI.H" bodystart="36" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3040">
        <label>amrex::LSCoreBase</label>
        <link refid="classamrex_1_1LSCoreBase"/>
        <childnode refid="3041" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3041">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="3042" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3042">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
      </node>
      <node id="3039">
        <label>amrex::LSCore&lt; F &gt;</label>
        <link refid="classamrex_1_1LSCore"/>
        <childnode refid="3040" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3052">
        <label>std::vector&lt; amrex::BoxArray, std::allocator&lt; amrex::BoxArray &gt; &gt;</label>
      </node>
      <node id="3063">
        <label>amrex::Vector&lt; amrex::iMultiFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3064" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3070">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::LSFactory &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::LSFactory &gt; &gt; &gt;</label>
      </node>
      <node id="3057">
        <label>Real</label>
      </node>
      <node id="3056">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="3044">
        <label>amrex::LSCoreBase</label>
        <link refid="classamrex_1_1LSCoreBase"/>
        <childnode refid="3045" relation="public-inheritance">
        </childnode>
        <childnode refid="3058" relation="usage">
          <edgelabel>phierr</edgelabel>
        </childnode>
        <childnode refid="3060" relation="usage">
          <edgelabel>bcs</edgelabel>
        </childnode>
        <childnode refid="3049" relation="usage">
          <edgelabel>rebuild_eb</edgelabel>
        </childnode>
        <childnode refid="3062" relation="usage">
          <edgelabel>plot_file</edgelabel>
          <edgelabel>chk_file</edgelabel>
          <edgelabel>restart_chkfile</edgelabel>
        </childnode>
        <childnode refid="3063" relation="usage">
          <edgelabel>level_set_valid</edgelabel>
        </childnode>
        <childnode refid="3065" relation="usage">
          <edgelabel>level_set</edgelabel>
        </childnode>
        <childnode refid="3067" relation="usage">
          <edgelabel>eb_levels</edgelabel>
        </childnode>
        <childnode refid="3069" relation="usage">
          <edgelabel>ls_factory</edgelabel>
        </childnode>
      </node>
      <node id="3045">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="3046" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3069">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::LSFactory &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3047">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3048" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3049">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3062">
        <label>string</label>
      </node>
      <node id="3067">
        <label>amrex::Vector&lt; const EB2::Level * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3061">
        <label>std::vector&lt; amrex::BCRec, std::allocator&lt; amrex::BCRec &gt; &gt;</label>
      </node>
      <node id="3059">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
      </node>
      <node id="3051">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3052" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3065">
        <label>amrex::Vector&lt; amrex::MultiFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3066" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3068">
        <label>std::vector&lt; const EB2::Level *, std::allocator&lt; const EB2::Level * &gt; &gt;</label>
      </node>
      <node id="3048">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="3060">
        <label>amrex::Vector&lt; amrex::BCRec &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3061" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3053">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3050">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3064">
        <label>std::vector&lt; amrex::iMultiFab, std::allocator&lt; amrex::iMultiFab &gt; &gt;</label>
      </node>
      <node id="3054">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="3058">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3059" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3066">
        <label>std::vector&lt; amrex::MultiFab, std::allocator&lt; amrex::MultiFab &gt; &gt;</label>
      </node>
      <node id="3055">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3046">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="3047" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="3049" relation="usage">
          <edgelabel>n_error_buf</edgelabel>
        </childnode>
        <childnode refid="3051" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="3053" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="3055" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="3057" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="3043">
        <label>amrex::LSCore&lt; F &gt;</label>
        <link refid="classamrex_1_1LSCore"/>
        <childnode refid="3044" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H" bodystart="36" bodyend="89"/>
    <listofallmembers>
      <member refid="classamrex_1_1AmrCore_1a30f4c446e360d02875146f91f942012c" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>AmrCore</name></member>
      <member refid="classamrex_1_1AmrCore_1a74e9fe38553721adb969a72f111925b8" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>AmrCore</name></member>
      <member refid="classamrex_1_1AmrCore_1ac0a84aa89a7db1e9543096d9c9f50a65" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>AmrCore</name></member>
      <member refid="classamrex_1_1AmrMesh_1a163e8a28e1f841b2c174d6d34664e2d3" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>AmrMesh</name></member>
      <member refid="classamrex_1_1AmrMesh_1a13509f5a978e31215ea7e48c5c3803f8" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>AmrMesh</name></member>
      <member refid="classamrex_1_1AmrMesh_1aa3d1b57d3957feca7d0f897ec2e62824" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>AmrMesh</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ad8a07c96169fd40c96a6b076b2743de0" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>AverageDown</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a611f8114b59e74745e54778d504d8e86" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>AverageDownTo</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ae564241bee9d2cc16d8f812b7a78096c" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>bcs</name></member>
      <member refid="classamrex_1_1AmrMesh_1acdbddd33ae38b3d038fcaa14ce05e039" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>blocking_factor</name></member>
      <member refid="classamrex_1_1AmrMesh_1a2d3e04e87d90cf8d088aa27e6ee9098b" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>blockingFactor</name></member>
      <member refid="classamrex_1_1AmrMesh_1a8d6a6c8a9b9ef9c9d8bce0699f3be93e" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1AmrMesh_1a54cca3df5cf5c60c9405e5d1cd4c4f8f" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1LSCore_1a917795217583cdd187bdf68987e5b6c9" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>BuildEBLevel</name></member>
      <member refid="classamrex_1_1LSCore_1a796141f193c78640cf04aac2db83c3b8" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>BuildEBLevel</name></member>
      <member refid="classamrex_1_1AmrMesh_1a8d2f6e5a9f3f46c76d44215f83455475" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>check_input</name></member>
      <member refid="classamrex_1_1AmrMesh_1a9274bfc294d53126644ed437ac83fe56" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>checkInput</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aff9d9cdf797536dec02c65a05e76ad7e" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>chk_file</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a9ff86ee64b8ce1f3e7e783bfb3ef26b3" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>chk_int</name></member>
      <member refid="classamrex_1_1AmrMesh_1a29bca4cd9fb61c896130db020528e56f" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>ChopGrids</name></member>
      <member refid="classamrex_1_1AmrMesh_1a24e965c9a584a412abceac81a5b65f47" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>ClearBoxArray</name></member>
      <member refid="classamrex_1_1AmrMesh_1aa8db6878bddff314cc4df64fe7b12825" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>ClearDistributionMap</name></member>
      <member refid="classamrex_1_1LSCore_1adbe3f83c44927912f413aff8c03c3671" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>ClearLevel</name></member>
      <member refid="classamrex_1_1AmrMesh_1a3e7aff8507b10562f5054396e711aa2f" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>CountCells</name></member>
      <member refid="classamrex_1_1AmrMesh_1a53988099dc97d12785e8fd8a7652d0d2" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1AmrMesh_1a0e239204ca8c8cf3d581fda8b3366252" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1AmrMesh_1ab7f8457c3e5a0dc0295247f005e5a107" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>dmap</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ac9b4a932760260d7ac531bda2e2cd160" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>eb_levels</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a49940ec34f953688df11638398e69978" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>eb_pad</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ab2d9fc210fcb7f0d3e948aa10c05bc66" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>EBSearchBox</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aa67c8e06f263b996a8f83a9e9e1ff47b" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>EBSearchBox</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aff7378920896f28c99d297fcd5e27bf2" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>ErrorEst</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a189a9b3c83ead56aec690020702448bb" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>FillCoarsePatch</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a33702659de5fc30dea82f82b61a1d312" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>FillCoarsePatch</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ac943522bfc385fdc318e5751c8432d8b" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>FillLevelSet</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a09d1f926368093d099432498e353f2b5" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>FillLevelSetTags</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a73903ccb16187bf6583ef055c203f800" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>FillPatch</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a1613bf8825eff6a563b8e64290a5d54b" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>FillVolfracTags</name></member>
      <member refid="classamrex_1_1AmrCore_1af63658d7f3eaf4c233404dc6b10fae13" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1AmrMesh_1a7a466d1cfea1c18c35128fb5a7c5793f" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>finest_level</name></member>
      <member refid="classamrex_1_1AmrMesh_1ac902a82d3d86fe6272a14455533794c7" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>finestLevel</name></member>
      <member refid="classamrex_1_1AmrMesh_1a239ef06043779ea301395ae14876d6cb" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>geom</name></member>
      <member refid="classamrex_1_1AmrMesh_1aaeb239304f0f2f1fe5e3fa5d3abc1a9b" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Geom</name></member>
      <member refid="classamrex_1_1AmrMesh_1a295b5e008a877007c0cc9c9b0fa4fc0b" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Geom</name></member>
      <member refid="classamrex_1_1AmrMesh_1aaffe8a1a71800d6bdf2867b28a261348" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Geom</name></member>
      <member refid="classamrex_1_1AmrMesh_1ab522170762d0d76e7c79aefe0d14e37a" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Geom</name></member>
      <member refid="classamrex_1_1AmrMesh_1a9650ac46b08412a6d487deee85930294" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>GetAreaNotToTag</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a15165cf3a2f9e939f365dc4631fe84a3" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>getLevelSet</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a65a1afcaaaa3be85e75d03faf91808dc" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>getLevelSet</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a3ad5663133989fdd174cb9faa86b73de" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>getValid</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a52d93140b73361a60846a4827cea4d43" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>GotoNextLine</name></member>
      <member refid="classamrex_1_1AmrMesh_1ae75a2551575e5fd697ab4dc8754541ad" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>grid_eff</name></member>
      <member refid="classamrex_1_1AmrMesh_1a2c08ef5c6a3bd4da664288e1f7fa1759" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>gridEff</name></member>
      <member refid="classamrex_1_1AmrMesh_1ae53347adc8a239367f153d3705a8ed25" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>grids</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ad56df754af5ff9aa2c9a7445ec35a7f9" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>Init</name></member>
      <member refid="classamrex_1_1LSCoreBase_1abdc6c0f9bcac3c53a93a474d55643352" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>InitData</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aa76187fd7b5f9535bfd5049112e809d8" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>InitData</name></member>
      <member refid="classamrex_1_1AmrCore_1a309a4bad63faba98cfc57641e274413d" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>InitFromScratch</name></member>
      <member refid="classamrex_1_1AmrCore_1a4595fb6af7383f209eedaefc606020e7" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1AmrMesh_1ad47540768ade1598333374d48d3b9593" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>iterate_on_new_grids</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a120eaa256d41fb7834e7cd1e009dc151" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>level_set</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ae753489d344207e275cb87c774c9a167" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>level_set_valid</name></member>
      <member refid="classamrex_1_1AmrMesh_1a224e25326b0df70be8488f5b7e6a349f" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>LevelDefined</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a46e21b1a3e14075db9b6959ecdb9f72b" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>LoadTagLevels</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a1f4cff404c7fed0de6bdf3bceac89ef0" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>ls_factory</name></member>
      <member refid="classamrex_1_1LSCore_1aca5d00daf9c5c2258765ab50f8c12da4" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>LSCore</name></member>
      <member refid="classamrex_1_1LSCore_1a7db20b5b0b1b653997ed74c2d5fc806e" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>LSCore</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a0c1af368aa2e2d6c9796c76935a26abf" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>LSCoreBase</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a60418dd08d5d8a8229db489e3ecbf663" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>LSCoreBase</name></member>
      <member refid="classamrex_1_1LSCore_1ab4720c2910c1521e3de9962c31eee5dd" prot="private" virt="non-virtual"><scope>amrex::LSCore</scope><name>m_gshop</name></member>
      <member refid="classamrex_1_1AmrMesh_1a962d1689c8b7444f4b2c8a077d3f4766" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>MakeBaseGrids</name></member>
      <member refid="classamrex_1_1AmrMesh_1acb422930e8e69fc386727f45607e114b" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>MakeNewGrids</name></member>
      <member refid="classamrex_1_1AmrMesh_1a0bf56e73af1dfffcba7bfcadad887751" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>MakeNewGrids</name></member>
      <member refid="classamrex_1_1LSCoreBase_1afedefc3eee09ff209239a96a5d8522f3" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>MakeNewLevelFromCoarse</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a574e843e2855d44d8ee72fb55d8965ba" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>MakeNewLevelFromCoarse</name></member>
      <member refid="classamrex_1_1LSCore_1aef08d0e705a4320bd5b9929bc02b1690" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>MakeNewLevelFromScratch</name></member>
      <member refid="classamrex_1_1AmrMesh_1a5830766b42f260b125443b90f40b0a96" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>ManualTagsPlacement</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a1d8e97ef9f32164ac040646e71ceea1c" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>max_eb_pad</name></member>
      <member refid="classamrex_1_1AmrMesh_1a716b7e6169d4d0a537970445941e7391" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>max_grid_size</name></member>
      <member refid="classamrex_1_1AmrMesh_1ac488c17bc512ae46995817401dc7a8e7" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>max_level</name></member>
      <member refid="classamrex_1_1AmrMesh_1ab955b0c5a36cd0989a248b265124e5fc" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>maxGridSize</name></member>
      <member refid="classamrex_1_1AmrMesh_1aea00f147dbeb1bde2760a0fa24286bd9" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>maxLevel</name></member>
      <member refid="classamrex_1_1AmrMesh_1a9585220bf789c9401b6c056ff3b143b1" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>MaxRefRatio</name></member>
      <member refid="classamrex_1_1AmrMesh_1ad8752d2dfe5714cdecef8fa9eddb1c7e" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>n_error_buf</name></member>
      <member refid="classamrex_1_1AmrMesh_1afe23a9a66345fa657da022fc5a3cb349" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>n_proper</name></member>
      <member refid="classamrex_1_1AmrMesh_1a9341984f2f6514c334c1d38ba791e2c1" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>nErrorBuf</name></member>
      <member refid="classamrex_1_1AmrMesh_1a494fab0322e18b55d1b957018f2a4037" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>nProper</name></member>
      <member refid="classamrex_1_1AmrCore_1acf424d1fa598d256d7285e7fc6f20a73" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>operator=</name></member>
      <member refid="classamrex_1_1AmrMesh_1a51e0432968299f0c83f90d9b79376a6c" prot="public" virt="non-virtual" ambiguityscope="amrex::AmrMesh::"><scope>amrex::LSCore</scope><name>operator=</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a51160f59f8c2e5aa56f7b24632ac3f1a" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>phierr</name></member>
      <member refid="classamrex_1_1LSCoreBase_1afffa96e3c5577c0fef27219fd5cfd813" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>phierr_set</name></member>
      <member refid="classamrex_1_1LSCoreBase_1abe97849a2a60e1d3d785044180f393b9" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>plot_file</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a732e8fce0435ef4ea35fb6f7f265f8a0" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>plot_int</name></member>
      <member refid="classamrex_1_1LSCoreBase_1af777c924269670878cf0ec226b69e768" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>PlotFileMF</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aeedfe5ae1a68e0648089c69b8c60a185" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>PlotFileName</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a4cf5ec26160d97c61722a2c726ef2474" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>PlotFileVarNames</name></member>
      <member refid="classamrex_1_1AmrCore_1ab4632b88f2c4ee953cf62f74db4a903d" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>printGridSummary</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a155296a717e8a459f35d4f5744b8675e" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>ReadCheckpointFile</name></member>
      <member refid="classamrex_1_1LSCoreBase_1ad30eaa3ec2dd8ad3de93c4bfbea572dc" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>ReadParameters</name></member>
      <member refid="classamrex_1_1LSCoreBase_1af7fd409f38eaf8ed96c27825222626f5" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>rebuild_eb</name></member>
      <member refid="classamrex_1_1AmrMesh_1a7e3c7fc2f5598fdd4132536724933f2a" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>ref_ratio</name></member>
      <member refid="classamrex_1_1AmrMesh_1a95059679c4b3343198edadf7d9d860e5" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>refine_grid_layout</name></member>
      <member refid="classamrex_1_1AmrMesh_1a2e4c36a7be2ae0b6bfa9285a9b7c6111" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>refRatio</name></member>
      <member refid="classamrex_1_1AmrMesh_1a2158bdfbb3869bd064fb1c0804df364e" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>refRatio</name></member>
      <member refid="classamrex_1_1AmrCore_1ae80fa713b669de0f235d3ef0792e7200" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>regrid</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aaa70d8f11811c1a64cf57e147344a914" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>RemakeLevel</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aa206bdb1903bb394742e18267dcbfc11" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>restart_chkfile</name></member>
      <member refid="classamrex_1_1AmrMesh_1aa743b181a5d29f05adce20c9bd5c3173" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetBlockingFactor</name></member>
      <member refid="classamrex_1_1AmrMesh_1ae47a62015f3ddf3a52a271323f2a3828" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetBlockingFactor</name></member>
      <member refid="classamrex_1_1AmrMesh_1ad0c4a96bcf21f498b214fecc2fdfef3d" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetBlockingFactor</name></member>
      <member refid="classamrex_1_1AmrMesh_1a146cb4c0e5a204d58b3f516153a593ce" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetBlockingFactor</name></member>
      <member refid="classamrex_1_1AmrMesh_1a6253ef6827795b0f670e1a8efaa6709a" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetBoxArray</name></member>
      <member refid="classamrex_1_1AmrMesh_1a84861fe9f00d18e0bc7f4091e8f08a34" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetDistributionMap</name></member>
      <member refid="classamrex_1_1AmrMesh_1a7bedfae41bcead7ccfa7693f43763533" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetFinestLevel</name></member>
      <member refid="classamrex_1_1AmrMesh_1aa3a9e81cccf0f19be22844cdc7ebe7d1" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetGridEff</name></member>
      <member refid="classamrex_1_1AmrMesh_1ae30c9c8d31c0671c35e181b8d2057444" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetIterateToFalse</name></member>
      <member refid="classamrex_1_1AmrMesh_1a830c3115a58fada88b7cfaf5bba9996c" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetMaxGridSize</name></member>
      <member refid="classamrex_1_1AmrMesh_1a3632af824dc67123e7b7b349dd77c227" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetMaxGridSize</name></member>
      <member refid="classamrex_1_1AmrMesh_1a5da3d393a4a7ea75579945ac53681150" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetMaxGridSize</name></member>
      <member refid="classamrex_1_1AmrMesh_1ad084f5309ca7d7c78e49b41b1da7e162" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetMaxGridSize</name></member>
      <member refid="classamrex_1_1AmrMesh_1a346a473f2c40d271ecb69c0e99859b05" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetNProper</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a6fed6ab0db7c3ca0f8f1a3d077b4364a" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetTagLevels</name></member>
      <member refid="classamrex_1_1AmrMesh_1a0560bc5909d40c4128ad6ff179ed7c5e" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>SetUseNewChop</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a36c38fc9573fe9bd45675e3a0f9c6649" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>UpdateGrids</name></member>
      <member refid="classamrex_1_1AmrMesh_1a3162b5c3697f4ce32d585ca434ac40a5" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>use_fixed_coarse_grids</name></member>
      <member refid="classamrex_1_1AmrMesh_1a15a5406d39363635d73cc1d986546fe7" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>use_fixed_upto_level</name></member>
      <member refid="classamrex_1_1AmrMesh_1abaf8432668e3b350306a62e8662f4f96" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>use_new_chop</name></member>
      <member refid="classamrex_1_1LSCoreBase_1af4ed8d84ded37119725a657db8b99d85" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>use_phierr</name></member>
      <member refid="classamrex_1_1AmrMesh_1ae2cad7cb8252ec6d3512afc904a9e7e9" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>useFixedCoarseGrids</name></member>
      <member refid="classamrex_1_1AmrMesh_1a6da8eed8962368ecd9b7b62fb38c283a" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>useFixedUpToLevel</name></member>
      <member refid="classamrex_1_1AmrCore_1a6d0ad082c14a735202e4e6fa2e65b5d4" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>Verbose</name></member>
      <member refid="classamrex_1_1AmrCore_1a7e2ab7cbc55436aa985751b80246668f" prot="protected" virt="non-virtual"><scope>amrex::LSCore</scope><name>verbose</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a605ae269c81717a873140d564c0a4c30" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>WriteCheckpointFile</name></member>
      <member refid="classamrex_1_1LSCoreBase_1a54d6bad6416acd9234feba1d0ba80f5d" prot="public" virt="non-virtual"><scope>amrex::LSCore</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1AmrCore_1aa826ec39007a18c0002a14d9a53863af" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>~AmrCore</name></member>
      <member refid="classamrex_1_1AmrMesh_1a10865e07f3aae297cdea041881e7b9ab" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>~AmrMesh</name></member>
      <member refid="classamrex_1_1LSCore_1a7b0bede3b4532ae3338420be247f9523" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>~LSCore</name></member>
      <member refid="classamrex_1_1LSCoreBase_1aba665f12e440d33638b089be84666a06" prot="public" virt="virtual"><scope>amrex::LSCore</scope><name>~LSCoreBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
