<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__FabAllocator_8cpp" kind="file" language="C++">
    <compoundname>AMReX_FabAllocator.cpp</compoundname>
    <includes refid="AMReX__FabAllocator_8H" local="no">AMReX_FabAllocator.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <incdepgraph>
      <node id="16999">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="16990" relation="include">
        </childnode>
        <childnode refid="16997" relation="include">
        </childnode>
        <childnode refid="17000" relation="include">
        </childnode>
        <childnode refid="16983" relation="include">
        </childnode>
      </node>
      <node id="16998">
        <label>iomanip</label>
      </node>
      <node id="16987">
        <label>functional</label>
      </node>
      <node id="17019">
        <label>limits</label>
      </node>
      <node id="17008">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="16988" relation="include">
        </childnode>
        <childnode refid="17009" relation="include">
        </childnode>
      </node>
      <node id="17014">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="17015" relation="include">
        </childnode>
        <childnode refid="17012" relation="include">
        </childnode>
        <childnode refid="17016" relation="include">
        </childnode>
        <childnode refid="16983" relation="include">
        </childnode>
        <childnode refid="17017" relation="include">
        </childnode>
        <childnode refid="17021" relation="include">
        </childnode>
        <childnode refid="17022" relation="include">
        </childnode>
        <childnode refid="17013" relation="include">
        </childnode>
        <childnode refid="17000" relation="include">
        </childnode>
        <childnode refid="17023" relation="include">
        </childnode>
      </node>
      <node id="17017">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="17015" relation="include">
        </childnode>
        <childnode refid="16992" relation="include">
        </childnode>
        <childnode refid="17018" relation="include">
        </childnode>
        <childnode refid="17019" relation="include">
        </childnode>
        <childnode refid="17020" relation="include">
        </childnode>
        <childnode refid="17001" relation="include">
        </childnode>
        <childnode refid="16983" relation="include">
        </childnode>
        <childnode refid="17013" relation="include">
        </childnode>
        <childnode refid="17011" relation="include">
        </childnode>
        <childnode refid="17000" relation="include">
        </childnode>
        <childnode refid="16980" relation="include">
        </childnode>
        <childnode refid="17010" relation="include">
        </childnode>
        <childnode refid="16982" relation="include">
        </childnode>
      </node>
      <node id="16981">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="16982" relation="include">
        </childnode>
        <childnode refid="16983" relation="include">
        </childnode>
        <childnode refid="16984" relation="include">
        </childnode>
        <childnode refid="16986" relation="include">
        </childnode>
        <childnode refid="16987" relation="include">
        </childnode>
        <childnode refid="16988" relation="include">
        </childnode>
        <childnode refid="16989" relation="include">
        </childnode>
        <childnode refid="16977" relation="include">
        </childnode>
        <childnode refid="16990" relation="include">
        </childnode>
      </node>
      <node id="17000">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="17001" relation="include">
        </childnode>
        <childnode refid="16977" relation="include">
        </childnode>
        <childnode refid="16990" relation="include">
        </childnode>
        <childnode refid="16980" relation="include">
        </childnode>
      </node>
      <node id="16995">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="16996" relation="include">
        </childnode>
        <childnode refid="16997" relation="include">
        </childnode>
        <childnode refid="16998" relation="include">
        </childnode>
        <childnode refid="16981" relation="include">
        </childnode>
        <childnode refid="16999" relation="include">
        </childnode>
        <childnode refid="17002" relation="include">
        </childnode>
      </node>
      <node id="17018">
        <label>cmath</label>
      </node>
      <node id="16985">
        <label>stdexcept</label>
      </node>
      <node id="17026">
        <label>numeric</label>
      </node>
      <node id="16988">
        <label>string</label>
      </node>
      <node id="16997">
        <label>fstream</label>
      </node>
      <node id="17016">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="17009" relation="include">
        </childnode>
      </node>
      <node id="17011">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="17012" relation="include">
        </childnode>
        <childnode refid="16990" relation="include">
        </childnode>
        <childnode refid="17005" relation="include">
        </childnode>
        <childnode refid="16988" relation="include">
        </childnode>
        <childnode refid="16986" relation="include">
        </childnode>
        <childnode refid="16996" relation="include">
        </childnode>
        <childnode refid="16989" relation="include">
        </childnode>
        <childnode refid="16981" relation="include">
        </childnode>
        <childnode refid="16982" relation="include">
        </childnode>
        <childnode refid="16980" relation="include">
        </childnode>
        <childnode refid="17013" relation="include">
        </childnode>
        <childnode refid="17009" relation="include">
        </childnode>
      </node>
      <node id="17013">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="17010">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="17025">
        <label>typeinfo</label>
      </node>
      <node id="16989">
        <label>cstdio</label>
      </node>
      <node id="16993">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="16994" relation="include">
        </childnode>
      </node>
      <node id="17024">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
      </node>
      <node id="17003">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="17004" relation="include">
        </childnode>
        <childnode refid="16988" relation="include">
        </childnode>
        <childnode refid="17005" relation="include">
        </childnode>
        <childnode refid="16996" relation="include">
        </childnode>
        <childnode refid="16989" relation="include">
        </childnode>
        <childnode refid="16992" relation="include">
        </childnode>
        <childnode refid="17006" relation="include">
        </childnode>
        <childnode refid="17007" relation="include">
        </childnode>
      </node>
      <node id="17004">
        <label>stack</label>
      </node>
      <node id="16977">
        <label>vector</label>
      </node>
      <node id="16980">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="16981" relation="include">
        </childnode>
      </node>
      <node id="16982">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="17005">
        <label>utility</label>
      </node>
      <node id="17012">
        <label>array</label>
      </node>
      <node id="16996">
        <label>sstream</label>
      </node>
      <node id="16984">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="16985" relation="include">
        </childnode>
      </node>
      <node id="16976">
        <label>AMReX_FabAllocator.H</label>
        <link refid="AMReX__FabAllocator_8H"/>
        <childnode refid="16977" relation="include">
        </childnode>
        <childnode refid="16978" relation="include">
        </childnode>
        <childnode refid="16979" relation="include">
        </childnode>
        <childnode refid="16993" relation="include">
        </childnode>
      </node>
      <node id="17002">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="16983" relation="include">
        </childnode>
        <childnode refid="16999" relation="include">
        </childnode>
        <childnode refid="17003" relation="include">
        </childnode>
        <childnode refid="17008" relation="include">
        </childnode>
        <childnode refid="16980" relation="include">
        </childnode>
        <childnode refid="17009" relation="include">
        </childnode>
        <childnode refid="17011" relation="include">
        </childnode>
        <childnode refid="17000" relation="include">
        </childnode>
        <childnode refid="17014" relation="include">
        </childnode>
        <childnode refid="16986" relation="include">
        </childnode>
        <childnode refid="16977" relation="include">
        </childnode>
        <childnode refid="16988" relation="include">
        </childnode>
        <childnode refid="17025" relation="include">
        </childnode>
        <childnode refid="17001" relation="include">
        </childnode>
        <childnode refid="16987" relation="include">
        </childnode>
        <childnode refid="17019" relation="include">
        </childnode>
        <childnode refid="17026" relation="include">
        </childnode>
      </node>
      <node id="16979">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="16980" relation="include">
        </childnode>
        <childnode refid="16991" relation="include">
        </childnode>
        <childnode refid="16992" relation="include">
        </childnode>
      </node>
      <node id="17022">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="17015" relation="include">
        </childnode>
        <childnode refid="16980" relation="include">
        </childnode>
        <childnode refid="17013" relation="include">
        </childnode>
        <childnode refid="16982" relation="include">
        </childnode>
      </node>
      <node id="17023">
        <label>AMReX_CudaMemory.H</label>
        <link refid="AMReX__CudaMemory_8H"/>
        <childnode refid="16982" relation="include">
        </childnode>
        <childnode refid="17024" relation="include">
        </childnode>
        <childnode refid="16993" relation="include">
        </childnode>
        <childnode refid="16979" relation="include">
        </childnode>
        <childnode refid="16992" relation="include">
        </childnode>
      </node>
      <node id="17015">
        <label>iosfwd</label>
      </node>
      <node id="16992">
        <label>cstdlib</label>
      </node>
      <node id="17007">
        <label>cfenv</label>
      </node>
      <node id="16986">
        <label>iostream</label>
      </node>
      <node id="17021">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="17015" relation="include">
        </childnode>
        <childnode refid="16983" relation="include">
        </childnode>
        <childnode refid="17017" relation="include">
        </childnode>
        <childnode refid="17013" relation="include">
        </childnode>
      </node>
      <node id="16991">
        <label>cstddef</label>
      </node>
      <node id="17020">
        <label>climits</label>
      </node>
      <node id="16978">
        <label>mutex</label>
      </node>
      <node id="17006">
        <label>csignal</label>
      </node>
      <node id="16975">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabAllocator.cpp</label>
        <link refid="AMReX_FabAllocator.cpp"/>
        <childnode refid="16976" relation="include">
        </childnode>
        <childnode refid="16995" relation="include">
        </childnode>
      </node>
      <node id="16994">
        <label>type_traits</label>
      </node>
      <node id="16983">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="17001">
        <label>algorithm</label>
      </node>
      <node id="16990">
        <label>memory</label>
      </node>
      <node id="17009">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="17010" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabAllocator_8H" kindref="compound">AMReX_FabAllocator.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">FabPoolAllocator*<sp/>fab_pool_allocator<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">constexpr<sp/>std::size_t<sp/>FabPoolAllocator::block_size;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>alloc_bulk_size<sp/>=<sp/>64*1024;<sp/></highlight><highlight class="comment">//<sp/>64K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>alloc_bulk_size<sp/>/<sp/>FabPoolAllocator::block_size;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">FabPoolAllocator::FabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_FAB_IS_PINNED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_arena(<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>())</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_arena(<ref refid="namespaceamrex_1a76cc74eb7c42bf4d111ac5cae5db8420" kindref="member">The_Managed_Arena</ref>())</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>m_arena-&gt;alloc(alloc_bulk_size);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>m_orig.push_back(p);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nblocks;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pool.push_back(p);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p<sp/>+<sp/>block_size);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">FabPoolAllocator::~FabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>m_orig)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_arena-&gt;free(p);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="41"><highlight class="normal">FabPoolAllocator::alloc<sp/>(std::size_t<sp/>nbytes)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(nbytes<sp/>&lt;=<sp/>block_size);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(m_mutex);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pool.empty())<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m_pool.back();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pool.pop_back();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m_arena-&gt;alloc(alloc_bulk_size);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_orig.push_back(p);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>nblocks;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pool.push_back(p);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p<sp/>+<sp/>block_size);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">FabPoolAllocator::free<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(m_mutex);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pool.push_back(ptr);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeFabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>fab_pool_allocator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FabPoolAllocator();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyFabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fab_pool_allocator;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>fab_pool_allocator<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabAllocator.cpp"/>
  </compounddef>
</doxygen>
