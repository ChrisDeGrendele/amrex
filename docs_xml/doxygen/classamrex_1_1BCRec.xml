<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1BCRec" kind="class" language="C++" prot="public">
    <compoundname>amrex::BCRec</compoundname>
    <includes refid="AMReX__BCRec_8H" local="no">AMReX_BCRec.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1BCRec_1adb5fc84ac2f9e43e15f6cc05ed2216f5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::BCRec::bc[2 *AMREX_SPACEDIM]</definition>
        <argsstring>[2 *AMREX_SPACEDIM]</argsstring>
        <name>bc</name>
        <briefdescription>
<para>Array of integer values describing boundary conditions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="134" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1BCRec_1a1c7372467f23a110e2054bee1ef59b7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::BCRec::BCRec</definition>
        <argsstring>()</argsstring>
        <name>BCRec</name>
        <briefdescription>
<para>The default constructor, which does NOT set valid boundary types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a40bbee6447f767f414c5351aa8320f16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::BCRec::BCRec</definition>
        <argsstring>(AMREX_D_DECL(int loX, int loY, int loZ), AMREX_D_DECL(int hiX, int hiY, int hiZ))</argsstring>
        <name>BCRec</name>
        <param>
          <type><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(int loX, int loY, int loZ)</type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(int hiX, int hiY, int hiZ)</type>
        </param>
        <briefdescription>
<para>The constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="31" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a22c23df1a1ebde5480d4bd2b3f66f121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::BCRec::BCRec</definition>
        <argsstring>(const int *lo, const int *hi)</argsstring>
        <name>BCRec</name>
        <param>
          <type>const int *</type>
          <declname>lo</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>hi</declname>
        </param>
        <briefdescription>
<para>Another constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1ac4602bd64493d56333647c493f392c44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::BCRec::BCRec</definition>
        <argsstring>(const Box &amp;bx, const Box &amp;domain, const BCRec &amp;bc_domain)</argsstring>
        <name>BCRec</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>bc_domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="49" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a3bbff6bab37db7a6b5ba218ad8b5ad3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE void amrex::BCRec::setLo</definition>
        <argsstring>(int dir, int bc_val)</argsstring>
        <name>setLo</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bc_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="69" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a5ac1c8100023f0a9498e973641ef31b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE void amrex::BCRec::setHi</definition>
        <argsstring>(int dir, int bc_val)</argsstring>
        <name>setHi</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bc_val</declname>
        </param>
        <briefdescription>
<para>Explicitly set hi bndry value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="74" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a68d68ff2be8ecc720930fdd294e49e2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> const int *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE const int* amrex::BCRec::vect</definition>
        <argsstring>() const &amp;</argsstring>
        <name>vect</name>
        <briefdescription>
<para>Return bndry values (used in calls to FORTRAN). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="79" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1aa2d7756ef38cfb2063c54a6e6214cae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* amrex::BCRec::vect</definition>
        <argsstring>()&amp;&amp;=delete</argsstring>
        <name>vect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1aa1b908fcea0927ea1d8b6709ff98c204" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> const int *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE const int* amrex::BCRec::data</definition>
        <argsstring>() const &amp;</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="83" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1ad5831834effbc5203c60bac201da65bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* amrex::BCRec::data</definition>
        <argsstring>()&amp;&amp;=delete</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1ab800ebf2385efb60c9b9a95cf87cce7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> const int *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE const int* amrex::BCRec::lo</definition>
        <argsstring>() const &amp;</argsstring>
        <name>lo</name>
        <briefdescription>
<para>Return low-end boundary data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="90" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a1a0bb3484eac96b07a73c293614d2b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* amrex::BCRec::lo</definition>
        <argsstring>()&amp;&amp;=delete</argsstring>
        <name>lo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1ad9ab1b5f296d24b731ac78afe9fecfe2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> const int *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE const int* amrex::BCRec::hi</definition>
        <argsstring>() const &amp;</argsstring>
        <name>hi</name>
        <briefdescription>
<para>Return high-end boundary data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a4a81a70cc95930ecdf555b8d887ca114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int *</type>
        <definition>const int* amrex::BCRec::hi</definition>
        <argsstring>()&amp;&amp;=delete</argsstring>
        <name>hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a7c34a8689c863dc27a1c57b0c2939155" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> int</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE int amrex::BCRec::lo</definition>
        <argsstring>(int dir) const </argsstring>
        <name>lo</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Return low-end boundary data in direction &lt;dir&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="102" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a4b536737422927be79844e269f7ae9a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> int</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE int amrex::BCRec::hi</definition>
        <argsstring>(int dir) const </argsstring>
        <name>hi</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Return high-end boundary data in direction &lt;dir&gt;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="107" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1a2bfa41f7fb96f214bbdebf7129f16294" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE bool amrex::BCRec::operator==</definition>
        <argsstring>(const BCRec &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equal test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="112" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="112" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BCRec_1afd25845fe33bc7bfa6a2c9420b83ce18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1aeb09e10bb31cfaa6b8928520c9041df9" kindref="member">AMREX_INLINE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_INLINE bool amrex::BCRec::operator!=</definition>
        <argsstring>(const BCRec &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Not equal test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="124" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="124" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1BCRec_1a685becdfc4b358ad1776be6a0c02fe16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const BCRec &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <defname>b</defname>
        </param>
        <briefdescription>
<para>ASCII write to ostream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="128" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.cpp" bodystart="36" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boundary Condition Records. Necessary information and functions for computing boundary conditions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCRec.H" bodystart="16" bodyend="135"/>
    <listofallmembers>
      <member refid="classamrex_1_1BCRec_1adb5fc84ac2f9e43e15f6cc05ed2216f5" prot="private" virt="non-virtual"><scope>amrex::BCRec</scope><name>bc</name></member>
      <member refid="classamrex_1_1BCRec_1a1c7372467f23a110e2054bee1ef59b7b" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1a40bbee6447f767f414c5351aa8320f16" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1a22c23df1a1ebde5480d4bd2b3f66f121" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1ac4602bd64493d56333647c493f392c44" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>BCRec</name></member>
      <member refid="classamrex_1_1BCRec_1aa1b908fcea0927ea1d8b6709ff98c204" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>data</name></member>
      <member refid="classamrex_1_1BCRec_1ad5831834effbc5203c60bac201da65bf" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>data</name></member>
      <member refid="classamrex_1_1BCRec_1ad9ab1b5f296d24b731ac78afe9fecfe2" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>hi</name></member>
      <member refid="classamrex_1_1BCRec_1a4a81a70cc95930ecdf555b8d887ca114" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>hi</name></member>
      <member refid="classamrex_1_1BCRec_1a4b536737422927be79844e269f7ae9a8" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>hi</name></member>
      <member refid="classamrex_1_1BCRec_1ab800ebf2385efb60c9b9a95cf87cce7a" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>lo</name></member>
      <member refid="classamrex_1_1BCRec_1a1a0bb3484eac96b07a73c293614d2b45" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>lo</name></member>
      <member refid="classamrex_1_1BCRec_1a7c34a8689c863dc27a1c57b0c2939155" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>lo</name></member>
      <member refid="classamrex_1_1BCRec_1afd25845fe33bc7bfa6a2c9420b83ce18" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>operator!=</name></member>
      <member refid="classamrex_1_1BCRec_1a685becdfc4b358ad1776be6a0c02fe16" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>operator&lt;&lt;</name></member>
      <member refid="classamrex_1_1BCRec_1a2bfa41f7fb96f214bbdebf7129f16294" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>operator==</name></member>
      <member refid="classamrex_1_1BCRec_1a5ac1c8100023f0a9498e973641ef31b4" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>setHi</name></member>
      <member refid="classamrex_1_1BCRec_1a3bbff6bab37db7a6b5ba218ad8b5ad3f" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>setLo</name></member>
      <member refid="classamrex_1_1BCRec_1a68d68ff2be8ecc720930fdd294e49e2e" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>vect</name></member>
      <member refid="classamrex_1_1BCRec_1aa2d7756ef38cfb2063c54a6e6214cae5" prot="public" virt="non-virtual"><scope>amrex::BCRec</scope><name>vect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
