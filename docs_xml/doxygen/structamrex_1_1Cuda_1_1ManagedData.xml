<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1Cuda_1_1ManagedData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Cuda::ManagedData</compoundname>
    <includes refid="AMReX__CudaMemory_8H" local="no">AMReX_CudaMemory.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>typename std::enable_if&lt; std::is_pod&lt; T &gt;::value, int &gt;::type</type>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1Cuda_1_1ManagedData_1a63f082f8c42e0236f05933784f52fe19" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* amrex::Cuda::ManagedData&lt; T, type &gt;::d_d</definition>
        <argsstring></argsstring>
        <name>d_d</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="95" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a0927998bf2022a63d075ecf69008358e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::ManagedData&lt; T, type &gt;::ManagedData</definition>
        <argsstring>()</argsstring>
        <name>ManagedData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1acd3304f327b1347289a935bb7d70b27e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::ManagedData&lt; T, type &gt;::ManagedData</definition>
        <argsstring>(T const &amp;h_d)</argsstring>
        <name>ManagedData</name>
        <param>
          <type>T const &amp;</type>
          <declname>h_d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="55" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1af48a8ce01b9daf5cc9456a26a0f11c2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::ManagedData&lt; T, type &gt;::~ManagedData</definition>
        <argsstring>()</argsstring>
        <name>~ManagedData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="61" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a4f540be2c074ef475140a2a6e32fc506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* amrex::Cuda::ManagedData&lt; T, type &gt;::devicePtr</definition>
        <argsstring>()&amp;</argsstring>
        <name>devicePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="66" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a09ee98b54242a9aa7974375b7a221dbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const *</type>
        <definition>T const* amrex::Cuda::ManagedData&lt; T, type &gt;::devicePtr</definition>
        <argsstring>() const &amp;</argsstring>
        <name>devicePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="71" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a0a138bbe2603de6d5624387fc6cf946d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T amrex::Cuda::ManagedData&lt; T, type &gt;::hostValue</definition>
        <argsstring>() const </argsstring>
        <name>hostValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="76" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a9d67bc64e67301d06c465e3ec852dc83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::ManagedData&lt; T, type &gt;::updateDevice</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>updateDevice</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="83" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a06340cfaf62e739f0ab2556910ebec0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T *</type>
        <definition>T* amrex::Cuda::ManagedData&lt; T, type &gt;::data</definition>
        <argsstring>()&amp;&amp;=delete</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a90bdb0072f4c38174e35a9917d4e6ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::ManagedData&lt; T, type &gt;::ManagedData</definition>
        <argsstring>(ManagedData const &amp;)=delete</argsstring>
        <name>ManagedData</name>
        <param>
          <type><ref refid="structamrex_1_1Cuda_1_1ManagedData" kindref="compound">ManagedData</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1adc6f5fa1f02020f1937d585146d41979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::ManagedData&lt; T, type &gt;::ManagedData</definition>
        <argsstring>(ManagedData &amp;&amp;)=delete</argsstring>
        <name>ManagedData</name>
        <param>
          <type><ref refid="structamrex_1_1Cuda_1_1ManagedData" kindref="compound">ManagedData</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1a34bf29d51d80e63c07a5066d55cf58ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::ManagedData&lt; T, type &gt;::operator=</definition>
        <argsstring>(ManagedData const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Cuda_1_1ManagedData" kindref="compound">ManagedData</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Cuda_1_1ManagedData_1aab5b83becbf1ecfa9c9f0d63f7395b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::ManagedData&lt; T, type &gt;::operator=</definition>
        <argsstring>(ManagedData &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Cuda_1_1ManagedData" kindref="compound">ManagedData</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="92" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaMemory.H" bodystart="48" bodyend="96"/>
    <listofallmembers>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a63f082f8c42e0236f05933784f52fe19" prot="private" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>d_d</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a06340cfaf62e739f0ab2556910ebec0a" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>data</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a4f540be2c074ef475140a2a6e32fc506" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>devicePtr</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a09ee98b54242a9aa7974375b7a221dbd" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>devicePtr</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a0a138bbe2603de6d5624387fc6cf946d" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>hostValue</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a0927998bf2022a63d075ecf69008358e" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>ManagedData</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1acd3304f327b1347289a935bb7d70b27e" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>ManagedData</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a90bdb0072f4c38174e35a9917d4e6ed7" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>ManagedData</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1adc6f5fa1f02020f1937d585146d41979" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>ManagedData</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a34bf29d51d80e63c07a5066d55cf58ab" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1aab5b83becbf1ecfa9c9f0d63f7395b3d" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1a9d67bc64e67301d06c465e3ec852dc83" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>updateDevice</name></member>
      <member refid="structamrex_1_1Cuda_1_1ManagedData_1af48a8ce01b9daf5cc9456a26a0f11c2d" prot="public" virt="non-virtual"><scope>amrex::Cuda::ManagedData</scope><name>~ManagedData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
