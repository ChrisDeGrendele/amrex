<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1Cuda_1_1Atomic" kind="namespace" language="C++">
    <compoundname>amrex::Cuda::Atomic</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a8dbe9e6c8cf6f1969ea847d7a780d917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Add</definition>
        <argsstring>(T *sum, T value)</argsstring>
        <name>Add</name>
        <param>
          <type>T *</type>
          <declname>sum</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="153" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="153" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1aa02d381692b7072a2f1b4df08238f283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Add</definition>
        <argsstring>(long *sum, long value)</argsstring>
        <name>Add</name>
        <param>
          <type>long *</type>
          <declname>sum</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="163" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="163" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a35e5c734a4fd21b7a64332c23e7aea36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Min</definition>
        <argsstring>(T *m, T value)</argsstring>
        <name>Min</name>
        <param>
          <type>T *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="174" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a1389209aa2d059162a24f1e143519b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Min</definition>
        <argsstring>(int *m, int value)</argsstring>
        <name>Min</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="184" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="184" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1abb8b1b76d8d3d26f77b5b34622005633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Min</definition>
        <argsstring>(unsigned int *m, unsigned int value)</argsstring>
        <name>Min</name>
        <param>
          <type>unsigned int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="194" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="194" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1adc15ba4ec8434d7b6ca93c647f8a403f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Min</definition>
        <argsstring>(unsigned long long int *m, unsigned long long int value)</argsstring>
        <name>Min</name>
        <param>
          <type>unsigned long long int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned long long int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="204" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="204" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a8503a7805010063d5414c1f6dd336b2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Max</definition>
        <argsstring>(T *m, T value)</argsstring>
        <name>Max</name>
        <param>
          <type>T *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="215" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="215" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a89b0b770499cff71440220f01a492bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Max</definition>
        <argsstring>(int *m, int value)</argsstring>
        <name>Max</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="225" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="225" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1ad4e48bcc36c5c4e63e3fc063fe782603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Max</definition>
        <argsstring>(unsigned int *m, unsigned int value)</argsstring>
        <name>Max</name>
        <param>
          <type>unsigned int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="235" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a1c92c2608dfb470b81698e06eb2825aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Max</definition>
        <argsstring>(unsigned long long int *m, unsigned long long int value)</argsstring>
        <name>Max</name>
        <param>
          <type>unsigned long long int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned long long int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="245" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="245" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1abcd8ac8d57b6932dd3cb16deaeca0f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::Or</definition>
        <argsstring>(int *m, int value)</argsstring>
        <name>Or</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="255" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="255" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a8b78bce02226908af3a9db5f0718f095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::Cuda::Atomic::And</definition>
        <argsstring>(int *m, int value)</argsstring>
        <name>And</name>
        <param>
          <type>int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="265" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="265" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1af848aaea96b6acdafe8caf72b36a4828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> unsigned int</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE unsigned int amrex::Cuda::Atomic::Inc</definition>
        <argsstring>(unsigned int *m, unsigned int value)</argsstring>
        <name>Inc</name>
        <param>
          <type>unsigned int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="275" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="275" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Cuda_1_1Atomic_1a2471e79a7a795387e1757c61da0cb9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> unsigned int</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE unsigned int amrex::Cuda::Atomic::Dec</definition>
        <argsstring>(unsigned int *m, unsigned int value)</argsstring>
        <name>Dec</name>
        <param>
          <type>unsigned int *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="285" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" bodystart="285" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaUtility.H" line="90" column="1"/>
  </compounddef>
</doxygen>
