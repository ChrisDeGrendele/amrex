<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1EB2_1_1LatheIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::LatheIF</compoundname>
    <includes refid="AMReX__EB2__IF__Lathe_8H" local="no">AMReX_EB2_IF_Lathe.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1LatheIF_1a4673532f2e2842aec58a63be5b8b32ac" prot="protected" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::EB2::LatheIF&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1a5d183c76ac21421b061cf8333a11456a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::LatheIF&lt; F &gt;::LatheIF</definition>
        <argsstring>(F &amp;&amp;a_f)</argsstring>
        <name>LatheIF</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>a_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1a541951f58fc33b3758004de48fea29ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::LatheIF&lt; F &gt;::LatheIF</definition>
        <argsstring>(F const &amp;a_f)</argsstring>
        <name>LatheIF</name>
        <param>
          <type>F const &amp;</type>
          <declname>a_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1ad6ff8a0ff53f64ca7051a5a9391632c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::LatheIF&lt; F &gt;::~LatheIF</definition>
        <argsstring>()</argsstring>
        <name>~LatheIF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1a117def25c224ea9eff3f16a8d3c65fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::LatheIF&lt; F &gt;::LatheIF</definition>
        <argsstring>(const LatheIF &amp;rhs)=default</argsstring>
        <name>LatheIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1LatheIF" kindref="compound">LatheIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1ac852783b31c87f6d97fcc729ff2829d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::LatheIF&lt; F &gt;::LatheIF</definition>
        <argsstring>(LatheIF &amp;&amp;rhs)=default</argsstring>
        <name>LatheIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1LatheIF" kindref="compound">LatheIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1abc9cd9577108503cfdbbe852b0db8189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1LatheIF" kindref="compound">LatheIF</ref> &amp;</type>
        <definition>LatheIF&amp; amrex::EB2::LatheIF&lt; F &gt;::operator=</definition>
        <argsstring>(const LatheIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1LatheIF" kindref="compound">LatheIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1adb9fe95da5c7497cb70899d736fd53ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1LatheIF" kindref="compound">LatheIF</ref> &amp;</type>
        <definition>LatheIF&amp; amrex::EB2::LatheIF&lt; F &gt;::operator=</definition>
        <argsstring>(LatheIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1LatheIF" kindref="compound">LatheIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1LatheIF_1a1d095e82d752b81118094f2641125850" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::LatheIF&lt; F &gt;::operator()</definition>
        <argsstring>(const RealArray &amp;p) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="29" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" bodystart="29" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" line="16" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Lathe.H" bodystart="15" bodyend="42"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1a5d183c76ac21421b061cf8333a11456a" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>LatheIF</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1a541951f58fc33b3758004de48fea29ba" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>LatheIF</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1a117def25c224ea9eff3f16a8d3c65fa2" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>LatheIF</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1ac852783b31c87f6d97fcc729ff2829d3" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>LatheIF</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1a4673532f2e2842aec58a63be5b8b32ac" prot="protected" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1a1d095e82d752b81118094f2641125850" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1abc9cd9577108503cfdbbe852b0db8189" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1adb9fe95da5c7497cb70899d736fd53ad" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1LatheIF_1ad6ff8a0ff53f64ca7051a5a9391632c7" prot="public" virt="non-virtual"><scope>amrex::EB2::LatheIF</scope><name>~LatheIF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
