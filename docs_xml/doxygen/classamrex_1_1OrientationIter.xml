<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1OrientationIter" kind="class" language="C++" prot="public">
    <compoundname>amrex::OrientationIter</compoundname>
    <includes refid="AMReX__Orientation_8H" local="no">AMReX_Orientation.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1OrientationIter_1a4a1d69b82d46e482d19ca15a5bb8a711" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::OrientationIter::face</definition>
        <argsstring></argsstring>
        <name>face</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="164" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a1761d10b21cbdf6a2ecb999bec9b1c9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> constexpr</type>
        <definition>AMREX_GPU_HOST_DEVICE constexpr amrex::OrientationIter::OrientationIter</definition>
        <argsstring>()</argsstring>
        <name>OrientationIter</name>
        <briefdescription>
<para>The default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="114" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1aff94c0aec01e6c7e68b928f11ac65734" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::OrientationIter::OrientationIter</definition>
        <argsstring>(const Orientation &amp;_face)</argsstring>
        <name>OrientationIter</name>
        <param>
          <type>const <ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref> &amp;</type>
          <declname>_face</declname>
        </param>
        <briefdescription>
<para>Construct an iterator on the <ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="119" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1addbca9e1dcae49cd99a395395434d826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE void amrex::OrientationIter::rewind</definition>
        <argsstring>()</argsstring>
        <name>rewind</name>
        <briefdescription>
<para>Reset (rewind) the iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="124" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1ab200ec2f5ec4e3e349521c602c98f93c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE Orientation amrex::OrientationIter::operator()</definition>
        <argsstring>() const </argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Return the orientation of the face. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="127" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1ae12d9b5dfd117cc28062938c3da748a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::OrientationIter::operator void *</definition>
        <argsstring>()</argsstring>
        <name>operator void *</name>
        <briefdescription>
<para>Cast to void*. Used to test if iterator is valid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="130" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a631993517b7ff195f2c8b586c1a098d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1OrientationIter" kindref="compound">OrientationIter</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE OrientationIter&amp; amrex::OrientationIter::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>Pre-decrement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="133" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1aa06a7f529d4456ffa779f441a692175a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1OrientationIter" kindref="compound">OrientationIter</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE OrientationIter&amp; amrex::OrientationIter::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Pre-increment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="136" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a0e4d271f040b46cc9226019fdc3a0f81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1OrientationIter" kindref="compound">OrientationIter</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE OrientationIter amrex::OrientationIter::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-decrement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="139" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a029d995f7b025394a03c5774223ed142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1OrientationIter" kindref="compound">OrientationIter</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE OrientationIter amrex::OrientationIter::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-increment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="145" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a2082370430789074ec6d86432d7792d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE bool amrex::OrientationIter::operator==</definition>
        <argsstring>(const OrientationIter &amp;oi) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classamrex_1_1OrientationIter" kindref="compound">OrientationIter</ref> &amp;</type>
          <declname>oi</declname>
        </param>
        <briefdescription>
<para>The equality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="151" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a4af6dcc60959e359c6a7f8a9ebd1a638" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE bool amrex::OrientationIter::operator!=</definition>
        <argsstring>(const OrientationIter &amp;oi) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classamrex_1_1OrientationIter" kindref="compound">OrientationIter</ref> &amp;</type>
          <declname>oi</declname>
        </param>
        <briefdescription>
<para>The inequality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="157" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="157" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a9561ccffbc5e55ac65ec015b1767deba" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::OrientationIter::OrientationIter</definition>
        <argsstring>(int _face)</argsstring>
        <name>OrientationIter</name>
        <param>
          <type>int</type>
          <declname>_face</declname>
        </param>
        <briefdescription>
<para>Construct an iterator on the face. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="167" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1OrientationIter_1a2b23ca53b690740d484e6f753be0da15" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE bool amrex::OrientationIter::ok</definition>
        <argsstring>() const </argsstring>
        <name>ok</name>
        <briefdescription>
<para>Is the iterator valid? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="170" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="170" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An Iterator over the <ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref> of Faces of a <ref refid="classamrex_1_1Box" kindref="compound">Box</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" line="109" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Orientation.H" bodystart="108" bodyend="171"/>
    <listofallmembers>
      <member refid="classamrex_1_1OrientationIter_1a4a1d69b82d46e482d19ca15a5bb8a711" prot="private" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>face</name></member>
      <member refid="classamrex_1_1OrientationIter_1a2b23ca53b690740d484e6f753be0da15" prot="private" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>ok</name></member>
      <member refid="classamrex_1_1OrientationIter_1ae12d9b5dfd117cc28062938c3da748a9" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator void *</name></member>
      <member refid="classamrex_1_1OrientationIter_1a4af6dcc60959e359c6a7f8a9ebd1a638" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator!=</name></member>
      <member refid="classamrex_1_1OrientationIter_1ab200ec2f5ec4e3e349521c602c98f93c" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator()</name></member>
      <member refid="classamrex_1_1OrientationIter_1aa06a7f529d4456ffa779f441a692175a" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1OrientationIter_1a029d995f7b025394a03c5774223ed142" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1OrientationIter_1a631993517b7ff195f2c8b586c1a098d5" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator--</name></member>
      <member refid="classamrex_1_1OrientationIter_1a0e4d271f040b46cc9226019fdc3a0f81" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator--</name></member>
      <member refid="classamrex_1_1OrientationIter_1a2082370430789074ec6d86432d7792d8" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>operator==</name></member>
      <member refid="classamrex_1_1OrientationIter_1a1761d10b21cbdf6a2ecb999bec9b1c9c" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>OrientationIter</name></member>
      <member refid="classamrex_1_1OrientationIter_1aff94c0aec01e6c7e68b928f11ac65734" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>OrientationIter</name></member>
      <member refid="classamrex_1_1OrientationIter_1a9561ccffbc5e55ac65ec015b1767deba" prot="private" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>OrientationIter</name></member>
      <member refid="classamrex_1_1OrientationIter_1addbca9e1dcae49cd99a395395434d826" prot="public" virt="non-virtual"><scope>amrex::OrientationIter</scope><name>rewind</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
