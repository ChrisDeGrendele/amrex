<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1FabArrayBase_1_1BDKey" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FabArrayBase::BDKey</compoundname>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1BDKey_1a72b32342670aa4c490e3362b75943633" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">BoxArray::RefID</ref></type>
        <definition>BoxArray::RefID amrex::FabArrayBase::BDKey::m_ba_id</definition>
        <argsstring></argsstring>
        <name>m_ba_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="209" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1BDKey_1ad4cad04286d0ad719cfe6125b146932e" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">DistributionMapping::RefID</ref></type>
        <definition>DistributionMapping::RefID amrex::FabArrayBase::BDKey::m_dm_id</definition>
        <argsstring></argsstring>
        <name>m_dm_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="210" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a6fefae1e1dcfc2840ad9989e7af95e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::BDKey::BDKey</definition>
        <argsstring>()=default</argsstring>
        <name>BDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a9c975bd0926b3268f992a912e9ab6e78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::BDKey::BDKey</definition>
        <argsstring>(const BoxArray::RefID &amp;baid, const DistributionMapping::RefID &amp;dmid)</argsstring>
        <name>BDKey</name>
        <param>
          <type>const <ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">BoxArray::RefID</ref> &amp;</type>
          <declname>baid</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">DistributionMapping::RefID</ref> &amp;</type>
          <declname>dmid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="195" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="195" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1ac06b81b305fa32247edb5ad538f76c9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator&lt;</definition>
        <argsstring>(const BDKey &amp;rhs) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="197" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a38dbbb2254cd558975d9fb80d7265b80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator==</definition>
        <argsstring>(const BDKey &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="201" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a246039c7f9cd62cbdab33642621e6224" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator!=</definition>
        <argsstring>(const BDKey &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="204" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="204" bodyend="206"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1FabArrayBase_1_1BDKey_1ada86bd7c60ca814be4123736e1cfb658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const BDKey &amp;id)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="207" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp" bodystart="1678" bodyend="1682"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Key for unique combination of <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> Note both <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> are reference counted. Objects with the same references have the same key. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="641">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="642" relation="public-inheritance">
        </childnode>
      </node>
      <node id="642">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="639">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="640" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="640">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="641" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="637">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="638" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="639" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="638">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" line="193" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="193" bodyend="211"/>
    <listofallmembers>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a6fefae1e1dcfc2840ad9989e7af95e1f" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>BDKey</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a9c975bd0926b3268f992a912e9ab6e78" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>BDKey</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a72b32342670aa4c490e3362b75943633" prot="private" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>m_ba_id</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ad4cad04286d0ad719cfe6125b146932e" prot="private" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>m_dm_id</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a246039c7f9cd62cbdab33642621e6224" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ac06b81b305fa32247edb5ad538f76c9c" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator&lt;</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ada86bd7c60ca814be4123736e1cfb658" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator&lt;&lt;</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a38dbbb2254cd558975d9fb80d7265b80" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
