<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__VectorIO_8H" kind="file" language="C++">
    <compoundname>AMReX_VectorIO.H</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="AMReX__FPC_8H" local="yes">AMReX_FPC.H</includes>
    <includes refid="AMReX__FabConv_8H" local="yes">AMReX_FabConv.H</includes>
    <includes refid="AMReX__IntConv_8H" local="yes">AMReX_IntConv.H</includes>
    <includedby refid="AMReX__VectorIO_8cpp" local="yes">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.cpp</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="33884">
        <label>functional</label>
      </node>
      <node id="33894">
        <label>cstdint</label>
      </node>
      <node id="33879">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="33880" relation="include">
        </childnode>
        <childnode refid="33881" relation="include">
        </childnode>
        <childnode refid="33882" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33884" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33878" relation="include">
        </childnode>
      </node>
      <node id="33889">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="33890" relation="include">
        </childnode>
        <childnode refid="33891" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
      </node>
      <node id="33883">
        <label>stdexcept</label>
      </node>
      <node id="33876">
        <label>string</label>
      </node>
      <node id="33872">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="33873" relation="include">
        </childnode>
        <childnode refid="33874" relation="include">
        </childnode>
        <childnode refid="33875" relation="include">
        </childnode>
        <childnode refid="33876" relation="include">
        </childnode>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33877" relation="include">
        </childnode>
        <childnode refid="33878" relation="include">
        </childnode>
        <childnode refid="33879" relation="include">
        </childnode>
        <childnode refid="33880" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33886" relation="include">
        </childnode>
        <childnode refid="33887" relation="include">
        </childnode>
      </node>
      <node id="33886">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="33888">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="33892">
        <label>AMReX_IntConv.H</label>
        <link refid="AMReX__IntConv_8H"/>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33893" relation="include">
        </childnode>
        <childnode refid="33894" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
      </node>
      <node id="33878">
        <label>cstdio</label>
      </node>
      <node id="33891">
        <label>vector</label>
      </node>
      <node id="33885">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="33879" relation="include">
        </childnode>
      </node>
      <node id="33880">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="33875">
        <label>utility</label>
      </node>
      <node id="33873">
        <label>array</label>
      </node>
      <node id="33877">
        <label>sstream</label>
      </node>
      <node id="33882">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="33883" relation="include">
        </childnode>
      </node>
      <node id="33871">
        <label>iosfwd</label>
      </node>
      <node id="33868">
        <label>iostream</label>
      </node>
      <node id="33881">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="33870">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="33871" relation="include">
        </childnode>
        <childnode refid="33872" relation="include">
        </childnode>
        <childnode refid="33889" relation="include">
        </childnode>
        <childnode refid="33885" relation="include">
        </childnode>
        <childnode refid="33887" relation="include">
        </childnode>
      </node>
      <node id="33890">
        <label>algorithm</label>
      </node>
      <node id="33893">
        <label>cstring</label>
      </node>
      <node id="33869">
        <label>AMReX_FPC.H</label>
        <link refid="AMReX__FPC_8H"/>
        <childnode refid="33870" relation="include">
        </childnode>
      </node>
      <node id="33874">
        <label>memory</label>
      </node>
      <node id="33887">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="33888" relation="include">
        </childnode>
      </node>
      <node id="33867">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.H</label>
        <link refid="AMReX_VectorIO.H"/>
        <childnode refid="33868" relation="include">
        </childnode>
        <childnode refid="33869" relation="include">
        </childnode>
        <childnode refid="33870" relation="include">
        </childnode>
        <childnode refid="33892" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="33900">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp</label>
        <link refid="AMReX__LoadBalanceKD_8cpp"/>
      </node>
      <node id="33902">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="33898">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="33901">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
      </node>
      <node id="33903">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="33898" relation="include">
        </childnode>
        <childnode refid="33904" relation="include">
        </childnode>
      </node>
      <node id="33899">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H</label>
        <link refid="AMReX__LoadBalanceKD_8H"/>
        <childnode refid="33900" relation="include">
        </childnode>
      </node>
      <node id="33896">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.cpp</label>
        <link refid="AMReX__VectorIO_8cpp"/>
      </node>
      <node id="33897">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="33898" relation="include">
        </childnode>
        <childnode refid="33899" relation="include">
        </childnode>
        <childnode refid="33901" relation="include">
        </childnode>
        <childnode refid="33902" relation="include">
        </childnode>
        <childnode refid="33903" relation="include">
        </childnode>
      </node>
      <node id="33904">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="33895">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.H</label>
        <link refid="AMReX_VectorIO.H"/>
        <childnode refid="33896" relation="include">
        </childnode>
        <childnode refid="33897" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_VECTORIO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_VECTORIO_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__FPC_8H" kindref="compound">AMReX_FPC.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__FabConv_8H" kindref="compound">AMReX_FabConv.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="AMReX__IntConv_8H" kindref="compound">AMReX_IntConv.H</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0718da697f64bda3be2152538b70d4c5" kindref="member">writeIntData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/><ref refid="namespaceamrex_1_1Cuda_1_1range__detail_1a79ded87e903a866795953055183e8cef" kindref="member">size</ref>,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classamrex_1_1FPC_1a9cad45e259106beaa8e4dc56f613bd06" kindref="member">FPC::NativeIntDescriptor</ref>());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1af8ec915a2cffc7c342e1f15e52cbd697" kindref="member">readIntData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a89e2fbb8fe2b7488d791a48affc4f5b9" kindref="member">writeLongData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classamrex_1_1FPC_1a6f67a43bd516bcc9547cb3b76424b2b8" kindref="member">FPC::NativeLongDescriptor</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ae6fd22ad663e9cad373c721f38d30ede" kindref="member">readLongData</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1af9790d1f61a6d21ce4e9f92c58ac0600" kindref="member">writeRealData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd<sp/>=<sp/><ref refid="classamrex_1_1FPC_1ab470772000cfb5f507edc5f294383bbc" kindref="member">FPC::NativeRealDescriptor</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aa6f624229959bee80f1444371bb5babc" kindref="member">readRealData</ref>(Real*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f9c3dd444d301063e6190234413bda4" kindref="member">writeFloatData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd<sp/>=<sp/><ref refid="classamrex_1_1FPC_1a56bb549e278ccc2611fd389c3d2b6bdb" kindref="member">FPC::Native32RealDescriptor</ref>());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4c085d3b27d107f62bdb36f5ecc0f326" kindref="member">readFloatData</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a583a444879c864fcc03845f637a122c9" kindref="member">writeDoubleData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd<sp/>=<sp/><ref refid="classamrex_1_1FPC_1ab470772000cfb5f507edc5f294383bbc" kindref="member">FPC::NativeRealDescriptor</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ac590394599f7ea721cf8999331d0436e" kindref="member">readDoubleData</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>data,<sp/>std::size_t<sp/>size,<sp/>std::istream&amp;<sp/>is,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor&amp;<sp/>rd);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VectorIO.H"/>
  </compounddef>
</doxygen>
