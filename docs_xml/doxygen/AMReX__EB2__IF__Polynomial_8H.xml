<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__EB2__IF__Polynomial_8H" kind="file" language="C++">
    <compoundname>AMReX_EB2_IF_Polynomial.H</compoundname>
    <includes refid="AMReX__Array_8H" local="no">AMReX_Array.H</includes>
    <includes refid="AMReX__Vector_8H" local="no">AMReX_Vector.H</includes>
    <includes refid="AMReX__IntVect_8H" local="no">AMReX_IntVect.H</includes>
    <includes local="no">cmath</includes>
    <includedby refid="AMReX__EB2__IF_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF.H</includedby>
    <incdepgraph>
      <node id="36464">
        <label>functional</label>
      </node>
      <node id="36476">
        <label>limits</label>
      </node>
      <node id="36472">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="36473" relation="include">
        </childnode>
        <childnode refid="36474" relation="include">
        </childnode>
        <childnode refid="36475" relation="include">
        </childnode>
        <childnode refid="36476" relation="include">
        </childnode>
        <childnode refid="36477" relation="include">
        </childnode>
        <childnode refid="36470" relation="include">
        </childnode>
        <childnode refid="36461" relation="include">
        </childnode>
        <childnode refid="36466" relation="include">
        </childnode>
        <childnode refid="36451" relation="include">
        </childnode>
        <childnode refid="36469" relation="include">
        </childnode>
        <childnode refid="36465" relation="include">
        </childnode>
        <childnode refid="36468" relation="include">
        </childnode>
        <childnode refid="36460" relation="include">
        </childnode>
      </node>
      <node id="36459">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="36460" relation="include">
        </childnode>
        <childnode refid="36461" relation="include">
        </childnode>
        <childnode refid="36462" relation="include">
        </childnode>
        <childnode refid="36456" relation="include">
        </childnode>
        <childnode refid="36464" relation="include">
        </childnode>
        <childnode refid="36455" relation="include">
        </childnode>
        <childnode refid="36458" relation="include">
        </childnode>
      </node>
      <node id="36469">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="36470" relation="include">
        </childnode>
        <childnode refid="36471" relation="include">
        </childnode>
        <childnode refid="36453" relation="include">
        </childnode>
        <childnode refid="36465" relation="include">
        </childnode>
      </node>
      <node id="36475">
        <label>cmath</label>
      </node>
      <node id="36463">
        <label>stdexcept</label>
      </node>
      <node id="36455">
        <label>string</label>
      </node>
      <node id="36451">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="36452" relation="include">
        </childnode>
        <childnode refid="36453" relation="include">
        </childnode>
        <childnode refid="36454" relation="include">
        </childnode>
        <childnode refid="36455" relation="include">
        </childnode>
        <childnode refid="36456" relation="include">
        </childnode>
        <childnode refid="36457" relation="include">
        </childnode>
        <childnode refid="36458" relation="include">
        </childnode>
        <childnode refid="36459" relation="include">
        </childnode>
        <childnode refid="36460" relation="include">
        </childnode>
        <childnode refid="36465" relation="include">
        </childnode>
        <childnode refid="36466" relation="include">
        </childnode>
        <childnode refid="36467" relation="include">
        </childnode>
      </node>
      <node id="36466">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="36468">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="36458">
        <label>cstdio</label>
      </node>
      <node id="36471">
        <label>vector</label>
      </node>
      <node id="36465">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="36459" relation="include">
        </childnode>
      </node>
      <node id="36460">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="36450">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX_EB2_IF_Polynomial.H"/>
        <childnode refid="36451" relation="include">
        </childnode>
        <childnode refid="36469" relation="include">
        </childnode>
        <childnode refid="36472" relation="include">
        </childnode>
        <childnode refid="36475" relation="include">
        </childnode>
      </node>
      <node id="36454">
        <label>utility</label>
      </node>
      <node id="36452">
        <label>array</label>
      </node>
      <node id="36457">
        <label>sstream</label>
      </node>
      <node id="36462">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="36463" relation="include">
        </childnode>
      </node>
      <node id="36473">
        <label>iosfwd</label>
      </node>
      <node id="36474">
        <label>cstdlib</label>
      </node>
      <node id="36456">
        <label>iostream</label>
      </node>
      <node id="36477">
        <label>climits</label>
      </node>
      <node id="36461">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="36470">
        <label>algorithm</label>
      </node>
      <node id="36453">
        <label>memory</label>
      </node>
      <node id="36467">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="36468" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="36479">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="36478">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX_EB2_IF_Polynomial.H"/>
        <childnode refid="36479" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1EB2_1_1PolyTerm" prot="public">amrex::EB2::PolyTerm</innerclass>
    <innerclass refid="classamrex_1_1EB2_1_1PolynomialIF" prot="public">amrex::EB2::PolynomialIF</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1EB2">amrex::EB2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_EB2_IF_POLYNOMIAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_EB2_IF_POLYNOMIAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Array_8H" kindref="compound">AMReX_Array.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Vector_8H" kindref="compound">AMReX_Vector.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IntVect_8H" kindref="compound">AMReX_IntVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>implicit<sp/>functions,<sp/>&gt;0:<sp/>body;<sp/>=0:<sp/>boundary;<sp/>&lt;0:<sp/>fluid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">EB2<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Represents<sp/>one<sp/>term<sp/>in<sp/>a<sp/>general<sp/>polynomial<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classamrex_1_1EB2_1_1PolyTerm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1PolyTerm" kindref="compound">PolyTerm</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classamrex_1_1EB2_1_1PolyTerm_1a6dc84f6fbab25f3b4c48b9bea8dd15bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1EB2_1_1PolyTerm_1a6dc84f6fbab25f3b4c48b9bea8dd15bc" kindref="member">coef</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classamrex_1_1EB2_1_1PolyTerm_1ad3d79d5eb417ba4996db8180e4590492" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><ref refid="classamrex_1_1EB2_1_1PolyTerm_1ad3d79d5eb417ba4996db8180e4590492" kindref="member">powers</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classamrex_1_1EB2_1_1PolynomialIF" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classamrex_1_1EB2_1_1PolynomialIF_1aded08a08d53e73aa84431822f8b76374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF_1aded08a08d53e73aa84431822f8b76374" kindref="member">PolynomialIF</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;PolyTerm&gt;</ref><sp/>&amp;<sp/>a_polynomial,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>a_inside<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_polynomial(a_polynomial),<sp/>m_inside(a_inside),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sign(<sp/>a_inside<sp/>?<sp/>1.0<sp/>:<sp/>-1.0<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classamrex_1_1EB2_1_1PolynomialIF_1a75de3c71ff7ce9c1e159cdd8a85c07d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF_1a75de3c71ff7ce9c1e159cdd8a85c07d0" kindref="member">~PolynomialIF</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref><sp/>(<ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref>&amp;&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref>&amp;<sp/>operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref>&amp;<sp/>operator=<sp/>(<ref refid="classamrex_1_1EB2_1_1PolynomialIF" kindref="compound">PolynomialIF</ref>&amp;&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classamrex_1_1EB2_1_1PolynomialIF_1a36f4d9bc5c54924266b78cb2a826ba38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref>&amp;<sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>retval<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>the<sp/>polynomial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterm<sp/>=<sp/>0;<sp/>iterm<sp/>&lt;<sp/>m_polynomial.size();<sp/>iterm++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iexp<sp/>=<sp/>m_polynomial[iterm].powers;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>+=<sp/>m_polynomial[iterm].coef</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AMREX_D_TERM(<sp/><sp/>std::pow(p[0],<sp/>iexp[0]),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::pow(p[1],<sp/>iexp[1]),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::pow(p[2],<sp/>iexp[2])<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>sign<sp/>to<sp/>change<sp/>inside<sp/>to<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_sign*retval;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="classamrex_1_1EB2_1_1PolynomialIF_1ab7dabb0bff8ee7a62ab1b97108429374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;PolyTerm&gt;</ref><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF_1ab7dabb0bff8ee7a62ab1b97108429374" kindref="member">m_polynomial</ref>;</highlight></codeline>
<codeline lineno="66" refid="classamrex_1_1EB2_1_1PolynomialIF_1adb20f13a740421e91b3b1eb3e95672b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF_1adb20f13a740421e91b3b1eb3e95672b1" kindref="member">m_inside</ref>;</highlight></codeline>
<codeline lineno="67" refid="classamrex_1_1EB2_1_1PolynomialIF_1ad957f17b324e9e51370e72b065d6684c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EB2_1_1PolynomialIF_1ad957f17b324e9e51370e72b065d6684c" kindref="member">m_sign</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H"/>
  </compounddef>
</doxygen>
