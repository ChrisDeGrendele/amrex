<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MLPoisson_8cpp" kind="file" language="C++">
    <compoundname>AMReX_MLPoisson.cpp</compoundname>
    <includes refid="AMReX__MLPoisson_8H" local="no">AMReX_MLPoisson.H</includes>
    <includes refid="AMReX__MLPoisson__K_8H" local="no">AMReX_MLPoisson_K.H</includes>
    <includes refid="AMReX__MLALaplacian_8H" local="no">AMReX_MLALaplacian.H</includes>
    <incdepgraph>
      <node id="50498">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50499" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50441" relation="include">
        </childnode>
      </node>
      <node id="50512">
        <label>iomanip</label>
      </node>
      <node id="50445">
        <label>functional</label>
      </node>
      <node id="50494">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50474" relation="include">
        </childnode>
        <childnode refid="50489" relation="include">
        </childnode>
        <childnode refid="50495" relation="include">
        </childnode>
        <childnode refid="50467" relation="include">
        </childnode>
        <childnode refid="50476" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
      </node>
      <node id="50482">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
      </node>
      <node id="50458">
        <label>limits</label>
      </node>
      <node id="50481">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
      </node>
      <node id="50535">
        <label>AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="50436" relation="include">
        </childnode>
        <childnode refid="50536" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
        <childnode refid="50451" relation="include">
        </childnode>
      </node>
      <node id="50509">
        <label>AMReX_CudaReduce.H</label>
        <link refid="AMReX__CudaReduce_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50488" relation="include">
        </childnode>
      </node>
      <node id="50513">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50510" relation="include">
        </childnode>
      </node>
      <node id="50449">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50451" relation="include">
        </childnode>
        <childnode refid="50452" relation="include">
        </childnode>
        <childnode refid="50441" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
        <childnode refid="50467" relation="include">
        </childnode>
        <childnode refid="50468" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50469" relation="include">
        </childnode>
      </node>
      <node id="50552">
        <label>AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="50432" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
      </node>
      <node id="50437">
        <label>cstdint</label>
      </node>
      <node id="50527">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="50494" relation="include">
        </childnode>
        <childnode refid="50496" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
        <childnode refid="50528" relation="include">
        </childnode>
        <childnode refid="50526" relation="include">
        </childnode>
        <childnode refid="50511" relation="include">
        </childnode>
        <childnode refid="50473" relation="include">
        </childnode>
      </node>
      <node id="50496">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="50489" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50474" relation="include">
        </childnode>
        <childnode refid="50439" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
      </node>
      <node id="50455">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50457" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
        <childnode refid="50459" relation="include">
        </childnode>
        <childnode refid="50460" relation="include">
        </childnode>
        <childnode refid="50441" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50454" relation="include">
        </childnode>
        <childnode refid="50440" relation="include">
        </childnode>
      </node>
      <node id="50548">
        <label>AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50499" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50519" relation="include">
        </childnode>
        <childnode refid="50448" relation="include">
        </childnode>
        <childnode refid="50549" relation="include">
        </childnode>
      </node>
      <node id="50434">
        <label>AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50436" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50535" relation="include">
        </childnode>
        <childnode refid="50538" relation="include">
        </childnode>
        <childnode refid="50548" relation="include">
        </childnode>
      </node>
      <node id="50439">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50441" relation="include">
        </childnode>
        <childnode refid="50442" relation="include">
        </childnode>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50445" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50447" relation="include">
        </childnode>
      </node>
      <node id="50483">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="50487">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="50488" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
      </node>
      <node id="50465">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="50460" relation="include">
        </childnode>
        <childnode refid="50466" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
      </node>
      <node id="50511">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="50464" relation="include">
        </childnode>
        <childnode refid="50499" relation="include">
        </childnode>
        <childnode refid="50512" relation="include">
        </childnode>
        <childnode refid="50439" relation="include">
        </childnode>
        <childnode refid="50498" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
      </node>
      <node id="50457">
        <label>cmath</label>
      </node>
      <node id="50515">
        <label>AMReX_CudaAsyncArray.H</label>
        <link refid="AMReX__CudaAsyncArray_8H"/>
        <childnode refid="50474" relation="include">
        </childnode>
        <childnode refid="50516" relation="include">
        </childnode>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50473" relation="include">
        </childnode>
        <childnode refid="50471" relation="include">
        </childnode>
        <childnode refid="50507" relation="include">
        </childnode>
      </node>
      <node id="50525">
        <label>cassert</label>
      </node>
      <node id="50443">
        <label>stdexcept</label>
      </node>
      <node id="50505">
        <label>numeric</label>
      </node>
      <node id="50433">
        <label>AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="50434" relation="include">
        </childnode>
      </node>
      <node id="50538">
        <label>AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="50539" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50546">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="50451" relation="include">
        </childnode>
      </node>
      <node id="50476">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
        <childnode refid="50467" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
      </node>
      <node id="50475">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="50457" relation="include">
        </childnode>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50460" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
        <childnode refid="50459" relation="include">
        </childnode>
        <childnode refid="50451" relation="include">
        </childnode>
        <childnode refid="50472" relation="include">
        </childnode>
        <childnode refid="50454" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50476" relation="include">
        </childnode>
        <childnode refid="50477" relation="include">
        </childnode>
        <childnode refid="50478" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50481" relation="include">
        </childnode>
        <childnode refid="50482" relation="include">
        </childnode>
        <childnode refid="50483" relation="include">
        </childnode>
        <childnode refid="50484" relation="include">
        </childnode>
      </node>
      <node id="50432">
        <label>AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="50433" relation="include">
        </childnode>
      </node>
      <node id="50446">
        <label>string</label>
      </node>
      <node id="50510">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="50489" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
        <childnode refid="50511" relation="include">
        </childnode>
        <childnode refid="50473" relation="include">
        </childnode>
        <childnode refid="50507" relation="include">
        </childnode>
      </node>
      <node id="50489">
        <label>map</label>
      </node>
      <node id="50436">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="50437" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50448" relation="include">
        </childnode>
        <childnode refid="50519" relation="include">
        </childnode>
        <childnode refid="50532" relation="include">
        </childnode>
        <childnode refid="50526" relation="include">
        </childnode>
      </node>
      <node id="50543">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50494" relation="include">
        </childnode>
        <childnode refid="50448" relation="include">
        </childnode>
        <childnode refid="50468" relation="include">
        </childnode>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50542" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50489" relation="include">
        </childnode>
      </node>
      <node id="50531">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="50430">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX_MLPoisson.cpp"/>
        <childnode refid="50431" relation="include">
        </childnode>
        <childnode refid="50550" relation="include">
        </childnode>
        <childnode refid="50552" relation="include">
        </childnode>
      </node>
      <node id="50530">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="50527" relation="include">
        </childnode>
        <childnode refid="50529" relation="include">
        </childnode>
      </node>
      <node id="50499">
        <label>fstream</label>
      </node>
      <node id="50521">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50489" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50522" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
        <childnode refid="50523" relation="include">
        </childnode>
        <childnode refid="50526" relation="include">
        </childnode>
      </node>
      <node id="50529">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50473" relation="include">
        </childnode>
        <childnode refid="50527" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
        <childnode refid="50448" relation="include">
        </childnode>
        <childnode refid="50523" relation="include">
        </childnode>
        <childnode refid="50484" relation="include">
        </childnode>
      </node>
      <node id="50542">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50440" relation="include">
        </childnode>
      </node>
      <node id="50452">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="50453" relation="include">
        </childnode>
      </node>
      <node id="50539">
        <label>AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="50494" relation="include">
        </childnode>
        <childnode refid="50448" relation="include">
        </childnode>
        <childnode refid="50468" relation="include">
        </childnode>
        <childnode refid="50540" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
        <childnode refid="50542" relation="include">
        </childnode>
        <childnode refid="50543" relation="include">
        </childnode>
      </node>
      <node id="50523">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50451" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50524" relation="include">
        </childnode>
      </node>
      <node id="50461">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="50451" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50463" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50464" relation="include">
        </childnode>
        <childnode refid="50447" relation="include">
        </childnode>
        <childnode refid="50439" relation="include">
        </childnode>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
      </node>
      <node id="50507">
        <label>AMReX_CudaDevice.H</label>
        <link refid="AMReX__CudaDevice_8H"/>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50451" relation="include">
        </childnode>
        <childnode refid="50439" relation="include">
        </childnode>
        <childnode refid="50488" relation="include">
        </childnode>
        <childnode refid="50487" relation="include">
        </childnode>
        <childnode refid="50470" relation="include">
        </childnode>
      </node>
      <node id="50435">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="50536">
        <label>AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
        <childnode refid="50519" relation="include">
        </childnode>
        <childnode refid="50532" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
      </node>
      <node id="50528">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="50439" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
        <childnode refid="50511" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50472" relation="include">
        </childnode>
      </node>
      <node id="50454">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="50485">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="50486" relation="include">
        </childnode>
      </node>
      <node id="50491">
        <label>sys/types.h</label>
      </node>
      <node id="50526">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="50455" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50466" relation="include">
        </childnode>
      </node>
      <node id="50504">
        <label>typeinfo</label>
      </node>
      <node id="50447">
        <label>cstdio</label>
      </node>
      <node id="50540">
        <label>AMReX_BCRec.H</label>
        <link refid="AMReX__BCRec_8H"/>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50541" relation="include">
        </childnode>
      </node>
      <node id="50471">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="50472" relation="include">
        </childnode>
      </node>
      <node id="50470">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
      </node>
      <node id="50541">
        <label>AMReX_BC_TYPES.H</label>
        <link refid="AMReX__BC__TYPES_8H"/>
      </node>
      <node id="50534">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="50436" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
      </node>
      <node id="50500">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="50501" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50463" relation="include">
        </childnode>
        <childnode refid="50464" relation="include">
        </childnode>
        <childnode refid="50447" relation="include">
        </childnode>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50502" relation="include">
        </childnode>
        <childnode refid="50503" relation="include">
        </childnode>
      </node>
      <node id="50551">
        <label>AMReX_MLPoisson_3D_K.H</label>
        <link refid="AMReX__MLPoisson__3D__K_8H"/>
      </node>
      <node id="50492">
        <label>unistd.h</label>
      </node>
      <node id="50501">
        <label>stack</label>
      </node>
      <node id="50466">
        <label>vector</label>
      </node>
      <node id="50518">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50511" relation="include">
        </childnode>
        <childnode refid="50483" relation="include">
        </childnode>
      </node>
      <node id="50438">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="50439" relation="include">
        </childnode>
      </node>
      <node id="50506">
        <label>AMReX_CudaRange.H</label>
        <link refid="AMReX__CudaRange_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50487" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50471" relation="include">
        </childnode>
      </node>
      <node id="50440">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="50517">
        <label>AMReX_CudaElixir.H</label>
        <link refid="AMReX__CudaElixir_8H"/>
        <childnode refid="50473" relation="include">
        </childnode>
      </node>
      <node id="50463">
        <label>utility</label>
      </node>
      <node id="50451">
        <label>array</label>
      </node>
      <node id="50519">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50516" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
        <childnode refid="50489" relation="include">
        </childnode>
        <childnode refid="50463" relation="include">
        </childnode>
        <childnode refid="50466" relation="include">
        </childnode>
        <childnode refid="50460" relation="include">
        </childnode>
        <childnode refid="50479" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50439" relation="include">
        </childnode>
        <childnode refid="50494" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50518" relation="include">
        </childnode>
        <childnode refid="50496" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
        <childnode refid="50488" relation="include">
        </childnode>
        <childnode refid="50441" relation="include">
        </childnode>
        <childnode refid="50481" relation="include">
        </childnode>
        <childnode refid="50526" relation="include">
        </childnode>
        <childnode refid="50511" relation="include">
        </childnode>
        <childnode refid="50527" relation="include">
        </childnode>
        <childnode refid="50529" relation="include">
        </childnode>
        <childnode refid="50483" relation="include">
        </childnode>
        <childnode refid="50471" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50475" relation="include">
        </childnode>
        <childnode refid="50484" relation="include">
        </childnode>
        <childnode refid="50531" relation="include">
        </childnode>
      </node>
      <node id="50448">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50475" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50518" relation="include">
        </childnode>
        <childnode refid="50457" relation="include">
        </childnode>
      </node>
      <node id="50464">
        <label>sstream</label>
      </node>
      <node id="50532">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="50519" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50511" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
      </node>
      <node id="50431">
        <label>AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="50432" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
      </node>
      <node id="50442">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="50443" relation="include">
        </childnode>
      </node>
      <node id="50514">
        <label>AMReX_CudaAsyncFab.H</label>
        <link refid="AMReX__CudaAsyncFab_8H"/>
        <childnode refid="50462" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
      </node>
      <node id="50497">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="50441" relation="include">
        </childnode>
        <childnode refid="50498" relation="include">
        </childnode>
        <childnode refid="50500" relation="include">
        </childnode>
        <childnode refid="50481" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50466" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50504" relation="include">
        </childnode>
        <childnode refid="50460" relation="include">
        </childnode>
        <childnode refid="50445" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
        <childnode refid="50505" relation="include">
        </childnode>
      </node>
      <node id="50488">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50446" relation="include">
        </childnode>
        <childnode refid="50489" relation="include">
        </childnode>
        <childnode refid="50490" relation="include">
        </childnode>
        <childnode refid="50472" relation="include">
        </childnode>
        <childnode refid="50491" relation="include">
        </childnode>
        <childnode refid="50492" relation="include">
        </childnode>
        <childnode refid="50493" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50494" relation="include">
        </childnode>
        <childnode refid="50496" relation="include">
        </childnode>
        <childnode refid="50497" relation="include">
        </childnode>
      </node>
      <node id="50473">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50474" relation="include">
        </childnode>
      </node>
      <node id="50468">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50440" relation="include">
        </childnode>
      </node>
      <node id="50469">
        <label>AMReX_CudaMemory.H</label>
        <link refid="AMReX__CudaMemory_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50470" relation="include">
        </childnode>
        <childnode refid="50471" relation="include">
        </childnode>
        <childnode refid="50473" relation="include">
        </childnode>
        <childnode refid="50456" relation="include">
        </childnode>
      </node>
      <node id="50493">
        <label>sys/wait.h</label>
      </node>
      <node id="50450">
        <label>iosfwd</label>
      </node>
      <node id="50456">
        <label>cstdlib</label>
      </node>
      <node id="50503">
        <label>cfenv</label>
      </node>
      <node id="50444">
        <label>iostream</label>
      </node>
      <node id="50467">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50441" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
      </node>
      <node id="50533">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="50494" relation="include">
        </childnode>
        <childnode refid="50534" relation="include">
        </childnode>
      </node>
      <node id="50474">
        <label>cstddef</label>
      </node>
      <node id="50495">
        <label>unordered_map</label>
      </node>
      <node id="50520">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50467" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
        <childnode refid="50476" relation="include">
        </childnode>
      </node>
      <node id="50484">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50470" relation="include">
        </childnode>
        <childnode refid="50485" relation="include">
        </childnode>
        <childnode refid="50487" relation="include">
        </childnode>
        <childnode refid="50469" relation="include">
        </childnode>
        <childnode refid="50506" relation="include">
        </childnode>
        <childnode refid="50508" relation="include">
        </childnode>
        <childnode refid="50509" relation="include">
        </childnode>
        <childnode refid="50507" relation="include">
        </childnode>
        <childnode refid="50510" relation="include">
        </childnode>
        <childnode refid="50513" relation="include">
        </childnode>
        <childnode refid="50514" relation="include">
        </childnode>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50517" relation="include">
        </childnode>
      </node>
      <node id="50459">
        <label>climits</label>
      </node>
      <node id="50537">
        <label>AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50475" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
      </node>
      <node id="50480">
        <label>mutex</label>
      </node>
      <node id="50490">
        <label>chrono</label>
      </node>
      <node id="50502">
        <label>csignal</label>
      </node>
      <node id="50486">
        <label>AMReX_CudaLaunch.H</label>
        <link refid="AMReX__CudaLaunch_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50470" relation="include">
        </childnode>
        <childnode refid="50487" relation="include">
        </childnode>
        <childnode refid="50506" relation="include">
        </childnode>
        <childnode refid="50507" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50454" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50471" relation="include">
        </childnode>
        <childnode refid="50474" relation="include">
        </childnode>
        <childnode refid="50458" relation="include">
        </childnode>
      </node>
      <node id="50544">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="50545" relation="include">
        </childnode>
        <childnode refid="50519" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
      </node>
      <node id="50545">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="50475" relation="include">
        </childnode>
        <childnode refid="50448" relation="include">
        </childnode>
      </node>
      <node id="50478">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="50474" relation="include">
        </childnode>
        <childnode refid="50479" relation="include">
        </childnode>
        <childnode refid="50466" relation="include">
        </childnode>
        <childnode refid="50480" relation="include">
        </childnode>
        <childnode refid="50473" relation="include">
        </childnode>
      </node>
      <node id="50472">
        <label>type_traits</label>
      </node>
      <node id="50479">
        <label>set</label>
      </node>
      <node id="50477">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="50473" relation="include">
        </childnode>
      </node>
      <node id="50441">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="50549">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="50450" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50438" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
      </node>
      <node id="50550">
        <label>AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="50448" relation="include">
        </childnode>
        <childnode refid="50551" relation="include">
        </childnode>
      </node>
      <node id="50460">
        <label>algorithm</label>
      </node>
      <node id="50547">
        <label>AMReX_LO_BCTYPES.H</label>
        <link refid="AMReX__LO__BCTYPES_8H"/>
      </node>
      <node id="50516">
        <label>cstring</label>
      </node>
      <node id="50524">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="50474" relation="include">
        </childnode>
        <childnode refid="50456" relation="include">
        </childnode>
        <childnode refid="50516" relation="include">
        </childnode>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50457" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50435" relation="include">
        </childnode>
        <childnode refid="50466" relation="include">
        </childnode>
        <childnode refid="50525" relation="include">
        </childnode>
        <childnode refid="50455" relation="include">
        </childnode>
      </node>
      <node id="50522">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50465" relation="include">
        </childnode>
        <childnode refid="50449" relation="include">
        </childnode>
      </node>
      <node id="50462">
        <label>memory</label>
      </node>
      <node id="50508">
        <label>AMReX_CudaUtility.H</label>
        <link refid="AMReX__CudaUtility_8H"/>
        <childnode refid="50440" relation="include">
        </childnode>
        <childnode refid="50507" relation="include">
        </childnode>
        <childnode refid="50454" relation="include">
        </childnode>
        <childnode refid="50453" relation="include">
        </childnode>
        <childnode refid="50461" relation="include">
        </childnode>
        <childnode refid="50444" relation="include">
        </childnode>
        <childnode refid="50457" relation="include">
        </childnode>
      </node>
      <node id="50453">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="50454" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLPoisson_8H" kindref="compound">AMReX_MLPoisson.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLPoisson__K_8H" kindref="compound">AMReX_MLPoisson_K.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MLALaplacian_8H" kindref="compound">AMReX_MLALaplacian.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1a3e8ed940378c7fc487e216ffe6c82c1e" kindref="member">MLPoisson::MLPoisson</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;&amp;<sp/>a_geom,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;BoxArray&gt;&amp;<sp/>a_grids,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;DistributionMapping&gt;&amp;<sp/>a_dmap,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LPInfo&amp;<sp/>a_info,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;FabFactory&lt;FArrayBox&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*&gt;&amp;<sp/>a_factory)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLPoisson_1ab38a9974bd7443d8f8ff6578cd2a4638" kindref="member">define</ref>(a_geom,<sp/>a_grids,<sp/>a_dmap,<sp/>a_info,<sp/>a_factory);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1ab38a9974bd7443d8f8ff6578cd2a4638" kindref="member">MLPoisson::define</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Geometry&gt;&amp;<sp/>a_geom,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;BoxArray&gt;&amp;<sp/>a_grids,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;DistributionMapping&gt;&amp;<sp/>a_dmap,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LPInfo&amp;<sp/>a_info,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;FabFactory&lt;FArrayBox&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*&gt;&amp;<sp/>a_factory)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLPoisson::define()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLCellABecLap_1a93dbbb7204ba78212d8891ab72cb8491" kindref="member">MLCellABecLap::define</ref>(a_geom,<sp/>a_grids,<sp/>a_dmap,<sp/>a_info,<sp/>a_factory);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1aa6be26cbc36200cddc21f42d00de1483" kindref="member">MLPoisson::~MLPoisson</ref><sp/>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1ae640f7b961f96991b1510f316e512cd5" kindref="member">MLPoisson::prepareForSolve</ref><sp/>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLPoisson::prepareForSolve()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLCellABecLap_1a7d6d2646e9f6afaf7ed70bf0c86fa762" kindref="member">MLCellABecLap::prepareForSolve</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLPoisson_1afffef821b522beac6e041bd1f4ca424f" kindref="member">m_is_singular</ref>.clear();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLPoisson_1afffef821b522beac6e041bd1f4ca424f" kindref="member">m_is_singular</ref>.resize(<ref refid="classamrex_1_1MLLinOp_1ad6bbf49c1bdb88256721471b22b4b044" kindref="member">m_num_amr_levels</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itlo<sp/>=<sp/>std::find(<ref refid="classamrex_1_1MLLinOp_1a43d529fe1b438af26fbc4a2e9c935549" kindref="member">m_lobc</ref>.begin(),<sp/><ref refid="classamrex_1_1MLLinOp_1a43d529fe1b438af26fbc4a2e9c935549" kindref="member">m_lobc</ref>.end(),<sp/>BCType::Dirichlet);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ithi<sp/>=<sp/>std::find(<ref refid="classamrex_1_1MLLinOp_1ab46e1fbe510eaa6df03a326e2b156eca" kindref="member">m_hibc</ref>.begin(),<sp/><ref refid="classamrex_1_1MLLinOp_1ab46e1fbe510eaa6df03a326e2b156eca" kindref="member">m_hibc</ref>.end(),<sp/>BCType::Dirichlet);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itlo<sp/>==<sp/><ref refid="classamrex_1_1MLLinOp_1a43d529fe1b438af26fbc4a2e9c935549" kindref="member">m_lobc</ref>.end()<sp/>&amp;&amp;<sp/>ithi<sp/>==<sp/><ref refid="classamrex_1_1MLLinOp_1ab46e1fbe510eaa6df03a326e2b156eca" kindref="member">m_hibc</ref>.end())</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>Dirichlet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alev<sp/>=<sp/>0;<sp/>alev<sp/>&lt;<sp/><ref refid="classamrex_1_1MLLinOp_1ad6bbf49c1bdb88256721471b22b4b044" kindref="member">m_num_amr_levels</ref>;<sp/>++alev)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MLLinOp_1aaba23614888f937956554945e6a2a5a0" kindref="member">m_domain_covered</ref>[alev])</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MLPoisson_1afffef821b522beac6e041bd1f4ca424f" kindref="member">m_is_singular</ref>[alev]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1ad78c01e1850beddb4865894d4219c69c" kindref="member">MLPoisson::Fapply</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev,<sp/>MultiFab&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>in)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLPoisson::Fapply()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dxinv<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].InvCellSize();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhx<sp/>=<sp/>dxinv[0]*dxinv[0];,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhy<sp/>=<sp/>dxinv[1]*dxinv[1];,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhz<sp/>=<sp/>dxinv[2]*dxinv[2];);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(out,<sp/><ref refid="namespaceamrex_1ab3991c1600b4dee3ed881f334007323a" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>xfab<sp/>=<sp/>in.array(mfi);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>yfab<sp/>=<sp/>out.array(mfi);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(bx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae2db50870cf2b90af8605b5fc56fabc6" kindref="member">mlpoisson_adotx</ref>(i,<sp/>j,<sp/>k,<sp/>yfab,<sp/>xfab,<sp/>dhx,<sp/>dhy,<sp/>dhz);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mfac<sp/>=<sp/>*<ref refid="classamrex_1_1MLCellLinOp_1ab30431ff6f504a76193196e89ac3ad24" kindref="member">m_metric_factor</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>re<sp/>=<sp/>mfac.cellEdges(mfi);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_re(re.data(),<sp/>re.size());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rep<sp/>=<sp/>aa_re.data();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rlo<sp/>=<sp/>mfi.validbox().smallEnd(0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rc<sp/>=<sp/>mfac.cellCenters(mfi);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_rc(rc.data(),<sp/>rc.size());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rcp<sp/>=<sp/>aa_rc.data();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(bx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae2db50870cf2b90af8605b5fc56fabc6" kindref="member">mlpoisson_adotx</ref>(i,<sp/>j,<sp/>k,<sp/>yfab,<sp/>xfab,<sp/>dhx,<sp/>dhy,<sp/>rcp,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1af98b03b7b3a87691d2e944fcd96c5a84" kindref="member">AMREX_HOST_DEVICE_FOR_3D</ref><sp/>(bx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae2db50870cf2b90af8605b5fc56fabc6" kindref="member">mlpoisson_adotx</ref>(i,<sp/>j,<sp/>k,<sp/>yfab,<sp/>xfab,<sp/>dhx,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1aa31608deee2579be5cb3e852b7923c6c" kindref="member">MLPoisson::normalize</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev,<sp/>MultiFab&amp;<sp/>mf)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="106"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>!=<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLPoisson::normalize()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dxinv<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].InvCellSize();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhx<sp/>=<sp/>dxinv[0]*dxinv[0];,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhy<sp/>=<sp/>dxinv[1]*dxinv[1];,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhz<sp/>=<sp/>dxinv[2]*dxinv[2];);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(mf,<sp/><ref refid="namespaceamrex_1ab3991c1600b4dee3ed881f334007323a" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>mf.array(mfi);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mfac<sp/>=<sp/>*<ref refid="classamrex_1_1MLCellLinOp_1ab30431ff6f504a76193196e89ac3ad24" kindref="member">m_metric_factor</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>re<sp/>=<sp/>mfac.cellEdges(mfi);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_re(re.data(),<sp/>re.size());</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rep<sp/>=<sp/>aa_re.data();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rlo<sp/>=<sp/>mfi.validbox().smallEnd(0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rc<sp/>=<sp/>mfac.cellCenters(mfi);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_rc(rc.data(),<sp/>rc.size());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rcp<sp/>=<sp/>aa_rc.data();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bx,<sp/>thread_box,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1acf350a280d981149be0e27c7682f5eef" kindref="member">mlpoisson_normalize</ref>(thread_box,<sp/>fab,<sp/>rcp,<sp/>rep,<sp/>rlo,<sp/>dhx,<sp/>dhy);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bx,<sp/>thread_box,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1acf350a280d981149be0e27c7682f5eef" kindref="member">mlpoisson_normalize</ref>(thread_box,<sp/>fab,<sp/>rep,<sp/>rlo,<sp/>dhx);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1ac7003cbbc3ecd68a3cb584632da18dda" kindref="member">MLPoisson::Fsmooth</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev,<sp/>MultiFab&amp;<sp/>sol,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>redblack)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="149"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLPoisson::Fsmooth()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>undrrelxr<sp/>=<sp/><ref refid="classamrex_1_1MLCellLinOp_1a2ffd8d47358983d3c013b8012eeb1b8e" kindref="member">m_undrrelxr</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>maskvals<sp/><sp/>=<sp/><ref refid="classamrex_1_1MLCellLinOp_1af7504eedbd467f1237874cbc10dd6d39" kindref="member">m_maskvals</ref><sp/>[amrlev][mglev];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>OrientationIter<sp/>oitr;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f0<sp/>=<sp/>undrrelxr[oitr()];<sp/>++oitr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f1<sp/>=<sp/>undrrelxr[oitr()];<sp/>++oitr;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f2<sp/>=<sp/>undrrelxr[oitr()];<sp/>++oitr;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f3<sp/>=<sp/>undrrelxr[oitr()];<sp/>++oitr;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f4<sp/>=<sp/>undrrelxr[oitr()];<sp/>++oitr;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>f5<sp/>=<sp/>undrrelxr[oitr()];<sp/>++oitr;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm0<sp/>=<sp/>maskvals[0];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm1<sp/>=<sp/>maskvals[1];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm2<sp/>=<sp/>maskvals[2];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm3<sp/>=<sp/>maskvals[3];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm4<sp/>=<sp/>maskvals[4];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>mm5<sp/>=<sp/>maskvals[5];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dxinv<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].InvCellSize();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhx<sp/>=<sp/>dxinv[0]*dxinv[0];,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhy<sp/>=<sp/>dxinv[1]*dxinv[1];,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>dhz<sp/>=<sp/>dxinv[2]*dxinv[2];);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>MFItInfo<sp/>mfi_info;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Cuda_1a0ede47532d20f65dcdd0e43d112a75f6" kindref="member">Gpu::notInLaunchRegion</ref>())<sp/>mfi_info.EnableTiling().SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(sol,mfi_info);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m0<sp/>=<sp/>mm0.array(mfi);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m1<sp/>=<sp/>mm1.array(mfi);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m2<sp/>=<sp/>mm2.array(mfi);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m3<sp/>=<sp/>mm3.array(mfi);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m4<sp/>=<sp/>mm4.array(mfi);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m5<sp/>=<sp/>mm5.array(mfi);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tbx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>vbx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>solnfab<sp/>=<sp/>sol.array(mfi);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rhsfab<sp/><sp/>=<sp/>rhs.array(mfi);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f0fab<sp/>=<sp/>f0.array(mfi);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f1fab<sp/>=<sp/>f1.array(mfi);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f2fab<sp/>=<sp/>f2.array(mfi);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f3fab<sp/>=<sp/>f3.array(mfi);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f4fab<sp/>=<sp/>f4.array(mfi);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f5fab<sp/>=<sp/>f5.array(mfi);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>!=<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mfac<sp/>=<sp/>*<ref refid="classamrex_1_1MLCellLinOp_1ab30431ff6f504a76193196e89ac3ad24" kindref="member">m_metric_factor</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>re<sp/>=<sp/>mfac.cellEdges(mfi);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_re(re.data(),<sp/>re.size());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rep<sp/>=<sp/>aa_re.data();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rlo<sp/>=<sp/>mfi.validbox().smallEnd(0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>tbx,<sp/>thread_box,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae6ee0a5b6c423267768d12db024c8a73" kindref="member">mlpoisson_gsrb</ref>(thread_box,<sp/>solnfab,<sp/>rhsfab,<sp/>dhx,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab,<sp/>m0,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab,<sp/>m1,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx,<sp/>redblack,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rc<sp/>=<sp/>mfac.cellCenters(mfi);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_rc(rc.data(),<sp/>rc.size());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rcp<sp/>=<sp/>aa_rc.data();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>tbx,<sp/>thread_box,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae6ee0a5b6c423267768d12db024c8a73" kindref="member">mlpoisson_gsrb</ref>(thread_box,<sp/>solnfab,<sp/>rhsfab,<sp/>dhx,<sp/>dhy,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab,<sp/>m0,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab,<sp/>m1,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2fab,<sp/>m2,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f3fab,<sp/>m3,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx,<sp/>redblack,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rcp,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>tbx,<sp/>thread_box,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae6ee0a5b6c423267768d12db024c8a73" kindref="member">mlpoisson_gsrb</ref>(thread_box,<sp/>solnfab,<sp/>rhsfab,<sp/>dhx,<sp/>dhy,<sp/>dhz,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f0fab,<sp/>m0,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1fab,<sp/>m1,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2fab,<sp/>m2,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f3fab,<sp/>m3,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f4fab,<sp/>m4,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f5fab,<sp/>m5,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx,<sp/>redblack);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1a44c5dac7fa58106491ed7cdf0b642aba" kindref="member">MLPoisson::FFlux</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amrlev,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MFIter&amp;<sp/>mfi,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;FArrayBox*,AMREX_SPACEDIM&gt;&amp;<sp/>flux,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>sol,<sp/><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">Location</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face_only)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="274"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;MLPoisson::FFlux()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mglev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>box<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dxinv<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[amrlev][mglev].InvCellSize();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fxarr<sp/>=<sp/>flux[0]-&gt;array();,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fyarr<sp/>=<sp/>flux[1]-&gt;array();,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fzarr<sp/>=<sp/>flux[2]-&gt;array(););</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>solarr<sp/>=<sp/>sol.array();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>!=<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mfac<sp/>=<sp/>*<ref refid="classamrex_1_1MLCellLinOp_1ab30431ff6f504a76193196e89ac3ad24" kindref="member">m_metric_factor</ref>[amrlev][mglev];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>re<sp/>=<sp/>mfac.cellEdges(mfi);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_re(re.data(),<sp/>re.size());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rep<sp/>=<sp/>aa_re.data();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rlo<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1a3f9b0a7c3a91ca7e13664dbfe7115eed" kindref="member">m_grids</ref>[amrlev][mglev][mfi].smallEnd(0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rc<sp/>=<sp/>mfac.cellCenters(mfi);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>AsyncArray&lt;Real&gt;<sp/>aa_rc(rc.data(),<sp/>rc.size());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>rcp<sp/>=<sp/>aa_rc.data();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face_only)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>blo<sp/>=<sp/><ref refid="namespaceamrex_1ad6d03c8a6f99b2adaa3b6c0413aa57ce" kindref="member">amrex::bdryLo</ref>(box,<sp/>0);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen<sp/>=<sp/>box.length(0);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>blo,<sp/>tbox,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5e4e6d376c8a171202450a3d249078b1" kindref="member">mlpoisson_flux_xface</ref>(tbox,<sp/>fxarr,<sp/>solarr,<sp/>fac,<sp/>blen);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>dxinv[1];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo<sp/>=<sp/><ref refid="namespaceamrex_1ad6d03c8a6f99b2adaa3b6c0413aa57ce" kindref="member">amrex::bdryLo</ref>(box,<sp/>1);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blen<sp/>=<sp/>box.length(1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>blo,<sp/>tbox,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1abcad46900352493d447f45947504af75" kindref="member">mlpoisson_flux_yface</ref>(tbox,<sp/>fyarr,<sp/>solarr,<sp/>fac,<sp/>blen);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>dxinv[2];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo<sp/>=<sp/><ref refid="namespaceamrex_1ad6d03c8a6f99b2adaa3b6c0413aa57ce" kindref="member">amrex::bdryLo</ref>(box,<sp/>2);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blen<sp/>=<sp/>box.length(2);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>blo,<sp/>tbox,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ade7d9c173e20e67a7b52b4c065112d0c" kindref="member">mlpoisson_flux_zface</ref>(tbox,<sp/>fzarr,<sp/>solarr,<sp/>fac,<sp/>blen);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>bflux<sp/>=<sp/><ref refid="namespaceamrex_1ac580e8e50d0b0db148206dcf35c9df1a" kindref="member">amrex::surroundingNodes</ref>(box,<sp/>0);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bflux,<sp/>tbox,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4270d6173de9971d5d0aac54ae3574ac" kindref="member">mlpoisson_flux_x</ref>(tbox,<sp/>fxarr,<sp/>solarr,<sp/>fac);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>dxinv[1];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bflux<sp/>=<sp/><ref refid="namespaceamrex_1ac580e8e50d0b0db148206dcf35c9df1a" kindref="member">amrex::surroundingNodes</ref>(box,<sp/>1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bflux,<sp/>tbox,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aab621a45ee6720fbc043b616cd1d8029" kindref="member">mlpoisson_flux_y</ref>(tbox,<sp/>fyarr,<sp/>solarr,<sp/>fac);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>dxinv[2];</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bflux<sp/>=<sp/><ref refid="namespaceamrex_1ac580e8e50d0b0db148206dcf35c9df1a" kindref="member">amrex::surroundingNodes</ref>(box,<sp/>2);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bflux,<sp/>tbox,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1af2cd658eb9fc5ac7c9742500abe33db5" kindref="member">mlpoisson_flux_z</ref>(tbox,<sp/>fzarr,<sp/>solarr,<sp/>fac);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face_only)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>blo<sp/>=<sp/><ref refid="namespaceamrex_1ad6d03c8a6f99b2adaa3b6c0413aa57ce" kindref="member">amrex::bdryLo</ref>(box,<sp/>0);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen<sp/>=<sp/>box.length(0);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>blo,<sp/>tbox,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5e4e6d376c8a171202450a3d249078b1" kindref="member">mlpoisson_flux_xface</ref>(tbox,<sp/>fxarr,<sp/>solarr,<sp/>fac,<sp/>blen,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>dxinv[1];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo<sp/>=<sp/><ref refid="namespaceamrex_1ad6d03c8a6f99b2adaa3b6c0413aa57ce" kindref="member">amrex::bdryLo</ref>(box,<sp/>1);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blen<sp/>=<sp/>box.length(1);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>blo,<sp/>tbox,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1abcad46900352493d447f45947504af75" kindref="member">mlpoisson_flux_yface</ref>(tbox,<sp/>fyarr,<sp/>solarr,<sp/>fac,<sp/>blen,<sp/>rcp,<sp/>rlo);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>bflux<sp/>=<sp/><ref refid="namespaceamrex_1ac580e8e50d0b0db148206dcf35c9df1a" kindref="member">amrex::surroundingNodes</ref>(box,<sp/>0);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bflux,<sp/>tbox,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4270d6173de9971d5d0aac54ae3574ac" kindref="member">mlpoisson_flux_x</ref>(tbox,<sp/>fxarr,<sp/>solarr,<sp/>fac,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fac<sp/>=<sp/>dxinv[1];</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bflux<sp/>=<sp/><ref refid="namespaceamrex_1ac580e8e50d0b0db148206dcf35c9df1a" kindref="member">amrex::surroundingNodes</ref>(box,<sp/>1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bflux,<sp/>tbox,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aab621a45ee6720fbc043b616cd1d8029" kindref="member">mlpoisson_flux_y</ref>(tbox,<sp/>fyarr,<sp/>solarr,<sp/>fac,<sp/>rcp,<sp/>rlo);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face_only)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>blo<sp/>=<sp/><ref refid="namespaceamrex_1ad6d03c8a6f99b2adaa3b6c0413aa57ce" kindref="member">amrex::bdryLo</ref>(box,<sp/>0);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blen<sp/>=<sp/>box.length(0);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>blo,<sp/>tbox,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a5e4e6d376c8a171202450a3d249078b1" kindref="member">mlpoisson_flux_xface</ref>(tbox,<sp/>fxarr,<sp/>solarr,<sp/>fac,<sp/>blen,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>fac<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>bflux<sp/>=<sp/><ref refid="namespaceamrex_1ac580e8e50d0b0db148206dcf35c9df1a" kindref="member">amrex::surroundingNodes</ref>(box,<sp/>0);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a20fce791cf3cebcb24e689bb5da837c0" kindref="member">AMREX_LAUNCH_HOST_DEVICE_LAMBDA</ref><sp/>(<sp/>bflux,<sp/>tbox,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4270d6173de9971d5d0aac54ae3574ac" kindref="member">mlpoisson_flux_x</ref>(tbox,<sp/>fxarr,<sp/>solarr,<sp/>fac,<sp/>rep,<sp/>rlo);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">std::unique_ptr&lt;MLLinOp&gt;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><ref refid="classamrex_1_1MLPoisson_1a891410ecae52b84ce7bd4177f3c645f8" kindref="member">MLPoisson::makeNLinOp</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_size)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="394"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;<sp/>geom<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[0].back();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba<sp/>=<sp/><ref refid="classamrex_1_1MLCellLinOp_1acb33b0d3e94547e5e0529af6c1cb3d68" kindref="member">makeNGrids</ref>(grid_size);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>DistributionMapping<sp/>dm;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>sfc<sp/>=<sp/><ref refid="classamrex_1_1DistributionMapping_1aa07e2c79e1100575a40bdb8c2b3efe03" kindref="member">DistributionMapping::makeSFC</ref>(ba);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector&lt;int&gt;<sp/>pmap(ba.size());</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1abd471ebf6086189835e778f06c053833" kindref="member">AMREX_ALWAYS_ASSERT</ref>(<ref refid="namespaceamrex_1_1ParallelContext_1afb1955e0ab6b3f188007ad3aa5a4ef8a" kindref="member">ParallelContext::CommunicatorSub</ref>()<sp/>==<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1adead000c5181a8d08b2031ccbf2198ea" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0455b3ad4f2a4c13b57d33e4c6325dca" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iproc<sp/>=<sp/>0;<sp/>iproc<sp/>&lt;<sp/>nprocs;<sp/>++iproc)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ibox<sp/>:<sp/>sfc[iproc])<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmap[ibox]<sp/>=<sp/>iproc;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dm.define(std::move(pmap));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>LPInfo<sp/>minfo{};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>minfo.has_metric_term<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1a85fa2f104bbfeaa73d55d589906ecd45" kindref="member">info</ref>.<ref refid="structamrex_1_1LPInfo_1a1a95ec842c01374719d2b8929d54f17b" kindref="member">has_metric_term</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;MLLinOp&gt;<sp/>r{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MLALaplacian({geom},<sp/>{ba},<sp/>{dm},<sp/>minfo)};</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>MLALaplacian*<sp/>nop<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">MLALaplacian*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(r.get());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>nop-&gt;m_parent<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>nop-&gt;setMaxOrder(<ref refid="classamrex_1_1MLLinOp_1ac516dba583aede117f89e339423f6114" kindref="member">maxorder</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>nop-&gt;setVerbose(<ref refid="classamrex_1_1MLLinOp_1a0815357130e78962e01abdaba2b09c21" kindref="member">verbose</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>nop-&gt;setDomainBC(<ref refid="classamrex_1_1MLLinOp_1a43d529fe1b438af26fbc4a2e9c935549" kindref="member">m_lobc</ref>,<sp/><ref refid="classamrex_1_1MLLinOp_1ab46e1fbe510eaa6df03a326e2b156eca" kindref="member">m_hibc</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MLLinOp_1a2eae47420a806a218f08fbcfb2ce7eab" kindref="member">needsCoarseDataForBC</ref>())</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dx0<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1ab16551403ee1629e20ed6e6d9d4f680c" kindref="member">m_geom</ref>[0][0].CellSize();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>fac<sp/>=<sp/>0.5*<ref refid="classamrex_1_1MLLinOp_1a1ca01453776c12e634debdc6d09206c3" kindref="member">m_coarse_data_crse_ratio</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealVect<sp/>cbloc<sp/>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(dx0[0]*fac,<sp/>dx0[1]*fac,<sp/>dx0[2]*fac)};</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nop-&gt;setCoarseFineBCLocation(cbloc);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>nop-&gt;setScalars(1.0,<sp/>-1.0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>myba<sp/>=<sp/><ref refid="classamrex_1_1MLLinOp_1a3f9b0a7c3a91ca7e13664dbfe7115eed" kindref="member">m_grids</ref>[0].back();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>dxinv<sp/>=<sp/>geom.InvCellSize();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>dxscale<sp/>=<sp/>dxinv[0];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>dxscale<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(dxscale,dxinv[1]);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>dxscale<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(dxscale,dxinv[2]);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiFab<sp/>alpha(ba,<sp/>dm,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha.setVal(1.e30*dxscale*dxscale);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;int,Box&gt;<sp/>&gt;<sp/>isects;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(alpha,<sp/>MFItInfo().SetDynamic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/>fab<sp/>=<sp/>alpha[mfi];</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myba.intersections(fab.box(),<sp/>isects);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>is<sp/>:<sp/>isects)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab.setVal(0.0,<sp/>is.second,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>nop-&gt;setACoeffs(0,<sp/>alpha);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp"/>
  </compounddef>
</doxygen>
