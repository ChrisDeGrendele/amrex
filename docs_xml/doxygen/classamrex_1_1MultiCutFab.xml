<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1MultiCutFab" kind="class" language="C++" prot="public">
    <compoundname>amrex::MultiCutFab</compoundname>
    <includes refid="AMReX__MultiCutFab_8H" local="no">AMReX_MultiCutFab.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MultiCutFab_1aa57d6c13b3ffbf9dcc2bf1d3c3496852" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &gt;</type>
        <definition>FabArray&lt;CutFab&gt; amrex::MultiCutFab::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="115" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MultiCutFab_1acf458e03eaefec6d963a0b0e3b0453da" prot="private" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; *</type>
        <definition>const FabArray&lt;EBCellFlagFab&gt;* amrex::MultiCutFab::m_cellflags</definition>
        <argsstring></argsstring>
        <name>m_cellflags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="116" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a6e72abb71404d338b7ddc2570277c430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>()</argsstring>
        <name>MultiCutFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="77" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1aaaef2d8067b4e79d9e8b222d82fffe3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp, int ngrow, const FabArray&lt; EBCellFlagFab &gt; &amp;cellflags)</argsstring>
        <name>MultiCutFab</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
          <declname>cellflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="79" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ab4e7bba2a1d004437f5175e6fba94282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::~MultiCutFab</definition>
        <argsstring>()</argsstring>
        <name>~MultiCutFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="82" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a791ee981722de3ea8241d09f96653a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>(MultiCutFab &amp;&amp;rhs) noexcept=default</argsstring>
        <name>MultiCutFab</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a13683ad147676d968ba83b1c7a1ce09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MultiCutFab::MultiCutFab</definition>
        <argsstring>(const MultiCutFab &amp;rhs)=delete</argsstring>
        <name>MultiCutFab</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a933d522f37c305e1517c6b3b09248254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>MultiCutFab&amp; amrex::MultiCutFab::operator=</definition>
        <argsstring>(const MultiCutFab &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a5d048b1c459102c5f3f038147a171ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>MultiCutFab&amp; amrex::MultiCutFab::operator=</definition>
        <argsstring>(MultiCutFab &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1aa7ea55e7f0a58e0f3b37dd08b3a337eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::define</definition>
        <argsstring>(const BoxArray &amp;ba, const DistributionMapping &amp;dm, int ncomp, int ngrow, const FabArray&lt; EBCellFlagFab &gt; &amp;cellflags)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
          <declname>cellflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="90" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a6a4729f6d507acb47f5f37629862b4f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &amp;</type>
        <definition>const CutFab &amp; amrex::MultiCutFab::operator[]</definition>
        <argsstring>(const MFIter &amp;mfi) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="93" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a7c82c519c08df03d6d10b962d6ff13f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &amp;</type>
        <definition>CutFab &amp; amrex::MultiCutFab::operator[]</definition>
        <argsstring>(const MFIter &amp;mfi)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="94" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ae2f5bcb6179c212bdf93509661e8fa5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::MultiCutFab::ok</definition>
        <argsstring>(const MFIter &amp;mfi) const </argsstring>
        <name>ok</name>
        <param>
          <type>const <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> &amp;</type>
          <declname>mfi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a22eb86768e17886d036bc065094ce343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::setVal</definition>
        <argsstring>(Real val)</argsstring>
        <name>setVal</name>
        <param>
          <type>Real</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="98" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="69" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a347c9dba031b96d34f5bbc6d5b964e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &gt; &amp;</type>
        <definition>FabArray&lt;CutFab&gt;&amp; amrex::MultiCutFab::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="100" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a6c900bdeded1ebb9792e4efc2d9e32a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1CutFab" kindref="compound">CutFab</ref> &gt; &amp;</type>
        <definition>const FabArray&lt;CutFab&gt;&amp; amrex::MultiCutFab::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1ae48388571f8a8f68af37efb85779dafd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
        <definition>const BoxArray&amp; amrex::MultiCutFab::boxArray</definition>
        <argsstring>() const </argsstring>
        <name>boxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="103" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1aae94bd16469370f83d5dbde9340deb7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping&amp; amrex::MultiCutFab::DistributionMap</definition>
        <argsstring>() const </argsstring>
        <name>DistributionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="104" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a7e2fe811a1927c9cb1be0efd5d665075" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MultiCutFab::nComp</definition>
        <argsstring>() const </argsstring>
        <name>nComp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="105" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1abafcc977274c0ceec72bdb57ec1448f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MultiCutFab::nGrow</definition>
        <argsstring>() const </argsstring>
        <name>nGrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="106" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1a212f1455dd8018d3cd773107db0df62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::ParallelCopy</definition>
        <argsstring>(const MultiCutFab &amp;src, int scomp, int dcomp, int ncomp, int sng, int dng, const Periodicity &amp;period=Periodicity::NonPeriodic())</argsstring>
        <name>ParallelCopy</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sng</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dng</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Periodicity" kindref="compound">Periodicity</ref> &amp;</type>
          <declname>period</declname>
          <defval><ref refid="classamrex_1_1Periodicity_1a38c75cba56d022201b4e1970534d5823" kindref="member">Periodicity::NonPeriodic</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="108" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1af6ca6c7baf1040f4b780749cda39cada" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::MultiCutFab::ToMultiFab</definition>
        <argsstring>(Real regular_value, Real covered_value) const </argsstring>
        <name>ToMultiFab</name>
        <param>
          <type>Real</type>
          <declname>regular_value</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>covered_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="111" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="89" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MultiCutFab_1abc1b348b3856266730d542e9148a6b31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MultiCutFab::remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="118" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp" bodystart="35" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4242">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="4225">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="4226" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="4229">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="4228">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="4228" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4243">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4244" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4230">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4226">
        <label>string</label>
      </node>
      <node id="4222">
        <label>amrex::MultiCutFab</label>
        <link refid="classamrex_1_1MultiCutFab"/>
        <childnode refid="4223" relation="usage">
          <edgelabel>m_cellflags</edgelabel>
        </childnode>
        <childnode refid="4246" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="4245">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="4228" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="4239">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="4238">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4240">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="4223">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="4224" relation="public-inheritance">
        </childnode>
        <childnode refid="4228" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="4230" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="4238" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="4240" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="4241" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="4243" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="4245" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="4244">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="4231">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="4236">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="4228" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="4237" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="4234">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="4235" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="4241">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4242" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4246">
        <label>amrex::FabArray&lt; amrex::CutFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="4224" relation="public-inheritance">
        </childnode>
        <childnode refid="4228" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="4230" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="4238" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="4240" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="4241" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="4243" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="4245" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="4237">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="4235">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="4230" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="4227">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="4232">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="4233" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="4234" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="4233">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="4224">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="4225" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="4227" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="4228" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="4229" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="4230" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="4232" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="4236" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" line="74" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H" bodystart="73" bodyend="119"/>
    <listofallmembers>
      <member refid="classamrex_1_1MultiCutFab_1ae48388571f8a8f68af37efb85779dafd" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a347c9dba031b96d34f5bbc6d5b964e3e" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>data</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a6c900bdeded1ebb9792e4efc2d9e32a7" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>data</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aa7ea55e7f0a58e0f3b37dd08b3a337eb" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>define</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aae94bd16469370f83d5dbde9340deb7c" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MultiCutFab_1acf458e03eaefec6d963a0b0e3b0453da" prot="private" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>m_cellflags</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aa57d6c13b3ffbf9dcc2bf1d3c3496852" prot="private" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>m_data</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a6e72abb71404d338b7ddc2570277c430" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1aaaef2d8067b4e79d9e8b222d82fffe3f" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a791ee981722de3ea8241d09f96653a33" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a13683ad147676d968ba83b1c7a1ce09b" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>MultiCutFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a7e2fe811a1927c9cb1be0efd5d665075" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>nComp</name></member>
      <member refid="classamrex_1_1MultiCutFab_1abafcc977274c0ceec72bdb57ec1448f0" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>nGrow</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ae2f5bcb6179c212bdf93509661e8fa5d" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>ok</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a933d522f37c305e1517c6b3b09248254" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a5d048b1c459102c5f3f038147a171ecb" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a6a4729f6d507acb47f5f37629862b4f7" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a7c82c519c08df03d6d10b962d6ff13f4" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a212f1455dd8018d3cd773107db0df62d" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>ParallelCopy</name></member>
      <member refid="classamrex_1_1MultiCutFab_1abc1b348b3856266730d542e9148a6b31" prot="private" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>remove</name></member>
      <member refid="classamrex_1_1MultiCutFab_1a22eb86768e17886d036bc065094ce343" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>setVal</name></member>
      <member refid="classamrex_1_1MultiCutFab_1af6ca6c7baf1040f4b780749cda39cada" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>ToMultiFab</name></member>
      <member refid="classamrex_1_1MultiCutFab_1ab4e7bba2a1d004437f5175e6fba94282" prot="public" virt="non-virtual"><scope>amrex::MultiCutFab</scope><name>~MultiCutFab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
