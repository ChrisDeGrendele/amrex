<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1EB2_1_1ScaleIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::ScaleIF</compoundname>
    <includes refid="AMReX__EB2__IF__Scale_8H" local="no">AMReX_EB2_IF_Scale.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ScaleIF_1a092e125d17bca6eaf36ce5f6a1228ab9" prot="protected" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::EB2::ScaleIF&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ScaleIF_1a027399cd9431951f71dbfa1ba1dcba18" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref></type>
        <definition>RealArray amrex::EB2::ScaleIF&lt; F &gt;::m_sfinv</definition>
        <argsstring></argsstring>
        <name>m_sfinv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1a62762bd802e07b5d8aa07fc8bb7d831a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ScaleIF&lt; F &gt;::ScaleIF</definition>
        <argsstring>(F &amp;&amp;a_f, const RealArray &amp;a_scalefactor)</argsstring>
        <name>ScaleIF</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>a_f</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_scalefactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="17" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1ab200f0635a84f32061f5112da672ad74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ScaleIF&lt; F &gt;::ScaleIF</definition>
        <argsstring>(F const &amp;a_f, const RealArray &amp;a_scalefactor)</argsstring>
        <name>ScaleIF</name>
        <param>
          <type>F const &amp;</type>
          <declname>a_f</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_scalefactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="23" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1a115069e4e830961ca8ef6424c3205d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ScaleIF&lt; F &gt;::~ScaleIF</definition>
        <argsstring>()</argsstring>
        <name>~ScaleIF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1a68771d5e32bbdac7a2a76e9c5fd5f468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ScaleIF&lt; F &gt;::ScaleIF</definition>
        <argsstring>(const ScaleIF &amp;rhs)=default</argsstring>
        <name>ScaleIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1ScaleIF" kindref="compound">ScaleIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1ad8ccb09585cf3742c35ad7aca5dac6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ScaleIF&lt; F &gt;::ScaleIF</definition>
        <argsstring>(ScaleIF &amp;&amp;rhs)=default</argsstring>
        <name>ScaleIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1ScaleIF" kindref="compound">ScaleIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1a06a80b138ed9e9228d5fa3c5103dc6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1ScaleIF" kindref="compound">ScaleIF</ref> &amp;</type>
        <definition>ScaleIF&amp; amrex::EB2::ScaleIF&lt; F &gt;::operator=</definition>
        <argsstring>(const ScaleIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1ScaleIF" kindref="compound">ScaleIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1ad320c9067043d441a19d5eb3197884ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1ScaleIF" kindref="compound">ScaleIF</ref> &amp;</type>
        <definition>ScaleIF&amp; amrex::EB2::ScaleIF&lt; F &gt;::operator=</definition>
        <argsstring>(ScaleIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1ScaleIF" kindref="compound">ScaleIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ScaleIF_1a9c2fea3687b301db3b16a6d6137eddee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::ScaleIF&lt; F &gt;::operator()</definition>
        <argsstring>(const RealArray &amp;p) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="37" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" line="14" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Scale.H" bodystart="13" bodyend="48"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a092e125d17bca6eaf36ce5f6a1228ab9" prot="protected" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a027399cd9431951f71dbfa1ba1dcba18" prot="protected" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>m_sfinv</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a9c2fea3687b301db3b16a6d6137eddee" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a06a80b138ed9e9228d5fa3c5103dc6b1" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1ad320c9067043d441a19d5eb3197884ef" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a62762bd802e07b5d8aa07fc8bb7d831a" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>ScaleIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1ab200f0635a84f32061f5112da672ad74" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>ScaleIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a68771d5e32bbdac7a2a76e9c5fd5f468" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>ScaleIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1ad8ccb09585cf3742c35ad7aca5dac6c5" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>ScaleIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ScaleIF_1a115069e4e830961ca8ef6424c3205d64" prot="public" virt="non-virtual"><scope>amrex::EB2::ScaleIF</scope><name>~ScaleIF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
