<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1BoundCond" kind="class" language="C++" prot="public">
    <compoundname>amrex::BoundCond</compoundname>
    <includes refid="AMReX__BoundCond_8H" local="no">AMReX_BoundCond.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1BoundCond_1ada76f23f789da2be981f0c3ec8784d34" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::BoundCond::bctype</definition>
        <argsstring></argsstring>
        <name>bctype</name>
        <briefdescription>
<para>Index of boundary condition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1BoundCond_1a1863908da3b3c5480c7b1932157bbfaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoundCond::BoundCond</definition>
        <argsstring>() noexcept</argsstring>
        <name>BoundCond</name>
        <briefdescription>
<para>Initializes boundary condition type to default. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BoundCond_1a2c853c3e4ac28879a78b0454ae018961" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoundCond::BoundCond</definition>
        <argsstring>(int _bctype) noexcept</argsstring>
        <name>BoundCond</name>
        <param>
          <type>int</type>
          <declname>_bctype</declname>
        </param>
        <briefdescription>
<para>Initializes boundary condition type to specified value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="27" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BoundCond_1a20bd9a212bbae4a52217cb546f9e752f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::BoundCond::operator int</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator int</name>
        <briefdescription>
<para>Return index of boundary condition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="31" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BoundCond_1ad4f9e03d42d0b48eab10408b3958c273" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref> &amp;</type>
        <definition>BoundCond&amp; amrex::BoundCond::operator=</definition>
        <argsstring>(const int _bctype) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const int</type>
          <declname>_bctype</declname>
        </param>
        <briefdescription>
<para>Set index of boundary condition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="38" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Maintain an identifier for boundary condition types. </para>    </briefdescription>
    <detaileddescription>
<para>This is a placeholder for more extensive boundary condition implementations, which might include stencils, etc. Presently, boundary conditions are specified via an integer identifier. This class maintains that integer. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="829">
        <label>amrex::BoundCond</label>
        <link refid="classamrex_1_1BoundCond"/>
        <childnode refid="830" relation="usage">
          <edgelabel>bctype</edgelabel>
        </childnode>
      </node>
      <node id="830">
        <label>int</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="19" bodyend="47"/>
    <listofallmembers>
      <member refid="classamrex_1_1BoundCond_1ada76f23f789da2be981f0c3ec8784d34" prot="private" virt="non-virtual"><scope>amrex::BoundCond</scope><name>bctype</name></member>
      <member refid="classamrex_1_1BoundCond_1a1863908da3b3c5480c7b1932157bbfaa" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>BoundCond</name></member>
      <member refid="classamrex_1_1BoundCond_1a2c853c3e4ac28879a78b0454ae018961" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>BoundCond</name></member>
      <member refid="classamrex_1_1BoundCond_1a20bd9a212bbae4a52217cb546f9e752f" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>operator int</name></member>
      <member refid="classamrex_1_1BoundCond_1ad4f9e03d42d0b48eab10408b3958c273" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
