<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1BoundCond" kind="class" language="C++" prot="public">
    <compoundname>amrex::BoundCond</compoundname>
    <includes refid="AMReX__BoundCond_8H" local="no">AMReX_BoundCond.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1BoundCond_1ada76f23f789da2be981f0c3ec8784d34" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::BoundCond::bctype</definition>
        <argsstring></argsstring>
        <name>bctype</name>
        <briefdescription>
<para>Index of boundary condition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="44" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1BoundCond_1aded28ccecb8dfd7f85c4719ca5e79181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoundCond::BoundCond</definition>
        <argsstring>()</argsstring>
        <name>BoundCond</name>
        <briefdescription>
<para>Initializes boundary condition type to default. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="23" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BoundCond_1ac789286260177640a95555126836a04b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoundCond::BoundCond</definition>
        <argsstring>(int _bctype)</argsstring>
        <name>BoundCond</name>
        <param>
          <type>int</type>
          <declname>_bctype</declname>
        </param>
        <briefdescription>
<para>Initializes boundary condition type to specified value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BoundCond_1a237a68fda64254742a8bdf59c338c82d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BoundCond::operator int</definition>
        <argsstring>() const </argsstring>
        <name>operator int</name>
        <briefdescription>
<para>Return index of boundary condition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="29" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1BoundCond_1a6a24bea007c9fc87af0cfec7ade7b528" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1BoundCond" kindref="compound">BoundCond</ref> &amp;</type>
        <definition>BoundCond&amp; amrex::BoundCond::operator=</definition>
        <argsstring>(const int _bctype)</argsstring>
        <name>operator=</name>
        <param>
          <type>const int</type>
          <declname>_bctype</declname>
        </param>
        <briefdescription>
<para>Set index of boundary condition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="36" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Maintain an identifier for boundary condition types. </para>    </briefdescription>
    <detaileddescription>
<para>This is a placeholder for more extensive boundary condition implementations, which might include stencils, etc. Presently, boundary conditions are specified via an integer identifier. This class maintains that integer. </para>    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BoundCond.H" bodystart="18" bodyend="45"/>
    <listofallmembers>
      <member refid="classamrex_1_1BoundCond_1ada76f23f789da2be981f0c3ec8784d34" prot="private" virt="non-virtual"><scope>amrex::BoundCond</scope><name>bctype</name></member>
      <member refid="classamrex_1_1BoundCond_1aded28ccecb8dfd7f85c4719ca5e79181" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>BoundCond</name></member>
      <member refid="classamrex_1_1BoundCond_1ac789286260177640a95555126836a04b" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>BoundCond</name></member>
      <member refid="classamrex_1_1BoundCond_1a237a68fda64254742a8bdf59c338c82d" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>operator int</name></member>
      <member refid="classamrex_1_1BoundCond_1a6a24bea007c9fc87af0cfec7ade7b528" prot="public" virt="non-virtual"><scope>amrex::BoundCond</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
