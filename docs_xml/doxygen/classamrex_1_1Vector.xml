<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Vector" kind="class" language="C++" prot="public">
    <compoundname>amrex::Vector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::vector&lt; T, Allocator &gt;</basecompoundref>
    <includes refid="AMReX__Vector_8H" local="no">AMReX_Vector.H</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval>std::allocator&lt;T&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Vector_1a35ecf9c060d9d2b8f23cf60d088f1fca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; amrex::Vector&lt; T, Allocator &gt;::operator[]</definition>
        <argsstring>(std::size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Vector_1aac30959865d72ba3dc544400dae61abe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; amrex::Vector&lt; T, Allocator &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" line="43" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Vector_1a314a950b356fb444c94b9f615ba0cd72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* amrex::Vector&lt; T, Allocator &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <briefdescription>
<para>get access to the underlying data pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Vector_1a0faf6219a05311b84e05c4d19a1c3e7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* amrex::Vector&lt; T, Allocator &gt;::dataPtr</definition>
        <argsstring>() const </argsstring>
        <name>dataPtr</name>
        <briefdescription>
<para>get access to the underlying data pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long amrex::Vector&lt; T, Allocator &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" bodystart="54" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a thin wrapper around std::vector. Unlike vector, <ref refid="classamrex_1_1Vector_1a35ecf9c060d9d2b8f23cf60d088f1fca" kindref="member">Vector::operator[]</ref> provides bound checking when compiled with DEBUG=TRUE. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5128">
        <label>std::vector&lt; T, Allocator &gt;</label>
      </node>
      <node id="5127">
        <label>amrex::Vector&lt; T, Allocator &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5128" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5130">
        <label>std::vector&lt; T, Allocator &gt;</label>
      </node>
      <node id="5129">
        <label>amrex::Vector&lt; T, Allocator &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5130" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" line="32" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Vector.H" bodystart="29" bodyend="56"/>
    <listofallmembers>
      <member refid="classamrex_1_1Vector_1a314a950b356fb444c94b9f615ba0cd72" prot="public" virt="non-virtual"><scope>amrex::Vector</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1Vector_1a0faf6219a05311b84e05c4d19a1c3e7b" prot="public" virt="non-virtual"><scope>amrex::Vector</scope><name>dataPtr</name></member>
      <member refid="classamrex_1_1Vector_1a35ecf9c060d9d2b8f23cf60d088f1fca" prot="public" virt="non-virtual"><scope>amrex::Vector</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1Vector_1aac30959865d72ba3dc544400dae61abe" prot="public" virt="non-virtual"><scope>amrex::Vector</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" prot="public" virt="non-virtual"><scope>amrex::Vector</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
