<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1Cuda_1_1AsyncFab" kind="class" language="C++" prot="public">
    <compoundname>amrex::Cuda::AsyncFab</compoundname>
    <includes refid="AMReX__CudaAsyncFab_8H" local="no">AMReX_CudaAsyncFab.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Cuda_1_1AsyncFab_1a84ce56480a437f52fbc78569077d7937" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Cuda_1_1AsyncFabImpl" kindref="compound">AsyncFabImpl</ref> *</type>
        <definition>AsyncFabImpl* amrex::Cuda::AsyncFab::m_impl</definition>
        <argsstring></argsstring>
        <name>m_impl</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Cuda_1_1AsyncFab_1a6fec6bc5599dabca3a5fe4cc4e9bec33" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox* amrex::Cuda::AsyncFab::m_fab</definition>
        <argsstring></argsstring>
        <name>m_fab</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a2deb1b33f3803839a2340d82b84e428c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFab::AsyncFab</definition>
        <argsstring>()</argsstring>
        <name>AsyncFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="19" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a397b0187c4a428c69ef212c4c77b3272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFab::AsyncFab</definition>
        <argsstring>(Box const &amp;bx, int ncomp)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="20" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a1c4f3137ef0e14d2ba1cf997a5c44c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFab::AsyncFab</definition>
        <argsstring>(FArrayBox &amp;a_fab)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="21" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a4cb1a5cde5c2caa59afa12bc98d887f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFab::AsyncFab</definition>
        <argsstring>(FArrayBox &amp;a_fab, Box const &amp;bx, int comp)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>a_fab</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>bx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a6544da9f03b6cee20db6d25ae02826c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFab::AsyncFab</definition>
        <argsstring>(AsyncFab const &amp;rhs)=delete</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1AsyncFab" kindref="compound">AsyncFab</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a5994aa2bf230824d7c60a846f7b552c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Cuda::AsyncFab::AsyncFab</definition>
        <argsstring>(AsyncFab &amp;&amp;rhs)</argsstring>
        <name>AsyncFab</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1AsyncFab" kindref="compound">AsyncFab</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a33522be42ebac0c474d74fe4264160bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::Cuda::AsyncFab::~AsyncFab</definition>
        <argsstring>()</argsstring>
        <name>~AsyncFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a737c75e1f936fae0a591a5612bb56290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFab::operator=</definition>
        <argsstring>(AsyncFab const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1Cuda_1_1AsyncFab" kindref="compound">AsyncFab</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1afa202d6270245f079b901692f6e78f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFab::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="44" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="54" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1ac9c910fd95c17c1a1900fe7c80887b73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>AMREX_GPU_HOST_DEVICE FArrayBox* amrex::Cuda::AsyncFab::fabPtr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>fabPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1af710fc097c41bb7b4ee62d014a27e959" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE FArrayBox&amp; amrex::Cuda::AsyncFab::fab</definition>
        <argsstring>() const noexcept</argsstring>
        <name>fab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a8fee4e94fd0eb3bf4ac262dfbbc95de6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>FArrayBox &amp; amrex::Cuda::AsyncFab::hostFab</definition>
        <argsstring>() const noexcept</argsstring>
        <name>hostFab</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1aca9ad04fbd0aabd64207bcf9a2db8386" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real const  &gt;</type>
        <definition>Array4&lt; Real const  &gt; amrex::Cuda::AsyncFab::array</definition>
        <argsstring>() const noexcept</argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a0e1cbbc65610e25e63f058b2a54be04f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; Real &gt;</type>
        <definition>Array4&lt; Real &gt; amrex::Cuda::AsyncFab::array</definition>
        <argsstring>() noexcept</argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a57bd41b50a0815b1b61efa19aa7371ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFab::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Cuda_1_1AsyncFab_1a0712f671b06b89b82128f60597e5bb06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Cuda::AsyncFab::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="53" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="579">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="580" relation="public-inheritance">
        </childnode>
      </node>
      <node id="587">
        <label>amrex::Cuda::AsyncFabImpl</label>
        <link refid="classamrex_1_1Cuda_1_1AsyncFabImpl"/>
        <childnode refid="578" relation="usage">
          <edgelabel>m_cpu_fab_alias</edgelabel>
          <edgelabel>m_cpu_fab</edgelabel>
        </childnode>
      </node>
      <node id="580">
        <label>amrex::BaseFabData&lt; Real &gt;</label>
        <link refid="structamrex_1_1BaseFabData"/>
        <childnode refid="581" relation="public-inheritance">
        </childnode>
        <childnode refid="582" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="583">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="583" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="586">
        <label>Real</label>
      </node>
      <node id="582">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="583" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="584" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="584">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="585">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="581">
        <label>amrex::FabAllocator</label>
        <link refid="structamrex_1_1FabAllocator"/>
      </node>
      <node id="578">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="579" relation="public-inheritance">
        </childnode>
        <childnode refid="585" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="586" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="577">
        <label>amrex::Cuda::AsyncFab</label>
        <link refid="classamrex_1_1Cuda_1_1AsyncFab"/>
        <childnode refid="578" relation="usage">
          <edgelabel>m_fab</edgelabel>
        </childnode>
        <childnode refid="587" relation="usage">
          <edgelabel>m_impl</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" line="16" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CudaAsyncFab.H" bodystart="15" bodyend="58"/>
    <listofallmembers>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1aca9ad04fbd0aabd64207bcf9a2db8386" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>array</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a0e1cbbc65610e25e63f058b2a54be04f" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>array</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a2deb1b33f3803839a2340d82b84e428c" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a397b0187c4a428c69ef212c4c77b3272" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a1c4f3137ef0e14d2ba1cf997a5c44c97" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a4cb1a5cde5c2caa59afa12bc98d887f1" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a6544da9f03b6cee20db6d25ae02826c3" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a5994aa2bf230824d7c60a846f7b552c9" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>AsyncFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1afa202d6270245f079b901692f6e78f9e" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>clear</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1af710fc097c41bb7b4ee62d014a27e959" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>fab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1ac9c910fd95c17c1a1900fe7c80887b73" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>fabPtr</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a0712f671b06b89b82128f60597e5bb06" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a8fee4e94fd0eb3bf4ac262dfbbc95de6" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>hostFab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a57bd41b50a0815b1b61efa19aa7371ed" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a6fec6bc5599dabca3a5fe4cc4e9bec33" prot="private" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>m_fab</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a84ce56480a437f52fbc78569077d7937" prot="private" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>m_impl</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a737c75e1f936fae0a591a5612bb56290" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Cuda_1_1AsyncFab_1a33522be42ebac0c474d74fe4264160bb" prot="public" virt="non-virtual"><scope>amrex::Cuda::AsyncFab</scope><name>~AsyncFab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
